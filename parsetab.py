
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY BREAK COLON COMMA COMMENT DECREMENT DEF DIVIDE DOUBLE_EQUALS ELIF ELSE EQUALS FALSE FOR IF IN INCREMENT LIST LPAREN MINUS NONE NOT NP_ABS NP_ADD NP_COS NP_DOT_PRODUCT NP_EXP NP_LOG NP_LOG10 NP_POWER NP_SIGN NP_SIN NP_SQRT NP_SUBTRACT NP_SUM NUMBER OR PLUS POWER PRINT RANGE RETURN RPAREN SET_UP SET_UP_HOST SPACE STRING TIMES TRUE VARIABLE WHILEstatement : NUMBER AND NUMBER \n                     | NUMBER AND statement\n                     | statement AND NUMBER\n                     | statement AND statementstatement : NUMBER OR NUMBER \n                     | NUMBER OR statement\n                     | statement OR NUMBER\n                     | statement OR statementstatement : NOT NUMBER \n                     | NOT statementstatement : NUMBER POWER NUMBER \n                     | NUMBER POWER statement\n                     | statement POWER NUMBER\n                     | statement POWER statementstatement : INCREMENT NUMBER \n                     | INCREMENT statement\n                     | INCREMENT VARIABLEstatement : DECREMENT NUMBER \n                     | DECREMENT statement\n                     | DECREMENT VARIABLEstatement : NP_SIN LPAREN statement RPAREN\n                     | NP_SIN LPAREN NUMBER RPARENstatement : NP_COS LPAREN statement RPAREN\n                     | NP_COS LPAREN NUMBER RPARENstatement : PRINT LPAREN STRING RPAREN \n                     | PRINT LPAREN NUMBER RPAREN\n                     | PRINT LPAREN statement RPAREN\n                     | PRINT LPAREN VARIABLE RPARENstatement : NUMBER PLUS NUMBER \n                     | statement PLUS NUMBER\n                     | NUMBER PLUS statement\n                     | statement PLUS statementstatement : NUMBER MINUS NUMBER \n                     | statement MINUS NUMBER\n                     | NUMBER MINUS statement\n                     | statement MINUS statementstatement : NUMBER TIMES NUMBER \n                     | statement TIMES NUMBER\n                     | NUMBER TIMES statement\n                     | statement TIMES statementstatement : NUMBER DIVIDE NUMBER\n                     | statement DIVIDE NUMBER\n                     | NUMBER DIVIDE statement\n                     | statement DIVIDE statementstatement : LPAREN statement RPARENstatement : statement DOUBLE_EQUALS statement\n                     | NUMBER DOUBLE_EQUALS NUMBER\n                     | STRING DOUBLE_EQUALS STRING\n                     | statement DOUBLE_EQUALS NUMBER\n                     | NUMBER DOUBLE_EQUALS statement\n                     | statement DOUBLE_EQUALS STRING\n                     | STRING DOUBLE_EQUALS statement\n                     | STRING DOUBLE_EQUALS NUMBER\n                     | NUMBER DOUBLE_EQUALS STRINGstatement : IF statement COLON statementstatement : FOR VARIABLE IN RANGE LPAREN NUMBER RPAREN COLON statementstatement : VARIABLE EQUALS ARRAY LPAREN LIST RPARENstatement : VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPARENstatement : VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPARENstatement : VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPARENstatement : VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPARENstatement : '
    
_lr_action_items = {'NUMBER':([0,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,39,41,42,43,97,119,133,],[2,30,32,36,2,2,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,86,89,91,96,2,125,2,]),'NOT':([0,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,39,41,42,43,97,133,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'INCREMENT':([0,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,39,41,42,43,97,133,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'DECREMENT':([0,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,39,41,42,43,97,133,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'NP_SIN':([0,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,39,41,42,43,97,133,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'NP_COS':([0,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,39,41,42,43,97,133,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'PRINT':([0,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,39,41,42,43,97,133,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'LPAREN':([0,3,4,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,39,41,42,43,80,81,82,83,84,97,113,133,],[8,8,8,8,39,8,41,42,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,99,100,101,102,103,8,119,8,]),'STRING':([0,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,39,41,42,43,97,133,],[11,11,11,11,11,11,11,11,11,11,11,11,11,62,11,11,11,11,11,11,11,79,11,11,90,94,11,11,]),'IF':([0,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,39,41,42,43,97,133,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'FOR':([0,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,39,41,42,43,97,133,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'VARIABLE':([0,3,4,6,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,39,41,42,43,97,100,101,102,103,121,122,124,133,],[5,5,34,38,5,5,45,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,93,5,5,115,116,117,118,126,127,128,5,]),'AND':([0,1,2,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,86,87,88,89,91,92,94,95,96,97,104,105,106,107,108,109,110,111,112,120,123,130,131,132,133,134,],[-62,14,22,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,22,14,22,14,-17,22,14,-20,-62,14,-62,-62,-62,14,14,22,14,22,14,22,14,22,14,22,14,22,14,22,14,22,-51,22,14,22,14,22,14,22,14,22,14,22,14,22,14,22,14,-54,14,22,-45,14,22,22,14,-48,14,22,-62,-21,-22,-23,-24,-25,-26,-27,-28,14,-57,-60,-58,-59,-61,-62,14,]),'OR':([0,1,2,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,86,87,88,89,91,92,94,95,96,97,104,105,106,107,108,109,110,111,112,120,123,130,131,132,133,134,],[-62,15,23,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,23,15,23,15,-17,23,15,-20,-62,15,-62,-62,-62,15,15,23,15,23,15,23,15,23,15,23,15,23,15,23,15,23,-51,23,15,23,15,23,15,23,15,23,15,23,15,23,15,23,15,-54,15,23,-45,15,23,23,15,-48,15,23,-62,-21,-22,-23,-24,-25,-26,-27,-28,15,-57,-60,-58,-59,-61,-62,15,]),'POWER':([0,1,2,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,86,87,88,89,91,92,94,95,96,97,104,105,106,107,108,109,110,111,112,120,123,130,131,132,133,134,],[-62,16,24,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,24,16,24,16,-17,24,16,-20,-62,16,-62,-62,-62,16,16,24,16,24,16,24,16,24,16,24,16,24,16,24,16,24,-51,24,16,24,16,24,16,24,16,24,16,24,16,24,16,24,16,-54,16,24,-45,16,24,24,16,-48,16,24,-62,-21,-22,-23,-24,-25,-26,-27,-28,16,-57,-60,-58,-59,-61,-62,16,]),'PLUS':([0,1,2,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,86,87,88,89,91,92,94,95,96,97,104,105,106,107,108,109,110,111,112,120,123,130,131,132,133,134,],[-62,17,25,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,25,17,25,17,-17,25,17,-20,-62,17,-62,-62,-62,17,17,25,17,25,17,25,17,25,17,25,17,25,17,25,17,25,-51,25,17,25,17,25,17,25,17,25,17,25,17,25,17,25,17,-54,17,25,-45,17,25,25,17,-48,17,25,-62,-21,-22,-23,-24,-25,-26,-27,-28,17,-57,-60,-58,-59,-61,-62,17,]),'MINUS':([0,1,2,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,86,87,88,89,91,92,94,95,96,97,104,105,106,107,108,109,110,111,112,120,123,130,131,132,133,134,],[-62,18,26,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,26,18,26,18,-17,26,18,-20,-62,18,-62,-62,-62,18,18,26,18,26,18,26,18,26,18,26,18,26,18,26,18,26,-51,26,18,26,18,26,18,26,18,26,18,26,18,26,18,26,18,-54,18,26,-45,18,26,26,18,-48,18,26,-62,-21,-22,-23,-24,-25,-26,-27,-28,18,-57,-60,-58,-59,-61,-62,18,]),'TIMES':([0,1,2,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,86,87,88,89,91,92,94,95,96,97,104,105,106,107,108,109,110,111,112,120,123,130,131,132,133,134,],[-62,19,27,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,27,19,27,19,-17,27,19,-20,-62,19,-62,-62,-62,19,19,27,19,27,19,27,19,27,19,27,19,27,19,27,19,27,-51,27,19,27,19,27,19,27,19,27,19,27,19,27,19,27,19,-54,19,27,-45,19,27,27,19,-48,19,27,-62,-21,-22,-23,-24,-25,-26,-27,-28,19,-57,-60,-58,-59,-61,-62,19,]),'DIVIDE':([0,1,2,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,86,87,88,89,91,92,94,95,96,97,104,105,106,107,108,109,110,111,112,120,123,130,131,132,133,134,],[-62,20,28,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,28,20,28,20,-17,28,20,-20,-62,20,-62,-62,-62,20,20,28,20,28,20,28,20,28,20,28,20,28,20,28,20,28,-51,28,20,28,20,28,20,28,20,28,20,28,20,28,20,28,20,-54,20,28,-45,20,28,28,20,-48,20,28,-62,-21,-22,-23,-24,-25,-26,-27,-28,20,-57,-60,-58,-59,-61,-62,20,]),'DOUBLE_EQUALS':([0,1,2,3,4,6,8,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,86,87,88,89,90,91,92,94,95,96,97,104,105,106,107,108,109,110,111,112,120,123,130,131,132,133,134,],[-62,21,29,-62,-62,-62,-62,43,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,29,21,29,21,-17,29,21,-20,-62,21,-62,-62,-62,21,21,29,21,29,21,29,21,29,21,29,21,29,21,29,21,29,43,29,21,29,21,29,21,29,21,29,21,29,21,29,21,29,21,43,21,29,-45,21,29,43,29,21,43,21,29,-62,-21,-22,-23,-24,-25,-26,-27,-28,21,-57,-60,-58,-59,-61,-62,21,]),'$end':([0,1,3,4,6,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,94,95,96,97,104,105,106,107,108,109,110,111,112,120,123,130,131,132,133,134,],[-62,0,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-9,-10,-15,-16,-17,-18,-19,-20,-62,-4,-3,-8,-7,-14,-13,-32,-30,-36,-34,-40,-38,-44,-42,-46,-49,-51,-1,-2,-5,-6,-11,-12,-29,-31,-33,-35,-37,-39,-41,-43,-47,-50,-54,-45,-48,-52,-53,-62,-21,-22,-23,-24,-25,-26,-27,-28,-55,-57,-60,-58,-59,-61,-62,-56,]),'RPAREN':([3,4,6,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,104,105,106,107,108,109,110,111,112,114,117,120,123,125,126,127,128,130,131,132,133,134,],[-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-9,-10,-15,-16,-17,-18,-19,-20,-62,87,-62,-62,-62,-4,-3,-8,-7,-14,-13,-32,-30,-36,-34,-40,-38,-44,-42,-46,-49,-51,-1,-2,-5,-6,-11,-12,-29,-31,-33,-35,-37,-39,-41,-43,-47,-50,-54,104,105,-45,106,107,108,109,110,111,-48,-52,-53,-62,-21,-22,-23,-24,-25,-26,-27,-28,-55,120,123,-57,-60,129,130,131,132,-58,-59,-61,-62,-56,]),'COLON':([3,4,6,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,94,95,96,97,104,105,106,107,108,109,110,111,112,120,123,129,130,131,132,133,134,],[-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-62,-9,-10,-15,-16,-17,-18,-19,-20,-62,97,-4,-3,-8,-7,-14,-13,-32,-30,-36,-34,-40,-38,-44,-42,-46,-49,-51,-1,-2,-5,-6,-11,-12,-29,-31,-33,-35,-37,-39,-41,-43,-47,-50,-54,-45,-48,-52,-53,-62,-21,-22,-23,-24,-25,-26,-27,-28,-55,-57,-60,133,-58,-59,-61,-62,-56,]),'EQUALS':([5,34,38,93,],[35,35,35,35,]),'ARRAY':([35,],[80,]),'NP_ADD':([35,],[81,]),'NP_SUBTRACT':([35,],[82,]),'NP_SUM':([35,],[83,]),'NP_DOT_PRODUCT':([35,],[84,]),'IN':([45,],[98,]),'RANGE':([98,],[113,]),'LIST':([99,],[114,]),'COMMA':([115,116,118,],[121,122,124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,3,4,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,39,41,42,43,97,133,],[1,31,33,37,40,44,46,48,50,52,54,56,58,60,64,66,68,70,72,74,76,78,85,88,92,95,112,134,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NUMBER AND NUMBER','statement',3,'p_expression_and','parsing_yacc.py',17),
  ('statement -> NUMBER AND statement','statement',3,'p_expression_and','parsing_yacc.py',18),
  ('statement -> statement AND NUMBER','statement',3,'p_expression_and','parsing_yacc.py',19),
  ('statement -> statement AND statement','statement',3,'p_expression_and','parsing_yacc.py',20),
  ('statement -> NUMBER OR NUMBER','statement',3,'p_expression_or','parsing_yacc.py',29),
  ('statement -> NUMBER OR statement','statement',3,'p_expression_or','parsing_yacc.py',30),
  ('statement -> statement OR NUMBER','statement',3,'p_expression_or','parsing_yacc.py',31),
  ('statement -> statement OR statement','statement',3,'p_expression_or','parsing_yacc.py',32),
  ('statement -> NOT NUMBER','statement',2,'p_expression_not','parsing_yacc.py',42),
  ('statement -> NOT statement','statement',2,'p_expression_not','parsing_yacc.py',43),
  ('statement -> NUMBER POWER NUMBER','statement',3,'p_expression_exponentiation','parsing_yacc.py',53),
  ('statement -> NUMBER POWER statement','statement',3,'p_expression_exponentiation','parsing_yacc.py',54),
  ('statement -> statement POWER NUMBER','statement',3,'p_expression_exponentiation','parsing_yacc.py',55),
  ('statement -> statement POWER statement','statement',3,'p_expression_exponentiation','parsing_yacc.py',56),
  ('statement -> INCREMENT NUMBER','statement',2,'p_expression_increment','parsing_yacc.py',66),
  ('statement -> INCREMENT statement','statement',2,'p_expression_increment','parsing_yacc.py',67),
  ('statement -> INCREMENT VARIABLE','statement',2,'p_expression_increment','parsing_yacc.py',68),
  ('statement -> DECREMENT NUMBER','statement',2,'p_expression_decrement','parsing_yacc.py',78),
  ('statement -> DECREMENT statement','statement',2,'p_expression_decrement','parsing_yacc.py',79),
  ('statement -> DECREMENT VARIABLE','statement',2,'p_expression_decrement','parsing_yacc.py',80),
  ('statement -> NP_SIN LPAREN statement RPAREN','statement',4,'p_expression_np_sin','parsing_yacc.py',88),
  ('statement -> NP_SIN LPAREN NUMBER RPAREN','statement',4,'p_expression_np_sin','parsing_yacc.py',89),
  ('statement -> NP_COS LPAREN statement RPAREN','statement',4,'p_expression_np_cos','parsing_yacc.py',98),
  ('statement -> NP_COS LPAREN NUMBER RPAREN','statement',4,'p_expression_np_cos','parsing_yacc.py',99),
  ('statement -> PRINT LPAREN STRING RPAREN','statement',4,'p_print_statement','parsing_yacc.py',109),
  ('statement -> PRINT LPAREN NUMBER RPAREN','statement',4,'p_print_statement','parsing_yacc.py',110),
  ('statement -> PRINT LPAREN statement RPAREN','statement',4,'p_print_statement','parsing_yacc.py',111),
  ('statement -> PRINT LPAREN VARIABLE RPAREN','statement',4,'p_print_statement','parsing_yacc.py',112),
  ('statement -> NUMBER PLUS NUMBER','statement',3,'p_expression_plus','parsing_yacc.py',129),
  ('statement -> statement PLUS NUMBER','statement',3,'p_expression_plus','parsing_yacc.py',130),
  ('statement -> NUMBER PLUS statement','statement',3,'p_expression_plus','parsing_yacc.py',131),
  ('statement -> statement PLUS statement','statement',3,'p_expression_plus','parsing_yacc.py',132),
  ('statement -> NUMBER MINUS NUMBER','statement',3,'p_expression_minus','parsing_yacc.py',140),
  ('statement -> statement MINUS NUMBER','statement',3,'p_expression_minus','parsing_yacc.py',141),
  ('statement -> NUMBER MINUS statement','statement',3,'p_expression_minus','parsing_yacc.py',142),
  ('statement -> statement MINUS statement','statement',3,'p_expression_minus','parsing_yacc.py',143),
  ('statement -> NUMBER TIMES NUMBER','statement',3,'p_expression_times','parsing_yacc.py',149),
  ('statement -> statement TIMES NUMBER','statement',3,'p_expression_times','parsing_yacc.py',150),
  ('statement -> NUMBER TIMES statement','statement',3,'p_expression_times','parsing_yacc.py',151),
  ('statement -> statement TIMES statement','statement',3,'p_expression_times','parsing_yacc.py',152),
  ('statement -> NUMBER DIVIDE NUMBER','statement',3,'p_expression_divide','parsing_yacc.py',158),
  ('statement -> statement DIVIDE NUMBER','statement',3,'p_expression_divide','parsing_yacc.py',159),
  ('statement -> NUMBER DIVIDE statement','statement',3,'p_expression_divide','parsing_yacc.py',160),
  ('statement -> statement DIVIDE statement','statement',3,'p_expression_divide','parsing_yacc.py',161),
  ('statement -> LPAREN statement RPAREN','statement',3,'p_expression_parenthesis','parsing_yacc.py',167),
  ('statement -> statement DOUBLE_EQUALS statement','statement',3,'p_expression_equals','parsing_yacc.py',173),
  ('statement -> NUMBER DOUBLE_EQUALS NUMBER','statement',3,'p_expression_equals','parsing_yacc.py',174),
  ('statement -> STRING DOUBLE_EQUALS STRING','statement',3,'p_expression_equals','parsing_yacc.py',175),
  ('statement -> statement DOUBLE_EQUALS NUMBER','statement',3,'p_expression_equals','parsing_yacc.py',176),
  ('statement -> NUMBER DOUBLE_EQUALS statement','statement',3,'p_expression_equals','parsing_yacc.py',177),
  ('statement -> statement DOUBLE_EQUALS STRING','statement',3,'p_expression_equals','parsing_yacc.py',178),
  ('statement -> STRING DOUBLE_EQUALS statement','statement',3,'p_expression_equals','parsing_yacc.py',179),
  ('statement -> STRING DOUBLE_EQUALS NUMBER','statement',3,'p_expression_equals','parsing_yacc.py',180),
  ('statement -> NUMBER DOUBLE_EQUALS STRING','statement',3,'p_expression_equals','parsing_yacc.py',181),
  ('statement -> IF statement COLON statement','statement',4,'p_if_statement','parsing_yacc.py',187),
  ('statement -> FOR VARIABLE IN RANGE LPAREN NUMBER RPAREN COLON statement','statement',9,'p_for_loop','parsing_yacc.py',198),
  ('statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN','statement',6,'p_numpy_array','parsing_yacc.py',210),
  ('statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN','statement',8,'p_numpy_add','parsing_yacc.py',236),
  ('statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN','statement',8,'p_numpy_subtract','parsing_yacc.py',251),
  ('statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN','statement',6,'p_numpy_sum','parsing_yacc.py',266),
  ('statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN','statement',8,'p_numpy_dot_product','parsing_yacc.py',281),
  ('statement -> <empty>','statement',0,'p_space','parsing_yacc.py',295),
]
