
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMENT DEF DIVIDE DOUBLE_EQUALS ELIF ELSE EQUALS FALSE FOR IF IN LPAREN MINUS NONE NUMBER PLUS PRINT RANGE RETURN RPAREN STRING TIMES TRUE WHILEstatement : PRINT LPAREN STRING RPARENstatement : NUMBER PLUS NUMBERstatement : NUMBER MINUS NUMBERstatement : NUMBER TIMES NUMBERstatement : NUMBER DIVIDE NUMBERstatement : LPAREN statement RPAREN'
    
_lr_action_items = {'PRINT':([0,3,],[2,2,]),'NUMBER':([0,3,7,8,9,10,],[4,4,13,14,15,16,]),'LPAREN':([0,2,3,],[3,5,3,]),'$end':([1,12,13,14,15,16,17,],[0,-6,-2,-3,-4,-5,-1,]),'PLUS':([4,],[7,]),'MINUS':([4,],[8,]),'TIMES':([4,],[9,]),'DIVIDE':([4,],[10,]),'STRING':([5,],[11,]),'RPAREN':([6,11,12,13,14,15,16,17,],[12,17,-6,-2,-3,-4,-5,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,3,],[1,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> PRINT LPAREN STRING RPAREN','statement',4,'p_print_statement','parsing_yacc.py',14),
  ('statement -> NUMBER PLUS NUMBER','statement',3,'p_expression_plus','parsing_yacc.py',31),
  ('statement -> NUMBER MINUS NUMBER','statement',3,'p_expression_minus','parsing_yacc.py',39),
  ('statement -> NUMBER TIMES NUMBER','statement',3,'p_expression_times','parsing_yacc.py',45),
  ('statement -> NUMBER DIVIDE NUMBER','statement',3,'p_expression_divide','parsing_yacc.py',51),
  ('statement -> LPAREN statement RPAREN','statement',3,'p_expression_parenthesis','parsing_yacc.py',57),
]
