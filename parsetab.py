
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY BREAK COLON COMMA COMMENT DECREMENT DEF DIVIDE DOUBLE_EQUALS ELIF ELSE EQUALS FALSE FOR IF IN INCREMENT LIST LPAREN MINUS NONE NOT NP_ABS NP_ADD NP_COS NP_DOT_PRODUCT NP_EXP NP_LOG NP_LOG10 NP_POWER NP_SIGN NP_SIN NP_SQRT NP_SUBTRACT NP_SUM NUMBER OR PLUS POWER PRINT RANGE RETURN RPAREN SET_UP SET_UP_HOST SPACE STRING TIMES TRUE VARIABLE WHILEstatement : NUMBER AND NUMBER \n                     | NUMBER AND statement\n                     | statement AND NUMBER\n                     | statement AND statementstatement : NUMBER OR NUMBER \n                     | NUMBER OR statement\n                     | statement OR NUMBER\n                     | statement OR statementstatement : NOT NUMBER \n                     | NOT statementstatement : NUMBER POWER NUMBER \n                     | NUMBER POWER statement\n                     | statement POWER NUMBER\n                     | statement POWER statementstatement : INCREMENT NUMBER \n                     | INCREMENT statement\n                     | INCREMENT VARIABLEstatement : DECREMENT NUMBER \n                     | DECREMENT statement\n                     | DECREMENT VARIABLEstatement : NP_SIN LPAREN statement RPARENstatement : PRINT LPAREN STRING RPAREN \n                     | PRINT LPAREN NUMBER RPAREN\n                     | PRINT LPAREN statement RPARENstatement : NUMBER PLUS NUMBER \n                     | statement PLUS NUMBER\n                     | NUMBER PLUS statement\n                     | statement PLUS statementstatement : NUMBER MINUS NUMBER \n                     | statement MINUS NUMBER\n                     | NUMBER MINUS statement\n                     | statement MINUS statementstatement : NUMBER TIMES NUMBER \n                     | statement TIMES NUMBER\n                     | NUMBER TIMES statement\n                     | statement TIMES statementstatement : NUMBER DIVIDE NUMBER\n                     | statement DIVIDE NUMBER\n                     | NUMBER DIVIDE statement\n                     | statement DIVIDE statementstatement : LPAREN statement RPARENstatement : statement DOUBLE_EQUALS statement\n                     | NUMBER DOUBLE_EQUALS NUMBER\n                     | STRING DOUBLE_EQUALS STRING\n                     | statement DOUBLE_EQUALS NUMBER\n                     | NUMBER DOUBLE_EQUALS statement\n                     | statement DOUBLE_EQUALS STRING\n                     | STRING DOUBLE_EQUALS statement\n                     | STRING DOUBLE_EQUALS NUMBER\n                     | NUMBER DOUBLE_EQUALS STRINGstatement : IF statement COLON statementstatement : VARIABLE EQUALS ARRAY LPAREN LIST RPARENstatement : VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPARENstatement : VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPARENstatement : VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPARENstatement : VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPARENstatement : '
    
_lr_action_items = {'NUMBER':([0,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,37,39,40,89,],[2,28,30,34,2,2,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,2,84,88,2,]),'NOT':([0,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,37,39,40,89,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'INCREMENT':([0,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,37,39,40,89,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'DECREMENT':([0,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,37,39,40,89,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'NP_SIN':([0,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,37,39,40,89,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'PRINT':([0,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,37,39,40,89,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LPAREN':([0,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,37,39,40,76,77,78,79,80,89,],[8,8,8,8,37,8,39,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,90,91,92,93,94,8,]),'STRING':([0,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,37,39,40,89,],[10,10,10,10,10,10,10,10,10,10,10,10,10,58,10,10,10,10,10,10,10,75,10,83,86,10,]),'IF':([0,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,37,39,40,89,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'VARIABLE':([0,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,37,39,40,89,91,92,93,94,106,107,109,],[5,5,32,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,101,102,103,104,110,111,112,]),'AND':([0,1,2,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,82,84,85,86,87,88,89,95,96,97,98,99,105,108,113,114,115,],[-57,12,20,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,20,12,20,12,-17,20,12,-20,-57,12,-57,-57,12,12,20,12,20,12,20,12,20,12,20,12,20,12,20,12,20,-47,20,12,20,12,20,12,20,12,20,12,20,12,20,12,20,12,-50,12,-41,20,12,-44,12,20,-57,-21,-22,-23,-24,12,-52,-55,-53,-54,-56,]),'OR':([0,1,2,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,82,84,85,86,87,88,89,95,96,97,98,99,105,108,113,114,115,],[-57,13,21,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,21,13,21,13,-17,21,13,-20,-57,13,-57,-57,13,13,21,13,21,13,21,13,21,13,21,13,21,13,21,13,21,-47,21,13,21,13,21,13,21,13,21,13,21,13,21,13,21,13,-50,13,-41,21,13,-44,13,21,-57,-21,-22,-23,-24,13,-52,-55,-53,-54,-56,]),'POWER':([0,1,2,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,82,84,85,86,87,88,89,95,96,97,98,99,105,108,113,114,115,],[-57,14,22,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,22,14,22,14,-17,22,14,-20,-57,14,-57,-57,14,14,22,14,22,14,22,14,22,14,22,14,22,14,22,14,22,-47,22,14,22,14,22,14,22,14,22,14,22,14,22,14,22,14,-50,14,-41,22,14,-44,14,22,-57,-21,-22,-23,-24,14,-52,-55,-53,-54,-56,]),'PLUS':([0,1,2,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,82,84,85,86,87,88,89,95,96,97,98,99,105,108,113,114,115,],[-57,15,23,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,23,15,23,15,-17,23,15,-20,-57,15,-57,-57,15,15,23,15,23,15,23,15,23,15,23,15,23,15,23,15,23,-47,23,15,23,15,23,15,23,15,23,15,23,15,23,15,23,15,-50,15,-41,23,15,-44,15,23,-57,-21,-22,-23,-24,15,-52,-55,-53,-54,-56,]),'MINUS':([0,1,2,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,82,84,85,86,87,88,89,95,96,97,98,99,105,108,113,114,115,],[-57,16,24,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,24,16,24,16,-17,24,16,-20,-57,16,-57,-57,16,16,24,16,24,16,24,16,24,16,24,16,24,16,24,16,24,-47,24,16,24,16,24,16,24,16,24,16,24,16,24,16,24,16,-50,16,-41,24,16,-44,16,24,-57,-21,-22,-23,-24,16,-52,-55,-53,-54,-56,]),'TIMES':([0,1,2,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,82,84,85,86,87,88,89,95,96,97,98,99,105,108,113,114,115,],[-57,17,25,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,25,17,25,17,-17,25,17,-20,-57,17,-57,-57,17,17,25,17,25,17,25,17,25,17,25,17,25,17,25,17,25,-47,25,17,25,17,25,17,25,17,25,17,25,17,25,17,25,17,-50,17,-41,25,17,-44,17,25,-57,-21,-22,-23,-24,17,-52,-55,-53,-54,-56,]),'DIVIDE':([0,1,2,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,82,84,85,86,87,88,89,95,96,97,98,99,105,108,113,114,115,],[-57,18,26,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,26,18,26,18,-17,26,18,-20,-57,18,-57,-57,18,18,26,18,26,18,26,18,26,18,26,18,26,18,26,18,26,-47,26,18,26,18,26,18,26,18,26,18,26,18,26,18,26,18,-50,18,-41,26,18,-44,18,26,-57,-21,-22,-23,-24,18,-52,-55,-53,-54,-56,]),'DOUBLE_EQUALS':([0,1,2,3,4,6,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,82,83,84,85,86,87,88,89,95,96,97,98,99,105,108,113,114,115,],[-57,19,27,-57,-57,-57,-57,40,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,27,19,27,19,-17,27,19,-20,-57,19,-57,-57,19,19,27,19,27,19,27,19,27,19,27,19,27,19,27,19,27,40,27,19,27,19,27,19,27,19,27,19,27,19,27,19,27,19,40,19,-41,40,27,19,40,19,27,-57,-21,-22,-23,-24,19,-52,-55,-53,-54,-56,]),'$end':([0,1,3,4,6,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,82,86,87,88,89,95,96,97,98,99,105,108,113,114,115,],[-57,0,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-9,-10,-15,-16,-17,-18,-19,-20,-57,-4,-3,-8,-7,-14,-13,-28,-26,-32,-30,-36,-34,-40,-38,-42,-45,-47,-1,-2,-5,-6,-11,-12,-25,-27,-29,-31,-33,-35,-37,-39,-43,-46,-50,-41,-44,-48,-49,-57,-21,-22,-23,-24,-51,-52,-55,-53,-54,-56,]),'RPAREN':([3,4,6,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,82,83,84,85,86,87,88,89,95,96,97,98,99,100,103,105,108,110,111,112,113,114,115,],[-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-9,-10,-15,-16,-17,-18,-19,-20,-57,82,-57,-57,-4,-3,-8,-7,-14,-13,-28,-26,-32,-30,-36,-34,-40,-38,-42,-45,-47,-1,-2,-5,-6,-11,-12,-25,-27,-29,-31,-33,-35,-37,-39,-43,-46,-50,95,-41,96,97,98,-44,-48,-49,-57,-21,-22,-23,-24,-51,105,108,-52,-55,113,114,115,-53,-54,-56,]),'COLON':([3,4,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,82,86,87,88,89,95,96,97,98,99,105,108,113,114,115,],[-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-9,-10,-15,-16,-17,-18,-19,-20,-57,89,-4,-3,-8,-7,-14,-13,-28,-26,-32,-30,-36,-34,-40,-38,-42,-45,-47,-1,-2,-5,-6,-11,-12,-25,-27,-29,-31,-33,-35,-37,-39,-43,-46,-50,-41,-44,-48,-49,-57,-21,-22,-23,-24,-51,-52,-55,-53,-54,-56,]),'EQUALS':([5,32,36,],[33,33,33,]),'ARRAY':([33,],[76,]),'NP_ADD':([33,],[77,]),'NP_SUBTRACT':([33,],[78,]),'NP_SUM':([33,],[79,]),'NP_DOT_PRODUCT':([33,],[80,]),'LIST':([90,],[100,]),'COMMA':([101,102,104,],[106,107,109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,3,4,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,37,39,40,89,],[1,29,31,35,38,41,42,44,46,48,50,52,54,56,60,62,64,66,68,70,72,74,81,85,87,99,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NUMBER AND NUMBER','statement',3,'p_expression_and','parsing_yacc.py',19),
  ('statement -> NUMBER AND statement','statement',3,'p_expression_and','parsing_yacc.py',20),
  ('statement -> statement AND NUMBER','statement',3,'p_expression_and','parsing_yacc.py',21),
  ('statement -> statement AND statement','statement',3,'p_expression_and','parsing_yacc.py',22),
  ('statement -> NUMBER OR NUMBER','statement',3,'p_expression_or','parsing_yacc.py',31),
  ('statement -> NUMBER OR statement','statement',3,'p_expression_or','parsing_yacc.py',32),
  ('statement -> statement OR NUMBER','statement',3,'p_expression_or','parsing_yacc.py',33),
  ('statement -> statement OR statement','statement',3,'p_expression_or','parsing_yacc.py',34),
  ('statement -> NOT NUMBER','statement',2,'p_expression_not','parsing_yacc.py',44),
  ('statement -> NOT statement','statement',2,'p_expression_not','parsing_yacc.py',45),
  ('statement -> NUMBER POWER NUMBER','statement',3,'p_expression_exponentiation','parsing_yacc.py',55),
  ('statement -> NUMBER POWER statement','statement',3,'p_expression_exponentiation','parsing_yacc.py',56),
  ('statement -> statement POWER NUMBER','statement',3,'p_expression_exponentiation','parsing_yacc.py',57),
  ('statement -> statement POWER statement','statement',3,'p_expression_exponentiation','parsing_yacc.py',58),
  ('statement -> INCREMENT NUMBER','statement',2,'p_expression_increment','parsing_yacc.py',68),
  ('statement -> INCREMENT statement','statement',2,'p_expression_increment','parsing_yacc.py',69),
  ('statement -> INCREMENT VARIABLE','statement',2,'p_expression_increment','parsing_yacc.py',70),
  ('statement -> DECREMENT NUMBER','statement',2,'p_expression_decrement','parsing_yacc.py',80),
  ('statement -> DECREMENT statement','statement',2,'p_expression_decrement','parsing_yacc.py',81),
  ('statement -> DECREMENT VARIABLE','statement',2,'p_expression_decrement','parsing_yacc.py',82),
  ('statement -> NP_SIN LPAREN statement RPAREN','statement',4,'p_expression_np_sin','parsing_yacc.py',90),
  ('statement -> PRINT LPAREN STRING RPAREN','statement',4,'p_print_statement','parsing_yacc.py',100),
  ('statement -> PRINT LPAREN NUMBER RPAREN','statement',4,'p_print_statement','parsing_yacc.py',101),
  ('statement -> PRINT LPAREN statement RPAREN','statement',4,'p_print_statement','parsing_yacc.py',102),
  ('statement -> NUMBER PLUS NUMBER','statement',3,'p_expression_plus','parsing_yacc.py',119),
  ('statement -> statement PLUS NUMBER','statement',3,'p_expression_plus','parsing_yacc.py',120),
  ('statement -> NUMBER PLUS statement','statement',3,'p_expression_plus','parsing_yacc.py',121),
  ('statement -> statement PLUS statement','statement',3,'p_expression_plus','parsing_yacc.py',122),
  ('statement -> NUMBER MINUS NUMBER','statement',3,'p_expression_minus','parsing_yacc.py',130),
  ('statement -> statement MINUS NUMBER','statement',3,'p_expression_minus','parsing_yacc.py',131),
  ('statement -> NUMBER MINUS statement','statement',3,'p_expression_minus','parsing_yacc.py',132),
  ('statement -> statement MINUS statement','statement',3,'p_expression_minus','parsing_yacc.py',133),
  ('statement -> NUMBER TIMES NUMBER','statement',3,'p_expression_times','parsing_yacc.py',139),
  ('statement -> statement TIMES NUMBER','statement',3,'p_expression_times','parsing_yacc.py',140),
  ('statement -> NUMBER TIMES statement','statement',3,'p_expression_times','parsing_yacc.py',141),
  ('statement -> statement TIMES statement','statement',3,'p_expression_times','parsing_yacc.py',142),
  ('statement -> NUMBER DIVIDE NUMBER','statement',3,'p_expression_divide','parsing_yacc.py',148),
  ('statement -> statement DIVIDE NUMBER','statement',3,'p_expression_divide','parsing_yacc.py',149),
  ('statement -> NUMBER DIVIDE statement','statement',3,'p_expression_divide','parsing_yacc.py',150),
  ('statement -> statement DIVIDE statement','statement',3,'p_expression_divide','parsing_yacc.py',151),
  ('statement -> LPAREN statement RPAREN','statement',3,'p_expression_parenthesis','parsing_yacc.py',157),
  ('statement -> statement DOUBLE_EQUALS statement','statement',3,'p_expression_equals','parsing_yacc.py',163),
  ('statement -> NUMBER DOUBLE_EQUALS NUMBER','statement',3,'p_expression_equals','parsing_yacc.py',164),
  ('statement -> STRING DOUBLE_EQUALS STRING','statement',3,'p_expression_equals','parsing_yacc.py',165),
  ('statement -> statement DOUBLE_EQUALS NUMBER','statement',3,'p_expression_equals','parsing_yacc.py',166),
  ('statement -> NUMBER DOUBLE_EQUALS statement','statement',3,'p_expression_equals','parsing_yacc.py',167),
  ('statement -> statement DOUBLE_EQUALS STRING','statement',3,'p_expression_equals','parsing_yacc.py',168),
  ('statement -> STRING DOUBLE_EQUALS statement','statement',3,'p_expression_equals','parsing_yacc.py',169),
  ('statement -> STRING DOUBLE_EQUALS NUMBER','statement',3,'p_expression_equals','parsing_yacc.py',170),
  ('statement -> NUMBER DOUBLE_EQUALS STRING','statement',3,'p_expression_equals','parsing_yacc.py',171),
  ('statement -> IF statement COLON statement','statement',4,'p_if_statement','parsing_yacc.py',177),
  ('statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN','statement',6,'p_numpy_array','parsing_yacc.py',189),
  ('statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN','statement',8,'p_numpy_add','parsing_yacc.py',215),
  ('statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN','statement',8,'p_numpy_subtract','parsing_yacc.py',231),
  ('statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN','statement',6,'p_numpy_sum','parsing_yacc.py',247),
  ('statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN','statement',8,'p_numpy_dot_product','parsing_yacc.py',263),
  ('statement -> <empty>','statement',0,'p_space','parsing_yacc.py',277),
]
