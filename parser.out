Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    COMMENT
    DEF
    ELIF
    ELSE
    EQUALS
    FALSE
    FOR
    IN
    NONE
    NP_ADD
    NP_DOT_PRODUCT
    NP_SUBTRACT
    NP_SUM
    RANGE
    RETURN
    TRUE
    WHILE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> PRINT LPAREN STRING RPAREN
Rule 2     statement -> PRINT LPAREN NUMBER RPAREN
Rule 3     statement -> PRINT LPAREN statement RPAREN
Rule 4     statement -> NUMBER PLUS NUMBER
Rule 5     statement -> statement PLUS NUMBER
Rule 6     statement -> NUMBER PLUS statement
Rule 7     statement -> statement PLUS statement
Rule 8     statement -> NUMBER MINUS NUMBER
Rule 9     statement -> statement MINUS NUMBER
Rule 10    statement -> NUMBER MINUS statement
Rule 11    statement -> statement MINUS statement
Rule 12    statement -> NUMBER TIMES NUMBER
Rule 13    statement -> statement TIMES NUMBER
Rule 14    statement -> NUMBER TIMES statement
Rule 15    statement -> statement TIMES statement
Rule 16    statement -> NUMBER DIVIDE NUMBER
Rule 17    statement -> statement DIVIDE NUMBER
Rule 18    statement -> NUMBER DIVIDE statement
Rule 19    statement -> statement DIVIDE statement
Rule 20    statement -> LPAREN statement RPAREN
Rule 21    statement -> statement DOUBLE_EQUALS statement
Rule 22    statement -> NUMBER DOUBLE_EQUALS NUMBER
Rule 23    statement -> STRING DOUBLE_EQUALS STRING
Rule 24    statement -> statement DOUBLE_EQUALS NUMBER
Rule 25    statement -> NUMBER DOUBLE_EQUALS statement
Rule 26    statement -> statement DOUBLE_EQUALS STRING
Rule 27    statement -> STRING DOUBLE_EQUALS statement
Rule 28    statement -> STRING DOUBLE_EQUALS NUMBER
Rule 29    statement -> NUMBER DOUBLE_EQUALS STRING
Rule 30    statement -> IF statement COLON statement
Rule 31    statement -> ARRAY LPAREN LIST RPAREN

Terminals, with rules where they appear

ARRAY                : 31
COLON                : 30
COMMA                : 
COMMENT              : 
DEF                  : 
DIVIDE               : 16 17 18 19
DOUBLE_EQUALS        : 21 22 23 24 25 26 27 28 29
ELIF                 : 
ELSE                 : 
EQUALS               : 
FALSE                : 
FOR                  : 
IF                   : 30
IN                   : 
LIST                 : 31
LPAREN               : 1 2 3 20 31
MINUS                : 8 9 10 11
NONE                 : 
NP_ADD               : 
NP_DOT_PRODUCT       : 
NP_SUBTRACT          : 
NP_SUM               : 
NUMBER               : 2 4 4 5 6 8 8 9 10 12 12 13 14 16 16 17 18 22 22 24 25 28 29
PLUS                 : 4 5 6 7
PRINT                : 1 2 3
RANGE                : 
RETURN               : 
RPAREN               : 1 2 3 20 31
STRING               : 1 23 23 26 27 28 29
TIMES                : 12 13 14 15
TRUE                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

statement            : 3 5 6 7 7 9 10 11 11 13 14 15 15 17 18 19 19 20 21 21 24 25 26 27 30 30 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    PRINT           shift and go to state 2
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 3
    STRING          shift and go to state 4
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12


state 2

    (1) statement -> PRINT . LPAREN STRING RPAREN
    (2) statement -> PRINT . LPAREN NUMBER RPAREN
    (3) statement -> PRINT . LPAREN statement RPAREN

    LPAREN          shift and go to state 13


state 3

    (20) statement -> LPAREN . statement RPAREN
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    PRINT           shift and go to state 2
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 3
    STRING          shift and go to state 4
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 14

state 4

    (23) statement -> STRING . DOUBLE_EQUALS STRING
    (27) statement -> STRING . DOUBLE_EQUALS statement
    (28) statement -> STRING . DOUBLE_EQUALS NUMBER

    DOUBLE_EQUALS   shift and go to state 15


state 5

    (4) statement -> NUMBER . PLUS NUMBER
    (6) statement -> NUMBER . PLUS statement
    (8) statement -> NUMBER . MINUS NUMBER
    (10) statement -> NUMBER . MINUS statement
    (12) statement -> NUMBER . TIMES NUMBER
    (14) statement -> NUMBER . TIMES statement
    (16) statement -> NUMBER . DIVIDE NUMBER
    (18) statement -> NUMBER . DIVIDE statement
    (22) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (25) statement -> NUMBER . DOUBLE_EQUALS statement
    (29) statement -> NUMBER . DOUBLE_EQUALS STRING

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    DOUBLE_EQUALS   shift and go to state 20


state 6

    (30) statement -> IF . statement COLON statement
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    PRINT           shift and go to state 2
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 3
    STRING          shift and go to state 4
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 21

state 7

    (31) statement -> ARRAY . LPAREN LIST RPAREN

    LPAREN          shift and go to state 22


state 8

    (5) statement -> statement PLUS . NUMBER
    (7) statement -> statement PLUS . statement
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    NUMBER          shift and go to state 24
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 3
    STRING          shift and go to state 4
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 23

state 9

    (9) statement -> statement MINUS . NUMBER
    (11) statement -> statement MINUS . statement
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    NUMBER          shift and go to state 26
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 3
    STRING          shift and go to state 4
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 25

state 10

    (13) statement -> statement TIMES . NUMBER
    (15) statement -> statement TIMES . statement
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    NUMBER          shift and go to state 28
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 3
    STRING          shift and go to state 4
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 27

state 11

    (17) statement -> statement DIVIDE . NUMBER
    (19) statement -> statement DIVIDE . statement
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    NUMBER          shift and go to state 30
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 3
    STRING          shift and go to state 4
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 29

state 12

    (21) statement -> statement DOUBLE_EQUALS . statement
    (24) statement -> statement DOUBLE_EQUALS . NUMBER
    (26) statement -> statement DOUBLE_EQUALS . STRING
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    NUMBER          shift and go to state 32
    STRING          shift and go to state 33
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 3
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 31

state 13

    (1) statement -> PRINT LPAREN . STRING RPAREN
    (2) statement -> PRINT LPAREN . NUMBER RPAREN
    (3) statement -> PRINT LPAREN . statement RPAREN
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    STRING          shift and go to state 34
    NUMBER          shift and go to state 35
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 3
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 36

state 14

    (20) statement -> LPAREN statement . RPAREN
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

    RPAREN          shift and go to state 37
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12


state 15

    (23) statement -> STRING DOUBLE_EQUALS . STRING
    (27) statement -> STRING DOUBLE_EQUALS . statement
    (28) statement -> STRING DOUBLE_EQUALS . NUMBER
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    STRING          shift and go to state 38
    NUMBER          shift and go to state 40
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 3
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 39

state 16

    (4) statement -> NUMBER PLUS . NUMBER
    (6) statement -> NUMBER PLUS . statement
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    NUMBER          shift and go to state 41
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 3
    STRING          shift and go to state 4
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 42

state 17

    (8) statement -> NUMBER MINUS . NUMBER
    (10) statement -> NUMBER MINUS . statement
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    NUMBER          shift and go to state 43
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 3
    STRING          shift and go to state 4
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 44

state 18

    (12) statement -> NUMBER TIMES . NUMBER
    (14) statement -> NUMBER TIMES . statement
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    NUMBER          shift and go to state 45
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 3
    STRING          shift and go to state 4
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 46

state 19

    (16) statement -> NUMBER DIVIDE . NUMBER
    (18) statement -> NUMBER DIVIDE . statement
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    NUMBER          shift and go to state 47
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 3
    STRING          shift and go to state 4
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 48

state 20

    (22) statement -> NUMBER DOUBLE_EQUALS . NUMBER
    (25) statement -> NUMBER DOUBLE_EQUALS . statement
    (29) statement -> NUMBER DOUBLE_EQUALS . STRING
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    NUMBER          shift and go to state 49
    STRING          shift and go to state 51
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 3
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 50

state 21

    (30) statement -> IF statement . COLON statement
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

    COLON           shift and go to state 52
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12


state 22

    (31) statement -> ARRAY LPAREN . LIST RPAREN

    LIST            shift and go to state 53


state 23

    (7) statement -> statement PLUS statement .
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 7 (statement -> statement PLUS statement .)
    RPAREN          reduce using rule 7 (statement -> statement PLUS statement .)
    COLON           reduce using rule 7 (statement -> statement PLUS statement .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12

  ! PLUS            [ reduce using rule 7 (statement -> statement PLUS statement .) ]
  ! MINUS           [ reduce using rule 7 (statement -> statement PLUS statement .) ]
  ! TIMES           [ reduce using rule 7 (statement -> statement PLUS statement .) ]
  ! DIVIDE          [ reduce using rule 7 (statement -> statement PLUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 7 (statement -> statement PLUS statement .) ]


state 24

    (5) statement -> statement PLUS NUMBER .
    (4) statement -> NUMBER . PLUS NUMBER
    (6) statement -> NUMBER . PLUS statement
    (8) statement -> NUMBER . MINUS NUMBER
    (10) statement -> NUMBER . MINUS statement
    (12) statement -> NUMBER . TIMES NUMBER
    (14) statement -> NUMBER . TIMES statement
    (16) statement -> NUMBER . DIVIDE NUMBER
    (18) statement -> NUMBER . DIVIDE statement
    (22) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (25) statement -> NUMBER . DOUBLE_EQUALS statement
    (29) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 5 (statement -> statement PLUS NUMBER .)
    RPAREN          reduce using rule 5 (statement -> statement PLUS NUMBER .)
    COLON           reduce using rule 5 (statement -> statement PLUS NUMBER .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    DOUBLE_EQUALS   shift and go to state 20

  ! PLUS            [ reduce using rule 5 (statement -> statement PLUS NUMBER .) ]
  ! MINUS           [ reduce using rule 5 (statement -> statement PLUS NUMBER .) ]
  ! TIMES           [ reduce using rule 5 (statement -> statement PLUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 5 (statement -> statement PLUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 5 (statement -> statement PLUS NUMBER .) ]


state 25

    (11) statement -> statement MINUS statement .
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 11 (statement -> statement MINUS statement .)
    RPAREN          reduce using rule 11 (statement -> statement MINUS statement .)
    COLON           reduce using rule 11 (statement -> statement MINUS statement .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12

  ! PLUS            [ reduce using rule 11 (statement -> statement MINUS statement .) ]
  ! MINUS           [ reduce using rule 11 (statement -> statement MINUS statement .) ]
  ! TIMES           [ reduce using rule 11 (statement -> statement MINUS statement .) ]
  ! DIVIDE          [ reduce using rule 11 (statement -> statement MINUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 11 (statement -> statement MINUS statement .) ]


state 26

    (9) statement -> statement MINUS NUMBER .
    (4) statement -> NUMBER . PLUS NUMBER
    (6) statement -> NUMBER . PLUS statement
    (8) statement -> NUMBER . MINUS NUMBER
    (10) statement -> NUMBER . MINUS statement
    (12) statement -> NUMBER . TIMES NUMBER
    (14) statement -> NUMBER . TIMES statement
    (16) statement -> NUMBER . DIVIDE NUMBER
    (18) statement -> NUMBER . DIVIDE statement
    (22) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (25) statement -> NUMBER . DOUBLE_EQUALS statement
    (29) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 9 (statement -> statement MINUS NUMBER .)
    RPAREN          reduce using rule 9 (statement -> statement MINUS NUMBER .)
    COLON           reduce using rule 9 (statement -> statement MINUS NUMBER .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    DOUBLE_EQUALS   shift and go to state 20

  ! PLUS            [ reduce using rule 9 (statement -> statement MINUS NUMBER .) ]
  ! MINUS           [ reduce using rule 9 (statement -> statement MINUS NUMBER .) ]
  ! TIMES           [ reduce using rule 9 (statement -> statement MINUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 9 (statement -> statement MINUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 9 (statement -> statement MINUS NUMBER .) ]


state 27

    (15) statement -> statement TIMES statement .
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 15 (statement -> statement TIMES statement .)
    RPAREN          reduce using rule 15 (statement -> statement TIMES statement .)
    COLON           reduce using rule 15 (statement -> statement TIMES statement .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12

  ! PLUS            [ reduce using rule 15 (statement -> statement TIMES statement .) ]
  ! MINUS           [ reduce using rule 15 (statement -> statement TIMES statement .) ]
  ! TIMES           [ reduce using rule 15 (statement -> statement TIMES statement .) ]
  ! DIVIDE          [ reduce using rule 15 (statement -> statement TIMES statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 15 (statement -> statement TIMES statement .) ]


state 28

    (13) statement -> statement TIMES NUMBER .
    (4) statement -> NUMBER . PLUS NUMBER
    (6) statement -> NUMBER . PLUS statement
    (8) statement -> NUMBER . MINUS NUMBER
    (10) statement -> NUMBER . MINUS statement
    (12) statement -> NUMBER . TIMES NUMBER
    (14) statement -> NUMBER . TIMES statement
    (16) statement -> NUMBER . DIVIDE NUMBER
    (18) statement -> NUMBER . DIVIDE statement
    (22) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (25) statement -> NUMBER . DOUBLE_EQUALS statement
    (29) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 13 (statement -> statement TIMES NUMBER .)
    RPAREN          reduce using rule 13 (statement -> statement TIMES NUMBER .)
    COLON           reduce using rule 13 (statement -> statement TIMES NUMBER .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    DOUBLE_EQUALS   shift and go to state 20

  ! PLUS            [ reduce using rule 13 (statement -> statement TIMES NUMBER .) ]
  ! MINUS           [ reduce using rule 13 (statement -> statement TIMES NUMBER .) ]
  ! TIMES           [ reduce using rule 13 (statement -> statement TIMES NUMBER .) ]
  ! DIVIDE          [ reduce using rule 13 (statement -> statement TIMES NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 13 (statement -> statement TIMES NUMBER .) ]


state 29

    (19) statement -> statement DIVIDE statement .
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 19 (statement -> statement DIVIDE statement .)
    RPAREN          reduce using rule 19 (statement -> statement DIVIDE statement .)
    COLON           reduce using rule 19 (statement -> statement DIVIDE statement .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12

  ! PLUS            [ reduce using rule 19 (statement -> statement DIVIDE statement .) ]
  ! MINUS           [ reduce using rule 19 (statement -> statement DIVIDE statement .) ]
  ! TIMES           [ reduce using rule 19 (statement -> statement DIVIDE statement .) ]
  ! DIVIDE          [ reduce using rule 19 (statement -> statement DIVIDE statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 19 (statement -> statement DIVIDE statement .) ]


state 30

    (17) statement -> statement DIVIDE NUMBER .
    (4) statement -> NUMBER . PLUS NUMBER
    (6) statement -> NUMBER . PLUS statement
    (8) statement -> NUMBER . MINUS NUMBER
    (10) statement -> NUMBER . MINUS statement
    (12) statement -> NUMBER . TIMES NUMBER
    (14) statement -> NUMBER . TIMES statement
    (16) statement -> NUMBER . DIVIDE NUMBER
    (18) statement -> NUMBER . DIVIDE statement
    (22) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (25) statement -> NUMBER . DOUBLE_EQUALS statement
    (29) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 17 (statement -> statement DIVIDE NUMBER .)
    RPAREN          reduce using rule 17 (statement -> statement DIVIDE NUMBER .)
    COLON           reduce using rule 17 (statement -> statement DIVIDE NUMBER .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    DOUBLE_EQUALS   shift and go to state 20

  ! PLUS            [ reduce using rule 17 (statement -> statement DIVIDE NUMBER .) ]
  ! MINUS           [ reduce using rule 17 (statement -> statement DIVIDE NUMBER .) ]
  ! TIMES           [ reduce using rule 17 (statement -> statement DIVIDE NUMBER .) ]
  ! DIVIDE          [ reduce using rule 17 (statement -> statement DIVIDE NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 17 (statement -> statement DIVIDE NUMBER .) ]


state 31

    (21) statement -> statement DOUBLE_EQUALS statement .
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 21 (statement -> statement DOUBLE_EQUALS statement .)
    RPAREN          reduce using rule 21 (statement -> statement DOUBLE_EQUALS statement .)
    COLON           reduce using rule 21 (statement -> statement DOUBLE_EQUALS statement .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12

  ! PLUS            [ reduce using rule 21 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! MINUS           [ reduce using rule 21 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! TIMES           [ reduce using rule 21 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! DIVIDE          [ reduce using rule 21 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 21 (statement -> statement DOUBLE_EQUALS statement .) ]


state 32

    (24) statement -> statement DOUBLE_EQUALS NUMBER .
    (4) statement -> NUMBER . PLUS NUMBER
    (6) statement -> NUMBER . PLUS statement
    (8) statement -> NUMBER . MINUS NUMBER
    (10) statement -> NUMBER . MINUS statement
    (12) statement -> NUMBER . TIMES NUMBER
    (14) statement -> NUMBER . TIMES statement
    (16) statement -> NUMBER . DIVIDE NUMBER
    (18) statement -> NUMBER . DIVIDE statement
    (22) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (25) statement -> NUMBER . DOUBLE_EQUALS statement
    (29) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 24 (statement -> statement DOUBLE_EQUALS NUMBER .)
    RPAREN          reduce using rule 24 (statement -> statement DOUBLE_EQUALS NUMBER .)
    COLON           reduce using rule 24 (statement -> statement DOUBLE_EQUALS NUMBER .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    DOUBLE_EQUALS   shift and go to state 20

  ! PLUS            [ reduce using rule 24 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! MINUS           [ reduce using rule 24 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! TIMES           [ reduce using rule 24 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 24 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 24 (statement -> statement DOUBLE_EQUALS NUMBER .) ]


state 33

    (26) statement -> statement DOUBLE_EQUALS STRING .
    (23) statement -> STRING . DOUBLE_EQUALS STRING
    (27) statement -> STRING . DOUBLE_EQUALS statement
    (28) statement -> STRING . DOUBLE_EQUALS NUMBER

  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    PLUS            reduce using rule 26 (statement -> statement DOUBLE_EQUALS STRING .)
    MINUS           reduce using rule 26 (statement -> statement DOUBLE_EQUALS STRING .)
    TIMES           reduce using rule 26 (statement -> statement DOUBLE_EQUALS STRING .)
    DIVIDE          reduce using rule 26 (statement -> statement DOUBLE_EQUALS STRING .)
    $end            reduce using rule 26 (statement -> statement DOUBLE_EQUALS STRING .)
    RPAREN          reduce using rule 26 (statement -> statement DOUBLE_EQUALS STRING .)
    COLON           reduce using rule 26 (statement -> statement DOUBLE_EQUALS STRING .)
    DOUBLE_EQUALS   shift and go to state 15

  ! DOUBLE_EQUALS   [ reduce using rule 26 (statement -> statement DOUBLE_EQUALS STRING .) ]


state 34

    (1) statement -> PRINT LPAREN STRING . RPAREN
    (23) statement -> STRING . DOUBLE_EQUALS STRING
    (27) statement -> STRING . DOUBLE_EQUALS statement
    (28) statement -> STRING . DOUBLE_EQUALS NUMBER

    RPAREN          shift and go to state 54
    DOUBLE_EQUALS   shift and go to state 15


state 35

    (2) statement -> PRINT LPAREN NUMBER . RPAREN
    (4) statement -> NUMBER . PLUS NUMBER
    (6) statement -> NUMBER . PLUS statement
    (8) statement -> NUMBER . MINUS NUMBER
    (10) statement -> NUMBER . MINUS statement
    (12) statement -> NUMBER . TIMES NUMBER
    (14) statement -> NUMBER . TIMES statement
    (16) statement -> NUMBER . DIVIDE NUMBER
    (18) statement -> NUMBER . DIVIDE statement
    (22) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (25) statement -> NUMBER . DOUBLE_EQUALS statement
    (29) statement -> NUMBER . DOUBLE_EQUALS STRING

    RPAREN          shift and go to state 55
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    DOUBLE_EQUALS   shift and go to state 20


state 36

    (3) statement -> PRINT LPAREN statement . RPAREN
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

    RPAREN          shift and go to state 56
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12


state 37

    (20) statement -> LPAREN statement RPAREN .

    PLUS            reduce using rule 20 (statement -> LPAREN statement RPAREN .)
    MINUS           reduce using rule 20 (statement -> LPAREN statement RPAREN .)
    TIMES           reduce using rule 20 (statement -> LPAREN statement RPAREN .)
    DIVIDE          reduce using rule 20 (statement -> LPAREN statement RPAREN .)
    DOUBLE_EQUALS   reduce using rule 20 (statement -> LPAREN statement RPAREN .)
    $end            reduce using rule 20 (statement -> LPAREN statement RPAREN .)
    RPAREN          reduce using rule 20 (statement -> LPAREN statement RPAREN .)
    COLON           reduce using rule 20 (statement -> LPAREN statement RPAREN .)


state 38

    (23) statement -> STRING DOUBLE_EQUALS STRING .
    (23) statement -> STRING . DOUBLE_EQUALS STRING
    (27) statement -> STRING . DOUBLE_EQUALS statement
    (28) statement -> STRING . DOUBLE_EQUALS NUMBER

  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    PLUS            reduce using rule 23 (statement -> STRING DOUBLE_EQUALS STRING .)
    MINUS           reduce using rule 23 (statement -> STRING DOUBLE_EQUALS STRING .)
    TIMES           reduce using rule 23 (statement -> STRING DOUBLE_EQUALS STRING .)
    DIVIDE          reduce using rule 23 (statement -> STRING DOUBLE_EQUALS STRING .)
    $end            reduce using rule 23 (statement -> STRING DOUBLE_EQUALS STRING .)
    RPAREN          reduce using rule 23 (statement -> STRING DOUBLE_EQUALS STRING .)
    COLON           reduce using rule 23 (statement -> STRING DOUBLE_EQUALS STRING .)
    DOUBLE_EQUALS   shift and go to state 15

  ! DOUBLE_EQUALS   [ reduce using rule 23 (statement -> STRING DOUBLE_EQUALS STRING .) ]


state 39

    (27) statement -> STRING DOUBLE_EQUALS statement .
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 27 (statement -> STRING DOUBLE_EQUALS statement .)
    RPAREN          reduce using rule 27 (statement -> STRING DOUBLE_EQUALS statement .)
    COLON           reduce using rule 27 (statement -> STRING DOUBLE_EQUALS statement .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12

  ! PLUS            [ reduce using rule 27 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! MINUS           [ reduce using rule 27 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! TIMES           [ reduce using rule 27 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! DIVIDE          [ reduce using rule 27 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 27 (statement -> STRING DOUBLE_EQUALS statement .) ]


state 40

    (28) statement -> STRING DOUBLE_EQUALS NUMBER .
    (4) statement -> NUMBER . PLUS NUMBER
    (6) statement -> NUMBER . PLUS statement
    (8) statement -> NUMBER . MINUS NUMBER
    (10) statement -> NUMBER . MINUS statement
    (12) statement -> NUMBER . TIMES NUMBER
    (14) statement -> NUMBER . TIMES statement
    (16) statement -> NUMBER . DIVIDE NUMBER
    (18) statement -> NUMBER . DIVIDE statement
    (22) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (25) statement -> NUMBER . DOUBLE_EQUALS statement
    (29) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 28 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    RPAREN          reduce using rule 28 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    COLON           reduce using rule 28 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    DOUBLE_EQUALS   shift and go to state 20

  ! PLUS            [ reduce using rule 28 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! MINUS           [ reduce using rule 28 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! TIMES           [ reduce using rule 28 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 28 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 28 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]


state 41

    (4) statement -> NUMBER PLUS NUMBER .
    (4) statement -> NUMBER . PLUS NUMBER
    (6) statement -> NUMBER . PLUS statement
    (8) statement -> NUMBER . MINUS NUMBER
    (10) statement -> NUMBER . MINUS statement
    (12) statement -> NUMBER . TIMES NUMBER
    (14) statement -> NUMBER . TIMES statement
    (16) statement -> NUMBER . DIVIDE NUMBER
    (18) statement -> NUMBER . DIVIDE statement
    (22) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (25) statement -> NUMBER . DOUBLE_EQUALS statement
    (29) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 4 (statement -> NUMBER PLUS NUMBER .)
    RPAREN          reduce using rule 4 (statement -> NUMBER PLUS NUMBER .)
    COLON           reduce using rule 4 (statement -> NUMBER PLUS NUMBER .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    DOUBLE_EQUALS   shift and go to state 20

  ! PLUS            [ reduce using rule 4 (statement -> NUMBER PLUS NUMBER .) ]
  ! MINUS           [ reduce using rule 4 (statement -> NUMBER PLUS NUMBER .) ]
  ! TIMES           [ reduce using rule 4 (statement -> NUMBER PLUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 4 (statement -> NUMBER PLUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 4 (statement -> NUMBER PLUS NUMBER .) ]


state 42

    (6) statement -> NUMBER PLUS statement .
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 6 (statement -> NUMBER PLUS statement .)
    RPAREN          reduce using rule 6 (statement -> NUMBER PLUS statement .)
    COLON           reduce using rule 6 (statement -> NUMBER PLUS statement .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12

  ! PLUS            [ reduce using rule 6 (statement -> NUMBER PLUS statement .) ]
  ! MINUS           [ reduce using rule 6 (statement -> NUMBER PLUS statement .) ]
  ! TIMES           [ reduce using rule 6 (statement -> NUMBER PLUS statement .) ]
  ! DIVIDE          [ reduce using rule 6 (statement -> NUMBER PLUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 6 (statement -> NUMBER PLUS statement .) ]


state 43

    (8) statement -> NUMBER MINUS NUMBER .
    (4) statement -> NUMBER . PLUS NUMBER
    (6) statement -> NUMBER . PLUS statement
    (8) statement -> NUMBER . MINUS NUMBER
    (10) statement -> NUMBER . MINUS statement
    (12) statement -> NUMBER . TIMES NUMBER
    (14) statement -> NUMBER . TIMES statement
    (16) statement -> NUMBER . DIVIDE NUMBER
    (18) statement -> NUMBER . DIVIDE statement
    (22) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (25) statement -> NUMBER . DOUBLE_EQUALS statement
    (29) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 8 (statement -> NUMBER MINUS NUMBER .)
    RPAREN          reduce using rule 8 (statement -> NUMBER MINUS NUMBER .)
    COLON           reduce using rule 8 (statement -> NUMBER MINUS NUMBER .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    DOUBLE_EQUALS   shift and go to state 20

  ! PLUS            [ reduce using rule 8 (statement -> NUMBER MINUS NUMBER .) ]
  ! MINUS           [ reduce using rule 8 (statement -> NUMBER MINUS NUMBER .) ]
  ! TIMES           [ reduce using rule 8 (statement -> NUMBER MINUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 8 (statement -> NUMBER MINUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 8 (statement -> NUMBER MINUS NUMBER .) ]


state 44

    (10) statement -> NUMBER MINUS statement .
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 10 (statement -> NUMBER MINUS statement .)
    RPAREN          reduce using rule 10 (statement -> NUMBER MINUS statement .)
    COLON           reduce using rule 10 (statement -> NUMBER MINUS statement .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12

  ! PLUS            [ reduce using rule 10 (statement -> NUMBER MINUS statement .) ]
  ! MINUS           [ reduce using rule 10 (statement -> NUMBER MINUS statement .) ]
  ! TIMES           [ reduce using rule 10 (statement -> NUMBER MINUS statement .) ]
  ! DIVIDE          [ reduce using rule 10 (statement -> NUMBER MINUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 10 (statement -> NUMBER MINUS statement .) ]


state 45

    (12) statement -> NUMBER TIMES NUMBER .
    (4) statement -> NUMBER . PLUS NUMBER
    (6) statement -> NUMBER . PLUS statement
    (8) statement -> NUMBER . MINUS NUMBER
    (10) statement -> NUMBER . MINUS statement
    (12) statement -> NUMBER . TIMES NUMBER
    (14) statement -> NUMBER . TIMES statement
    (16) statement -> NUMBER . DIVIDE NUMBER
    (18) statement -> NUMBER . DIVIDE statement
    (22) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (25) statement -> NUMBER . DOUBLE_EQUALS statement
    (29) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 12 (statement -> NUMBER TIMES NUMBER .)
    RPAREN          reduce using rule 12 (statement -> NUMBER TIMES NUMBER .)
    COLON           reduce using rule 12 (statement -> NUMBER TIMES NUMBER .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    DOUBLE_EQUALS   shift and go to state 20

  ! PLUS            [ reduce using rule 12 (statement -> NUMBER TIMES NUMBER .) ]
  ! MINUS           [ reduce using rule 12 (statement -> NUMBER TIMES NUMBER .) ]
  ! TIMES           [ reduce using rule 12 (statement -> NUMBER TIMES NUMBER .) ]
  ! DIVIDE          [ reduce using rule 12 (statement -> NUMBER TIMES NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 12 (statement -> NUMBER TIMES NUMBER .) ]


state 46

    (14) statement -> NUMBER TIMES statement .
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 14 (statement -> NUMBER TIMES statement .)
    RPAREN          reduce using rule 14 (statement -> NUMBER TIMES statement .)
    COLON           reduce using rule 14 (statement -> NUMBER TIMES statement .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12

  ! PLUS            [ reduce using rule 14 (statement -> NUMBER TIMES statement .) ]
  ! MINUS           [ reduce using rule 14 (statement -> NUMBER TIMES statement .) ]
  ! TIMES           [ reduce using rule 14 (statement -> NUMBER TIMES statement .) ]
  ! DIVIDE          [ reduce using rule 14 (statement -> NUMBER TIMES statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 14 (statement -> NUMBER TIMES statement .) ]


state 47

    (16) statement -> NUMBER DIVIDE NUMBER .
    (4) statement -> NUMBER . PLUS NUMBER
    (6) statement -> NUMBER . PLUS statement
    (8) statement -> NUMBER . MINUS NUMBER
    (10) statement -> NUMBER . MINUS statement
    (12) statement -> NUMBER . TIMES NUMBER
    (14) statement -> NUMBER . TIMES statement
    (16) statement -> NUMBER . DIVIDE NUMBER
    (18) statement -> NUMBER . DIVIDE statement
    (22) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (25) statement -> NUMBER . DOUBLE_EQUALS statement
    (29) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 16 (statement -> NUMBER DIVIDE NUMBER .)
    RPAREN          reduce using rule 16 (statement -> NUMBER DIVIDE NUMBER .)
    COLON           reduce using rule 16 (statement -> NUMBER DIVIDE NUMBER .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    DOUBLE_EQUALS   shift and go to state 20

  ! PLUS            [ reduce using rule 16 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! MINUS           [ reduce using rule 16 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! TIMES           [ reduce using rule 16 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! DIVIDE          [ reduce using rule 16 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 16 (statement -> NUMBER DIVIDE NUMBER .) ]


state 48

    (18) statement -> NUMBER DIVIDE statement .
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 18 (statement -> NUMBER DIVIDE statement .)
    RPAREN          reduce using rule 18 (statement -> NUMBER DIVIDE statement .)
    COLON           reduce using rule 18 (statement -> NUMBER DIVIDE statement .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12

  ! PLUS            [ reduce using rule 18 (statement -> NUMBER DIVIDE statement .) ]
  ! MINUS           [ reduce using rule 18 (statement -> NUMBER DIVIDE statement .) ]
  ! TIMES           [ reduce using rule 18 (statement -> NUMBER DIVIDE statement .) ]
  ! DIVIDE          [ reduce using rule 18 (statement -> NUMBER DIVIDE statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 18 (statement -> NUMBER DIVIDE statement .) ]


state 49

    (22) statement -> NUMBER DOUBLE_EQUALS NUMBER .
    (4) statement -> NUMBER . PLUS NUMBER
    (6) statement -> NUMBER . PLUS statement
    (8) statement -> NUMBER . MINUS NUMBER
    (10) statement -> NUMBER . MINUS statement
    (12) statement -> NUMBER . TIMES NUMBER
    (14) statement -> NUMBER . TIMES statement
    (16) statement -> NUMBER . DIVIDE NUMBER
    (18) statement -> NUMBER . DIVIDE statement
    (22) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (25) statement -> NUMBER . DOUBLE_EQUALS statement
    (29) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 22 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    RPAREN          reduce using rule 22 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    COLON           reduce using rule 22 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    DOUBLE_EQUALS   shift and go to state 20

  ! PLUS            [ reduce using rule 22 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! MINUS           [ reduce using rule 22 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! TIMES           [ reduce using rule 22 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 22 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 22 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]


state 50

    (25) statement -> NUMBER DOUBLE_EQUALS statement .
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 25 (statement -> NUMBER DOUBLE_EQUALS statement .)
    RPAREN          reduce using rule 25 (statement -> NUMBER DOUBLE_EQUALS statement .)
    COLON           reduce using rule 25 (statement -> NUMBER DOUBLE_EQUALS statement .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12

  ! PLUS            [ reduce using rule 25 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! MINUS           [ reduce using rule 25 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! TIMES           [ reduce using rule 25 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! DIVIDE          [ reduce using rule 25 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 25 (statement -> NUMBER DOUBLE_EQUALS statement .) ]


state 51

    (29) statement -> NUMBER DOUBLE_EQUALS STRING .
    (23) statement -> STRING . DOUBLE_EQUALS STRING
    (27) statement -> STRING . DOUBLE_EQUALS statement
    (28) statement -> STRING . DOUBLE_EQUALS NUMBER

  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    PLUS            reduce using rule 29 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    MINUS           reduce using rule 29 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    TIMES           reduce using rule 29 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    DIVIDE          reduce using rule 29 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    $end            reduce using rule 29 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    RPAREN          reduce using rule 29 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    COLON           reduce using rule 29 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    DOUBLE_EQUALS   shift and go to state 15

  ! DOUBLE_EQUALS   [ reduce using rule 29 (statement -> NUMBER DOUBLE_EQUALS STRING .) ]


state 52

    (30) statement -> IF statement COLON . statement
    (1) statement -> . PRINT LPAREN STRING RPAREN
    (2) statement -> . PRINT LPAREN NUMBER RPAREN
    (3) statement -> . PRINT LPAREN statement RPAREN
    (4) statement -> . NUMBER PLUS NUMBER
    (5) statement -> . statement PLUS NUMBER
    (6) statement -> . NUMBER PLUS statement
    (7) statement -> . statement PLUS statement
    (8) statement -> . NUMBER MINUS NUMBER
    (9) statement -> . statement MINUS NUMBER
    (10) statement -> . NUMBER MINUS statement
    (11) statement -> . statement MINUS statement
    (12) statement -> . NUMBER TIMES NUMBER
    (13) statement -> . statement TIMES NUMBER
    (14) statement -> . NUMBER TIMES statement
    (15) statement -> . statement TIMES statement
    (16) statement -> . NUMBER DIVIDE NUMBER
    (17) statement -> . statement DIVIDE NUMBER
    (18) statement -> . NUMBER DIVIDE statement
    (19) statement -> . statement DIVIDE statement
    (20) statement -> . LPAREN statement RPAREN
    (21) statement -> . statement DOUBLE_EQUALS statement
    (22) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (23) statement -> . STRING DOUBLE_EQUALS STRING
    (24) statement -> . statement DOUBLE_EQUALS NUMBER
    (25) statement -> . NUMBER DOUBLE_EQUALS statement
    (26) statement -> . statement DOUBLE_EQUALS STRING
    (27) statement -> . STRING DOUBLE_EQUALS statement
    (28) statement -> . STRING DOUBLE_EQUALS NUMBER
    (29) statement -> . NUMBER DOUBLE_EQUALS STRING
    (30) statement -> . IF statement COLON statement
    (31) statement -> . ARRAY LPAREN LIST RPAREN

    PRINT           shift and go to state 2
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 3
    STRING          shift and go to state 4
    IF              shift and go to state 6
    ARRAY           shift and go to state 7

    statement                      shift and go to state 57

state 53

    (31) statement -> ARRAY LPAREN LIST . RPAREN

    RPAREN          shift and go to state 58


state 54

    (1) statement -> PRINT LPAREN STRING RPAREN .

    PLUS            reduce using rule 1 (statement -> PRINT LPAREN STRING RPAREN .)
    MINUS           reduce using rule 1 (statement -> PRINT LPAREN STRING RPAREN .)
    TIMES           reduce using rule 1 (statement -> PRINT LPAREN STRING RPAREN .)
    DIVIDE          reduce using rule 1 (statement -> PRINT LPAREN STRING RPAREN .)
    DOUBLE_EQUALS   reduce using rule 1 (statement -> PRINT LPAREN STRING RPAREN .)
    $end            reduce using rule 1 (statement -> PRINT LPAREN STRING RPAREN .)
    RPAREN          reduce using rule 1 (statement -> PRINT LPAREN STRING RPAREN .)
    COLON           reduce using rule 1 (statement -> PRINT LPAREN STRING RPAREN .)


state 55

    (2) statement -> PRINT LPAREN NUMBER RPAREN .

    PLUS            reduce using rule 2 (statement -> PRINT LPAREN NUMBER RPAREN .)
    MINUS           reduce using rule 2 (statement -> PRINT LPAREN NUMBER RPAREN .)
    TIMES           reduce using rule 2 (statement -> PRINT LPAREN NUMBER RPAREN .)
    DIVIDE          reduce using rule 2 (statement -> PRINT LPAREN NUMBER RPAREN .)
    DOUBLE_EQUALS   reduce using rule 2 (statement -> PRINT LPAREN NUMBER RPAREN .)
    $end            reduce using rule 2 (statement -> PRINT LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 2 (statement -> PRINT LPAREN NUMBER RPAREN .)
    COLON           reduce using rule 2 (statement -> PRINT LPAREN NUMBER RPAREN .)


state 56

    (3) statement -> PRINT LPAREN statement RPAREN .

    PLUS            reduce using rule 3 (statement -> PRINT LPAREN statement RPAREN .)
    MINUS           reduce using rule 3 (statement -> PRINT LPAREN statement RPAREN .)
    TIMES           reduce using rule 3 (statement -> PRINT LPAREN statement RPAREN .)
    DIVIDE          reduce using rule 3 (statement -> PRINT LPAREN statement RPAREN .)
    DOUBLE_EQUALS   reduce using rule 3 (statement -> PRINT LPAREN statement RPAREN .)
    $end            reduce using rule 3 (statement -> PRINT LPAREN statement RPAREN .)
    RPAREN          reduce using rule 3 (statement -> PRINT LPAREN statement RPAREN .)
    COLON           reduce using rule 3 (statement -> PRINT LPAREN statement RPAREN .)


state 57

    (30) statement -> IF statement COLON statement .
    (5) statement -> statement . PLUS NUMBER
    (7) statement -> statement . PLUS statement
    (9) statement -> statement . MINUS NUMBER
    (11) statement -> statement . MINUS statement
    (13) statement -> statement . TIMES NUMBER
    (15) statement -> statement . TIMES statement
    (17) statement -> statement . DIVIDE NUMBER
    (19) statement -> statement . DIVIDE statement
    (21) statement -> statement . DOUBLE_EQUALS statement
    (24) statement -> statement . DOUBLE_EQUALS NUMBER
    (26) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 30 (statement -> IF statement COLON statement .)
    RPAREN          reduce using rule 30 (statement -> IF statement COLON statement .)
    COLON           reduce using rule 30 (statement -> IF statement COLON statement .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    DOUBLE_EQUALS   shift and go to state 12

  ! PLUS            [ reduce using rule 30 (statement -> IF statement COLON statement .) ]
  ! MINUS           [ reduce using rule 30 (statement -> IF statement COLON statement .) ]
  ! TIMES           [ reduce using rule 30 (statement -> IF statement COLON statement .) ]
  ! DIVIDE          [ reduce using rule 30 (statement -> IF statement COLON statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 30 (statement -> IF statement COLON statement .) ]


state 58

    (31) statement -> ARRAY LPAREN LIST RPAREN .

    PLUS            reduce using rule 31 (statement -> ARRAY LPAREN LIST RPAREN .)
    MINUS           reduce using rule 31 (statement -> ARRAY LPAREN LIST RPAREN .)
    TIMES           reduce using rule 31 (statement -> ARRAY LPAREN LIST RPAREN .)
    DIVIDE          reduce using rule 31 (statement -> ARRAY LPAREN LIST RPAREN .)
    DOUBLE_EQUALS   reduce using rule 31 (statement -> ARRAY LPAREN LIST RPAREN .)
    $end            reduce using rule 31 (statement -> ARRAY LPAREN LIST RPAREN .)
    RPAREN          reduce using rule 31 (statement -> ARRAY LPAREN LIST RPAREN .)
    COLON           reduce using rule 31 (statement -> ARRAY LPAREN LIST RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 23 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 23 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 23 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 23 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 23 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 24 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 24 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 24 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 24 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 24 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 25 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 25 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 25 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 25 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 25 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 26 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 26 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 26 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 26 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 26 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 27 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 27 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 27 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 27 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 27 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 28 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 28 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 28 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 28 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 28 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 29 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 29 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 29 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 29 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 29 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 30 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 30 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 30 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 30 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 30 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 31 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 31 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 31 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 31 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 32 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 32 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 32 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 32 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 33 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 38 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 39 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 39 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 40 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 40 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 40 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 40 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 40 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 41 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 41 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 41 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 42 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 42 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 43 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 43 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 44 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 44 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 45 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 45 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 45 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 45 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 46 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 46 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 47 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 47 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 48 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 48 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 50 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 50 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 50 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 57 resolved as shift
