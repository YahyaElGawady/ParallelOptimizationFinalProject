Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    COMMENT
    DEF
    ELIF
    ELSE
    FALSE
    FOR
    IN
    NONE
    NP_ABS
    NP_COS
    NP_EXP
    NP_LOG
    NP_LOG10
    NP_POWER
    NP_SIGN
    NP_SIN
    NP_SQRT
    RANGE
    RETURN
    TRUE
    WHILE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
Rule 2     statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
Rule 3     statement -> statement AND statement
Rule 4     statement -> statement OR statement
Rule 5     statement -> NOT statement
Rule 6     statement -> statement POWER statement
Rule 7     statement -> VARIABLE INCREMENT
Rule 8     statement -> VARIABLE DECREMENT
Rule 9     statement -> PRINT LPAREN STRING RPAREN
Rule 10    statement -> PRINT LPAREN NUMBER RPAREN
Rule 11    statement -> PRINT LPAREN statement RPAREN
Rule 12    statement -> NUMBER PLUS NUMBER
Rule 13    statement -> statement PLUS NUMBER
Rule 14    statement -> NUMBER PLUS statement
Rule 15    statement -> statement PLUS statement
Rule 16    statement -> NUMBER MINUS NUMBER
Rule 17    statement -> statement MINUS NUMBER
Rule 18    statement -> NUMBER MINUS statement
Rule 19    statement -> statement MINUS statement
Rule 20    statement -> NUMBER TIMES NUMBER
Rule 21    statement -> statement TIMES NUMBER
Rule 22    statement -> NUMBER TIMES statement
Rule 23    statement -> statement TIMES statement
Rule 24    statement -> NUMBER DIVIDE NUMBER
Rule 25    statement -> statement DIVIDE NUMBER
Rule 26    statement -> NUMBER DIVIDE statement
Rule 27    statement -> statement DIVIDE statement
Rule 28    statement -> LPAREN statement RPAREN
Rule 29    statement -> statement DOUBLE_EQUALS statement
Rule 30    statement -> NUMBER DOUBLE_EQUALS NUMBER
Rule 31    statement -> STRING DOUBLE_EQUALS STRING
Rule 32    statement -> statement DOUBLE_EQUALS NUMBER
Rule 33    statement -> NUMBER DOUBLE_EQUALS statement
Rule 34    statement -> statement DOUBLE_EQUALS STRING
Rule 35    statement -> STRING DOUBLE_EQUALS statement
Rule 36    statement -> STRING DOUBLE_EQUALS NUMBER
Rule 37    statement -> NUMBER DOUBLE_EQUALS STRING
Rule 38    statement -> IF statement COLON statement
Rule 39    statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
Rule 40    statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
Rule 41    statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
Rule 42    statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
Rule 43    statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

Terminals, with rules where they appear

AND                  : 3
ARGS                 : 2
ARRAY                : 39
BREAK                : 
COLON                : 38
COMMA                : 1 2 2 40 41 43
COMMENT              : 
DECREMENT            : 8
DEF                  : 
DIVIDE               : 24 25 26 27
DOUBLE_EQUALS        : 29 30 31 32 33 34 35 36 37
ELIF                 : 
ELSE                 : 
EQUALS               : 39 40 41 42 43
FALSE                : 
FOR                  : 
IF                   : 38
IN                   : 
INCREMENT            : 7
LIST                 : 39
LPAREN               : 1 2 9 10 11 28 39 40 41 42 43
MINUS                : 16 17 18 19
NONE                 : 
NOT                  : 5
NP_ABS               : 
NP_ADD               : 40
NP_COS               : 
NP_DOT_PRODUCT       : 43
NP_EXP               : 
NP_LOG               : 
NP_LOG10             : 
NP_POWER             : 
NP_SIGN              : 
NP_SIN               : 
NP_SQRT              : 
NP_SUBTRACT          : 41
NP_SUM               : 42
NUMBER               : 1 2 10 12 12 13 14 16 16 17 18 20 20 21 22 24 24 25 26 30 30 32 33 36 37
OR                   : 4
PLUS                 : 12 13 14 15
POWER                : 6
PRINT                : 9 10 11
RANGE                : 
RETURN               : 
RPAREN               : 1 2 9 10 11 28 39 40 41 42 43
SET_UP               : 1
SET_UP_HOST          : 2
STRING               : 9 31 31 34 35 36 37
TIMES                : 20 21 22 23
TRUE                 : 
VARIABLE             : 1 2 7 8 39 40 40 40 41 41 41 42 42 43 43 43
WHILE                : 
error                : 

Nonterminals, with rules where they appear

statement            : 3 3 4 4 5 6 6 11 13 14 15 15 17 18 19 19 21 22 23 23 25 26 27 27 28 29 29 32 33 34 35 38 38 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18


state 2

    (1) statement -> SET_UP . LPAREN VARIABLE COMMA NUMBER RPAREN

    LPAREN          shift and go to state 19


state 3

    (28) statement -> LPAREN . statement RPAREN
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 20

state 4

    (7) statement -> VARIABLE . INCREMENT
    (8) statement -> VARIABLE . DECREMENT
    (39) statement -> VARIABLE . EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> VARIABLE . EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> VARIABLE . EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> VARIABLE . EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> VARIABLE . EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    INCREMENT       shift and go to state 21
    DECREMENT       shift and go to state 22
    EQUALS          shift and go to state 23


state 5

    (12) statement -> NUMBER . PLUS NUMBER
    (14) statement -> NUMBER . PLUS statement
    (16) statement -> NUMBER . MINUS NUMBER
    (18) statement -> NUMBER . MINUS statement
    (20) statement -> NUMBER . TIMES NUMBER
    (22) statement -> NUMBER . TIMES statement
    (24) statement -> NUMBER . DIVIDE NUMBER
    (26) statement -> NUMBER . DIVIDE statement
    (30) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (33) statement -> NUMBER . DOUBLE_EQUALS statement
    (37) statement -> NUMBER . DOUBLE_EQUALS STRING

    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    DOUBLE_EQUALS   shift and go to state 28


state 6

    (2) statement -> SET_UP_HOST . LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN

    LPAREN          shift and go to state 29


state 7

    (5) statement -> NOT . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 30

state 8

    (9) statement -> PRINT . LPAREN STRING RPAREN
    (10) statement -> PRINT . LPAREN NUMBER RPAREN
    (11) statement -> PRINT . LPAREN statement RPAREN

    LPAREN          shift and go to state 31


state 9

    (31) statement -> STRING . DOUBLE_EQUALS STRING
    (35) statement -> STRING . DOUBLE_EQUALS statement
    (36) statement -> STRING . DOUBLE_EQUALS NUMBER

    DOUBLE_EQUALS   shift and go to state 32


state 10

    (38) statement -> IF . statement COLON statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 33

state 11

    (3) statement -> statement AND . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 34

state 12

    (4) statement -> statement OR . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 35

state 13

    (6) statement -> statement POWER . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 36

state 14

    (13) statement -> statement PLUS . NUMBER
    (15) statement -> statement PLUS . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    NUMBER          shift and go to state 38
    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 37

state 15

    (17) statement -> statement MINUS . NUMBER
    (19) statement -> statement MINUS . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    NUMBER          shift and go to state 40
    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 39

state 16

    (21) statement -> statement TIMES . NUMBER
    (23) statement -> statement TIMES . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    NUMBER          shift and go to state 42
    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 41

state 17

    (25) statement -> statement DIVIDE . NUMBER
    (27) statement -> statement DIVIDE . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    NUMBER          shift and go to state 44
    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 43

state 18

    (29) statement -> statement DOUBLE_EQUALS . statement
    (32) statement -> statement DOUBLE_EQUALS . NUMBER
    (34) statement -> statement DOUBLE_EQUALS . STRING
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    NUMBER          shift and go to state 46
    STRING          shift and go to state 47
    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    LPAREN          shift and go to state 3
    IF              shift and go to state 10

    statement                      shift and go to state 45

state 19

    (1) statement -> SET_UP LPAREN . VARIABLE COMMA NUMBER RPAREN

    VARIABLE        shift and go to state 48


state 20

    (28) statement -> LPAREN statement . RPAREN
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

    RPAREN          shift and go to state 49
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18


state 21

    (7) statement -> VARIABLE INCREMENT .

    AND             reduce using rule 7 (statement -> VARIABLE INCREMENT .)
    OR              reduce using rule 7 (statement -> VARIABLE INCREMENT .)
    POWER           reduce using rule 7 (statement -> VARIABLE INCREMENT .)
    PLUS            reduce using rule 7 (statement -> VARIABLE INCREMENT .)
    MINUS           reduce using rule 7 (statement -> VARIABLE INCREMENT .)
    TIMES           reduce using rule 7 (statement -> VARIABLE INCREMENT .)
    DIVIDE          reduce using rule 7 (statement -> VARIABLE INCREMENT .)
    DOUBLE_EQUALS   reduce using rule 7 (statement -> VARIABLE INCREMENT .)
    $end            reduce using rule 7 (statement -> VARIABLE INCREMENT .)
    RPAREN          reduce using rule 7 (statement -> VARIABLE INCREMENT .)
    COLON           reduce using rule 7 (statement -> VARIABLE INCREMENT .)


state 22

    (8) statement -> VARIABLE DECREMENT .

    AND             reduce using rule 8 (statement -> VARIABLE DECREMENT .)
    OR              reduce using rule 8 (statement -> VARIABLE DECREMENT .)
    POWER           reduce using rule 8 (statement -> VARIABLE DECREMENT .)
    PLUS            reduce using rule 8 (statement -> VARIABLE DECREMENT .)
    MINUS           reduce using rule 8 (statement -> VARIABLE DECREMENT .)
    TIMES           reduce using rule 8 (statement -> VARIABLE DECREMENT .)
    DIVIDE          reduce using rule 8 (statement -> VARIABLE DECREMENT .)
    DOUBLE_EQUALS   reduce using rule 8 (statement -> VARIABLE DECREMENT .)
    $end            reduce using rule 8 (statement -> VARIABLE DECREMENT .)
    RPAREN          reduce using rule 8 (statement -> VARIABLE DECREMENT .)
    COLON           reduce using rule 8 (statement -> VARIABLE DECREMENT .)


state 23

    (39) statement -> VARIABLE EQUALS . ARRAY LPAREN LIST RPAREN
    (40) statement -> VARIABLE EQUALS . NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> VARIABLE EQUALS . NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> VARIABLE EQUALS . NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> VARIABLE EQUALS . NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    ARRAY           shift and go to state 50
    NP_ADD          shift and go to state 51
    NP_SUBTRACT     shift and go to state 52
    NP_SUM          shift and go to state 53
    NP_DOT_PRODUCT  shift and go to state 54


state 24

    (12) statement -> NUMBER PLUS . NUMBER
    (14) statement -> NUMBER PLUS . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    NUMBER          shift and go to state 55
    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 56

state 25

    (16) statement -> NUMBER MINUS . NUMBER
    (18) statement -> NUMBER MINUS . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    NUMBER          shift and go to state 57
    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 58

state 26

    (20) statement -> NUMBER TIMES . NUMBER
    (22) statement -> NUMBER TIMES . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    NUMBER          shift and go to state 59
    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 60

state 27

    (24) statement -> NUMBER DIVIDE . NUMBER
    (26) statement -> NUMBER DIVIDE . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    NUMBER          shift and go to state 61
    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 62

state 28

    (30) statement -> NUMBER DOUBLE_EQUALS . NUMBER
    (33) statement -> NUMBER DOUBLE_EQUALS . statement
    (37) statement -> NUMBER DOUBLE_EQUALS . STRING
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    NUMBER          shift and go to state 63
    STRING          shift and go to state 65
    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    LPAREN          shift and go to state 3
    IF              shift and go to state 10

    statement                      shift and go to state 64

state 29

    (2) statement -> SET_UP_HOST LPAREN . VARIABLE COMMA ARGS COMMA NUMBER RPAREN

    VARIABLE        shift and go to state 66


state 30

    (5) statement -> NOT statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 5 (statement -> NOT statement .)
    RPAREN          reduce using rule 5 (statement -> NOT statement .)
    COLON           reduce using rule 5 (statement -> NOT statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 5 (statement -> NOT statement .) ]
  ! OR              [ reduce using rule 5 (statement -> NOT statement .) ]
  ! POWER           [ reduce using rule 5 (statement -> NOT statement .) ]
  ! PLUS            [ reduce using rule 5 (statement -> NOT statement .) ]
  ! MINUS           [ reduce using rule 5 (statement -> NOT statement .) ]
  ! TIMES           [ reduce using rule 5 (statement -> NOT statement .) ]
  ! DIVIDE          [ reduce using rule 5 (statement -> NOT statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 5 (statement -> NOT statement .) ]


state 31

    (9) statement -> PRINT LPAREN . STRING RPAREN
    (10) statement -> PRINT LPAREN . NUMBER RPAREN
    (11) statement -> PRINT LPAREN . statement RPAREN
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    STRING          shift and go to state 67
    NUMBER          shift and go to state 68
    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    LPAREN          shift and go to state 3
    IF              shift and go to state 10

    statement                      shift and go to state 69

state 32

    (31) statement -> STRING DOUBLE_EQUALS . STRING
    (35) statement -> STRING DOUBLE_EQUALS . statement
    (36) statement -> STRING DOUBLE_EQUALS . NUMBER
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    STRING          shift and go to state 70
    NUMBER          shift and go to state 72
    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    LPAREN          shift and go to state 3
    IF              shift and go to state 10

    statement                      shift and go to state 71

state 33

    (38) statement -> IF statement . COLON statement
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

    COLON           shift and go to state 73
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18


state 34

    (3) statement -> statement AND statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 3 (statement -> statement AND statement .)
    RPAREN          reduce using rule 3 (statement -> statement AND statement .)
    COLON           reduce using rule 3 (statement -> statement AND statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 3 (statement -> statement AND statement .) ]
  ! OR              [ reduce using rule 3 (statement -> statement AND statement .) ]
  ! POWER           [ reduce using rule 3 (statement -> statement AND statement .) ]
  ! PLUS            [ reduce using rule 3 (statement -> statement AND statement .) ]
  ! MINUS           [ reduce using rule 3 (statement -> statement AND statement .) ]
  ! TIMES           [ reduce using rule 3 (statement -> statement AND statement .) ]
  ! DIVIDE          [ reduce using rule 3 (statement -> statement AND statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 3 (statement -> statement AND statement .) ]


state 35

    (4) statement -> statement OR statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 4 (statement -> statement OR statement .)
    RPAREN          reduce using rule 4 (statement -> statement OR statement .)
    COLON           reduce using rule 4 (statement -> statement OR statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 4 (statement -> statement OR statement .) ]
  ! OR              [ reduce using rule 4 (statement -> statement OR statement .) ]
  ! POWER           [ reduce using rule 4 (statement -> statement OR statement .) ]
  ! PLUS            [ reduce using rule 4 (statement -> statement OR statement .) ]
  ! MINUS           [ reduce using rule 4 (statement -> statement OR statement .) ]
  ! TIMES           [ reduce using rule 4 (statement -> statement OR statement .) ]
  ! DIVIDE          [ reduce using rule 4 (statement -> statement OR statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 4 (statement -> statement OR statement .) ]


state 36

    (6) statement -> statement POWER statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 6 (statement -> statement POWER statement .)
    RPAREN          reduce using rule 6 (statement -> statement POWER statement .)
    COLON           reduce using rule 6 (statement -> statement POWER statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 6 (statement -> statement POWER statement .) ]
  ! OR              [ reduce using rule 6 (statement -> statement POWER statement .) ]
  ! POWER           [ reduce using rule 6 (statement -> statement POWER statement .) ]
  ! PLUS            [ reduce using rule 6 (statement -> statement POWER statement .) ]
  ! MINUS           [ reduce using rule 6 (statement -> statement POWER statement .) ]
  ! TIMES           [ reduce using rule 6 (statement -> statement POWER statement .) ]
  ! DIVIDE          [ reduce using rule 6 (statement -> statement POWER statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 6 (statement -> statement POWER statement .) ]


state 37

    (15) statement -> statement PLUS statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 15 (statement -> statement PLUS statement .)
    RPAREN          reduce using rule 15 (statement -> statement PLUS statement .)
    COLON           reduce using rule 15 (statement -> statement PLUS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 15 (statement -> statement PLUS statement .) ]
  ! OR              [ reduce using rule 15 (statement -> statement PLUS statement .) ]
  ! POWER           [ reduce using rule 15 (statement -> statement PLUS statement .) ]
  ! PLUS            [ reduce using rule 15 (statement -> statement PLUS statement .) ]
  ! MINUS           [ reduce using rule 15 (statement -> statement PLUS statement .) ]
  ! TIMES           [ reduce using rule 15 (statement -> statement PLUS statement .) ]
  ! DIVIDE          [ reduce using rule 15 (statement -> statement PLUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 15 (statement -> statement PLUS statement .) ]


state 38

    (13) statement -> statement PLUS NUMBER .
    (12) statement -> NUMBER . PLUS NUMBER
    (14) statement -> NUMBER . PLUS statement
    (16) statement -> NUMBER . MINUS NUMBER
    (18) statement -> NUMBER . MINUS statement
    (20) statement -> NUMBER . TIMES NUMBER
    (22) statement -> NUMBER . TIMES statement
    (24) statement -> NUMBER . DIVIDE NUMBER
    (26) statement -> NUMBER . DIVIDE statement
    (30) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (33) statement -> NUMBER . DOUBLE_EQUALS statement
    (37) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 13 (statement -> statement PLUS NUMBER .)
    OR              reduce using rule 13 (statement -> statement PLUS NUMBER .)
    POWER           reduce using rule 13 (statement -> statement PLUS NUMBER .)
    $end            reduce using rule 13 (statement -> statement PLUS NUMBER .)
    RPAREN          reduce using rule 13 (statement -> statement PLUS NUMBER .)
    COLON           reduce using rule 13 (statement -> statement PLUS NUMBER .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    DOUBLE_EQUALS   shift and go to state 28

  ! PLUS            [ reduce using rule 13 (statement -> statement PLUS NUMBER .) ]
  ! MINUS           [ reduce using rule 13 (statement -> statement PLUS NUMBER .) ]
  ! TIMES           [ reduce using rule 13 (statement -> statement PLUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 13 (statement -> statement PLUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 13 (statement -> statement PLUS NUMBER .) ]


state 39

    (19) statement -> statement MINUS statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 19 (statement -> statement MINUS statement .)
    RPAREN          reduce using rule 19 (statement -> statement MINUS statement .)
    COLON           reduce using rule 19 (statement -> statement MINUS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 19 (statement -> statement MINUS statement .) ]
  ! OR              [ reduce using rule 19 (statement -> statement MINUS statement .) ]
  ! POWER           [ reduce using rule 19 (statement -> statement MINUS statement .) ]
  ! PLUS            [ reduce using rule 19 (statement -> statement MINUS statement .) ]
  ! MINUS           [ reduce using rule 19 (statement -> statement MINUS statement .) ]
  ! TIMES           [ reduce using rule 19 (statement -> statement MINUS statement .) ]
  ! DIVIDE          [ reduce using rule 19 (statement -> statement MINUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 19 (statement -> statement MINUS statement .) ]


state 40

    (17) statement -> statement MINUS NUMBER .
    (12) statement -> NUMBER . PLUS NUMBER
    (14) statement -> NUMBER . PLUS statement
    (16) statement -> NUMBER . MINUS NUMBER
    (18) statement -> NUMBER . MINUS statement
    (20) statement -> NUMBER . TIMES NUMBER
    (22) statement -> NUMBER . TIMES statement
    (24) statement -> NUMBER . DIVIDE NUMBER
    (26) statement -> NUMBER . DIVIDE statement
    (30) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (33) statement -> NUMBER . DOUBLE_EQUALS statement
    (37) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 17 (statement -> statement MINUS NUMBER .)
    OR              reduce using rule 17 (statement -> statement MINUS NUMBER .)
    POWER           reduce using rule 17 (statement -> statement MINUS NUMBER .)
    $end            reduce using rule 17 (statement -> statement MINUS NUMBER .)
    RPAREN          reduce using rule 17 (statement -> statement MINUS NUMBER .)
    COLON           reduce using rule 17 (statement -> statement MINUS NUMBER .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    DOUBLE_EQUALS   shift and go to state 28

  ! PLUS            [ reduce using rule 17 (statement -> statement MINUS NUMBER .) ]
  ! MINUS           [ reduce using rule 17 (statement -> statement MINUS NUMBER .) ]
  ! TIMES           [ reduce using rule 17 (statement -> statement MINUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 17 (statement -> statement MINUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 17 (statement -> statement MINUS NUMBER .) ]


state 41

    (23) statement -> statement TIMES statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 23 (statement -> statement TIMES statement .)
    RPAREN          reduce using rule 23 (statement -> statement TIMES statement .)
    COLON           reduce using rule 23 (statement -> statement TIMES statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 23 (statement -> statement TIMES statement .) ]
  ! OR              [ reduce using rule 23 (statement -> statement TIMES statement .) ]
  ! POWER           [ reduce using rule 23 (statement -> statement TIMES statement .) ]
  ! PLUS            [ reduce using rule 23 (statement -> statement TIMES statement .) ]
  ! MINUS           [ reduce using rule 23 (statement -> statement TIMES statement .) ]
  ! TIMES           [ reduce using rule 23 (statement -> statement TIMES statement .) ]
  ! DIVIDE          [ reduce using rule 23 (statement -> statement TIMES statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 23 (statement -> statement TIMES statement .) ]


state 42

    (21) statement -> statement TIMES NUMBER .
    (12) statement -> NUMBER . PLUS NUMBER
    (14) statement -> NUMBER . PLUS statement
    (16) statement -> NUMBER . MINUS NUMBER
    (18) statement -> NUMBER . MINUS statement
    (20) statement -> NUMBER . TIMES NUMBER
    (22) statement -> NUMBER . TIMES statement
    (24) statement -> NUMBER . DIVIDE NUMBER
    (26) statement -> NUMBER . DIVIDE statement
    (30) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (33) statement -> NUMBER . DOUBLE_EQUALS statement
    (37) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 21 (statement -> statement TIMES NUMBER .)
    OR              reduce using rule 21 (statement -> statement TIMES NUMBER .)
    POWER           reduce using rule 21 (statement -> statement TIMES NUMBER .)
    $end            reduce using rule 21 (statement -> statement TIMES NUMBER .)
    RPAREN          reduce using rule 21 (statement -> statement TIMES NUMBER .)
    COLON           reduce using rule 21 (statement -> statement TIMES NUMBER .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    DOUBLE_EQUALS   shift and go to state 28

  ! PLUS            [ reduce using rule 21 (statement -> statement TIMES NUMBER .) ]
  ! MINUS           [ reduce using rule 21 (statement -> statement TIMES NUMBER .) ]
  ! TIMES           [ reduce using rule 21 (statement -> statement TIMES NUMBER .) ]
  ! DIVIDE          [ reduce using rule 21 (statement -> statement TIMES NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 21 (statement -> statement TIMES NUMBER .) ]


state 43

    (27) statement -> statement DIVIDE statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 27 (statement -> statement DIVIDE statement .)
    RPAREN          reduce using rule 27 (statement -> statement DIVIDE statement .)
    COLON           reduce using rule 27 (statement -> statement DIVIDE statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 27 (statement -> statement DIVIDE statement .) ]
  ! OR              [ reduce using rule 27 (statement -> statement DIVIDE statement .) ]
  ! POWER           [ reduce using rule 27 (statement -> statement DIVIDE statement .) ]
  ! PLUS            [ reduce using rule 27 (statement -> statement DIVIDE statement .) ]
  ! MINUS           [ reduce using rule 27 (statement -> statement DIVIDE statement .) ]
  ! TIMES           [ reduce using rule 27 (statement -> statement DIVIDE statement .) ]
  ! DIVIDE          [ reduce using rule 27 (statement -> statement DIVIDE statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 27 (statement -> statement DIVIDE statement .) ]


state 44

    (25) statement -> statement DIVIDE NUMBER .
    (12) statement -> NUMBER . PLUS NUMBER
    (14) statement -> NUMBER . PLUS statement
    (16) statement -> NUMBER . MINUS NUMBER
    (18) statement -> NUMBER . MINUS statement
    (20) statement -> NUMBER . TIMES NUMBER
    (22) statement -> NUMBER . TIMES statement
    (24) statement -> NUMBER . DIVIDE NUMBER
    (26) statement -> NUMBER . DIVIDE statement
    (30) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (33) statement -> NUMBER . DOUBLE_EQUALS statement
    (37) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 25 (statement -> statement DIVIDE NUMBER .)
    OR              reduce using rule 25 (statement -> statement DIVIDE NUMBER .)
    POWER           reduce using rule 25 (statement -> statement DIVIDE NUMBER .)
    $end            reduce using rule 25 (statement -> statement DIVIDE NUMBER .)
    RPAREN          reduce using rule 25 (statement -> statement DIVIDE NUMBER .)
    COLON           reduce using rule 25 (statement -> statement DIVIDE NUMBER .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    DOUBLE_EQUALS   shift and go to state 28

  ! PLUS            [ reduce using rule 25 (statement -> statement DIVIDE NUMBER .) ]
  ! MINUS           [ reduce using rule 25 (statement -> statement DIVIDE NUMBER .) ]
  ! TIMES           [ reduce using rule 25 (statement -> statement DIVIDE NUMBER .) ]
  ! DIVIDE          [ reduce using rule 25 (statement -> statement DIVIDE NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 25 (statement -> statement DIVIDE NUMBER .) ]


state 45

    (29) statement -> statement DOUBLE_EQUALS statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 29 (statement -> statement DOUBLE_EQUALS statement .)
    RPAREN          reduce using rule 29 (statement -> statement DOUBLE_EQUALS statement .)
    COLON           reduce using rule 29 (statement -> statement DOUBLE_EQUALS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 29 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! OR              [ reduce using rule 29 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! POWER           [ reduce using rule 29 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! PLUS            [ reduce using rule 29 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! MINUS           [ reduce using rule 29 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! TIMES           [ reduce using rule 29 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! DIVIDE          [ reduce using rule 29 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 29 (statement -> statement DOUBLE_EQUALS statement .) ]


state 46

    (32) statement -> statement DOUBLE_EQUALS NUMBER .
    (12) statement -> NUMBER . PLUS NUMBER
    (14) statement -> NUMBER . PLUS statement
    (16) statement -> NUMBER . MINUS NUMBER
    (18) statement -> NUMBER . MINUS statement
    (20) statement -> NUMBER . TIMES NUMBER
    (22) statement -> NUMBER . TIMES statement
    (24) statement -> NUMBER . DIVIDE NUMBER
    (26) statement -> NUMBER . DIVIDE statement
    (30) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (33) statement -> NUMBER . DOUBLE_EQUALS statement
    (37) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 32 (statement -> statement DOUBLE_EQUALS NUMBER .)
    OR              reduce using rule 32 (statement -> statement DOUBLE_EQUALS NUMBER .)
    POWER           reduce using rule 32 (statement -> statement DOUBLE_EQUALS NUMBER .)
    $end            reduce using rule 32 (statement -> statement DOUBLE_EQUALS NUMBER .)
    RPAREN          reduce using rule 32 (statement -> statement DOUBLE_EQUALS NUMBER .)
    COLON           reduce using rule 32 (statement -> statement DOUBLE_EQUALS NUMBER .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    DOUBLE_EQUALS   shift and go to state 28

  ! PLUS            [ reduce using rule 32 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! MINUS           [ reduce using rule 32 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! TIMES           [ reduce using rule 32 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 32 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 32 (statement -> statement DOUBLE_EQUALS NUMBER .) ]


state 47

    (34) statement -> statement DOUBLE_EQUALS STRING .
    (31) statement -> STRING . DOUBLE_EQUALS STRING
    (35) statement -> STRING . DOUBLE_EQUALS statement
    (36) statement -> STRING . DOUBLE_EQUALS NUMBER

  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 34 (statement -> statement DOUBLE_EQUALS STRING .)
    OR              reduce using rule 34 (statement -> statement DOUBLE_EQUALS STRING .)
    POWER           reduce using rule 34 (statement -> statement DOUBLE_EQUALS STRING .)
    PLUS            reduce using rule 34 (statement -> statement DOUBLE_EQUALS STRING .)
    MINUS           reduce using rule 34 (statement -> statement DOUBLE_EQUALS STRING .)
    TIMES           reduce using rule 34 (statement -> statement DOUBLE_EQUALS STRING .)
    DIVIDE          reduce using rule 34 (statement -> statement DOUBLE_EQUALS STRING .)
    $end            reduce using rule 34 (statement -> statement DOUBLE_EQUALS STRING .)
    RPAREN          reduce using rule 34 (statement -> statement DOUBLE_EQUALS STRING .)
    COLON           reduce using rule 34 (statement -> statement DOUBLE_EQUALS STRING .)
    DOUBLE_EQUALS   shift and go to state 32

  ! DOUBLE_EQUALS   [ reduce using rule 34 (statement -> statement DOUBLE_EQUALS STRING .) ]


state 48

    (1) statement -> SET_UP LPAREN VARIABLE . COMMA NUMBER RPAREN

    COMMA           shift and go to state 74


state 49

    (28) statement -> LPAREN statement RPAREN .

    AND             reduce using rule 28 (statement -> LPAREN statement RPAREN .)
    OR              reduce using rule 28 (statement -> LPAREN statement RPAREN .)
    POWER           reduce using rule 28 (statement -> LPAREN statement RPAREN .)
    PLUS            reduce using rule 28 (statement -> LPAREN statement RPAREN .)
    MINUS           reduce using rule 28 (statement -> LPAREN statement RPAREN .)
    TIMES           reduce using rule 28 (statement -> LPAREN statement RPAREN .)
    DIVIDE          reduce using rule 28 (statement -> LPAREN statement RPAREN .)
    DOUBLE_EQUALS   reduce using rule 28 (statement -> LPAREN statement RPAREN .)
    $end            reduce using rule 28 (statement -> LPAREN statement RPAREN .)
    RPAREN          reduce using rule 28 (statement -> LPAREN statement RPAREN .)
    COLON           reduce using rule 28 (statement -> LPAREN statement RPAREN .)


state 50

    (39) statement -> VARIABLE EQUALS ARRAY . LPAREN LIST RPAREN

    LPAREN          shift and go to state 75


state 51

    (40) statement -> VARIABLE EQUALS NP_ADD . LPAREN VARIABLE COMMA VARIABLE RPAREN

    LPAREN          shift and go to state 76


state 52

    (41) statement -> VARIABLE EQUALS NP_SUBTRACT . LPAREN VARIABLE COMMA VARIABLE RPAREN

    LPAREN          shift and go to state 77


state 53

    (42) statement -> VARIABLE EQUALS NP_SUM . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 78


state 54

    (43) statement -> VARIABLE EQUALS NP_DOT_PRODUCT . LPAREN VARIABLE COMMA VARIABLE RPAREN

    LPAREN          shift and go to state 79


state 55

    (12) statement -> NUMBER PLUS NUMBER .
    (12) statement -> NUMBER . PLUS NUMBER
    (14) statement -> NUMBER . PLUS statement
    (16) statement -> NUMBER . MINUS NUMBER
    (18) statement -> NUMBER . MINUS statement
    (20) statement -> NUMBER . TIMES NUMBER
    (22) statement -> NUMBER . TIMES statement
    (24) statement -> NUMBER . DIVIDE NUMBER
    (26) statement -> NUMBER . DIVIDE statement
    (30) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (33) statement -> NUMBER . DOUBLE_EQUALS statement
    (37) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 12 (statement -> NUMBER PLUS NUMBER .)
    OR              reduce using rule 12 (statement -> NUMBER PLUS NUMBER .)
    POWER           reduce using rule 12 (statement -> NUMBER PLUS NUMBER .)
    $end            reduce using rule 12 (statement -> NUMBER PLUS NUMBER .)
    RPAREN          reduce using rule 12 (statement -> NUMBER PLUS NUMBER .)
    COLON           reduce using rule 12 (statement -> NUMBER PLUS NUMBER .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    DOUBLE_EQUALS   shift and go to state 28

  ! PLUS            [ reduce using rule 12 (statement -> NUMBER PLUS NUMBER .) ]
  ! MINUS           [ reduce using rule 12 (statement -> NUMBER PLUS NUMBER .) ]
  ! TIMES           [ reduce using rule 12 (statement -> NUMBER PLUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 12 (statement -> NUMBER PLUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 12 (statement -> NUMBER PLUS NUMBER .) ]


state 56

    (14) statement -> NUMBER PLUS statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 14 (statement -> NUMBER PLUS statement .)
    RPAREN          reduce using rule 14 (statement -> NUMBER PLUS statement .)
    COLON           reduce using rule 14 (statement -> NUMBER PLUS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 14 (statement -> NUMBER PLUS statement .) ]
  ! OR              [ reduce using rule 14 (statement -> NUMBER PLUS statement .) ]
  ! POWER           [ reduce using rule 14 (statement -> NUMBER PLUS statement .) ]
  ! PLUS            [ reduce using rule 14 (statement -> NUMBER PLUS statement .) ]
  ! MINUS           [ reduce using rule 14 (statement -> NUMBER PLUS statement .) ]
  ! TIMES           [ reduce using rule 14 (statement -> NUMBER PLUS statement .) ]
  ! DIVIDE          [ reduce using rule 14 (statement -> NUMBER PLUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 14 (statement -> NUMBER PLUS statement .) ]


state 57

    (16) statement -> NUMBER MINUS NUMBER .
    (12) statement -> NUMBER . PLUS NUMBER
    (14) statement -> NUMBER . PLUS statement
    (16) statement -> NUMBER . MINUS NUMBER
    (18) statement -> NUMBER . MINUS statement
    (20) statement -> NUMBER . TIMES NUMBER
    (22) statement -> NUMBER . TIMES statement
    (24) statement -> NUMBER . DIVIDE NUMBER
    (26) statement -> NUMBER . DIVIDE statement
    (30) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (33) statement -> NUMBER . DOUBLE_EQUALS statement
    (37) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 16 (statement -> NUMBER MINUS NUMBER .)
    OR              reduce using rule 16 (statement -> NUMBER MINUS NUMBER .)
    POWER           reduce using rule 16 (statement -> NUMBER MINUS NUMBER .)
    $end            reduce using rule 16 (statement -> NUMBER MINUS NUMBER .)
    RPAREN          reduce using rule 16 (statement -> NUMBER MINUS NUMBER .)
    COLON           reduce using rule 16 (statement -> NUMBER MINUS NUMBER .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    DOUBLE_EQUALS   shift and go to state 28

  ! PLUS            [ reduce using rule 16 (statement -> NUMBER MINUS NUMBER .) ]
  ! MINUS           [ reduce using rule 16 (statement -> NUMBER MINUS NUMBER .) ]
  ! TIMES           [ reduce using rule 16 (statement -> NUMBER MINUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 16 (statement -> NUMBER MINUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 16 (statement -> NUMBER MINUS NUMBER .) ]


state 58

    (18) statement -> NUMBER MINUS statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 18 (statement -> NUMBER MINUS statement .)
    RPAREN          reduce using rule 18 (statement -> NUMBER MINUS statement .)
    COLON           reduce using rule 18 (statement -> NUMBER MINUS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 18 (statement -> NUMBER MINUS statement .) ]
  ! OR              [ reduce using rule 18 (statement -> NUMBER MINUS statement .) ]
  ! POWER           [ reduce using rule 18 (statement -> NUMBER MINUS statement .) ]
  ! PLUS            [ reduce using rule 18 (statement -> NUMBER MINUS statement .) ]
  ! MINUS           [ reduce using rule 18 (statement -> NUMBER MINUS statement .) ]
  ! TIMES           [ reduce using rule 18 (statement -> NUMBER MINUS statement .) ]
  ! DIVIDE          [ reduce using rule 18 (statement -> NUMBER MINUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 18 (statement -> NUMBER MINUS statement .) ]


state 59

    (20) statement -> NUMBER TIMES NUMBER .
    (12) statement -> NUMBER . PLUS NUMBER
    (14) statement -> NUMBER . PLUS statement
    (16) statement -> NUMBER . MINUS NUMBER
    (18) statement -> NUMBER . MINUS statement
    (20) statement -> NUMBER . TIMES NUMBER
    (22) statement -> NUMBER . TIMES statement
    (24) statement -> NUMBER . DIVIDE NUMBER
    (26) statement -> NUMBER . DIVIDE statement
    (30) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (33) statement -> NUMBER . DOUBLE_EQUALS statement
    (37) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 20 (statement -> NUMBER TIMES NUMBER .)
    OR              reduce using rule 20 (statement -> NUMBER TIMES NUMBER .)
    POWER           reduce using rule 20 (statement -> NUMBER TIMES NUMBER .)
    $end            reduce using rule 20 (statement -> NUMBER TIMES NUMBER .)
    RPAREN          reduce using rule 20 (statement -> NUMBER TIMES NUMBER .)
    COLON           reduce using rule 20 (statement -> NUMBER TIMES NUMBER .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    DOUBLE_EQUALS   shift and go to state 28

  ! PLUS            [ reduce using rule 20 (statement -> NUMBER TIMES NUMBER .) ]
  ! MINUS           [ reduce using rule 20 (statement -> NUMBER TIMES NUMBER .) ]
  ! TIMES           [ reduce using rule 20 (statement -> NUMBER TIMES NUMBER .) ]
  ! DIVIDE          [ reduce using rule 20 (statement -> NUMBER TIMES NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 20 (statement -> NUMBER TIMES NUMBER .) ]


state 60

    (22) statement -> NUMBER TIMES statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 22 (statement -> NUMBER TIMES statement .)
    RPAREN          reduce using rule 22 (statement -> NUMBER TIMES statement .)
    COLON           reduce using rule 22 (statement -> NUMBER TIMES statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 22 (statement -> NUMBER TIMES statement .) ]
  ! OR              [ reduce using rule 22 (statement -> NUMBER TIMES statement .) ]
  ! POWER           [ reduce using rule 22 (statement -> NUMBER TIMES statement .) ]
  ! PLUS            [ reduce using rule 22 (statement -> NUMBER TIMES statement .) ]
  ! MINUS           [ reduce using rule 22 (statement -> NUMBER TIMES statement .) ]
  ! TIMES           [ reduce using rule 22 (statement -> NUMBER TIMES statement .) ]
  ! DIVIDE          [ reduce using rule 22 (statement -> NUMBER TIMES statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 22 (statement -> NUMBER TIMES statement .) ]


state 61

    (24) statement -> NUMBER DIVIDE NUMBER .
    (12) statement -> NUMBER . PLUS NUMBER
    (14) statement -> NUMBER . PLUS statement
    (16) statement -> NUMBER . MINUS NUMBER
    (18) statement -> NUMBER . MINUS statement
    (20) statement -> NUMBER . TIMES NUMBER
    (22) statement -> NUMBER . TIMES statement
    (24) statement -> NUMBER . DIVIDE NUMBER
    (26) statement -> NUMBER . DIVIDE statement
    (30) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (33) statement -> NUMBER . DOUBLE_EQUALS statement
    (37) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 24 (statement -> NUMBER DIVIDE NUMBER .)
    OR              reduce using rule 24 (statement -> NUMBER DIVIDE NUMBER .)
    POWER           reduce using rule 24 (statement -> NUMBER DIVIDE NUMBER .)
    $end            reduce using rule 24 (statement -> NUMBER DIVIDE NUMBER .)
    RPAREN          reduce using rule 24 (statement -> NUMBER DIVIDE NUMBER .)
    COLON           reduce using rule 24 (statement -> NUMBER DIVIDE NUMBER .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    DOUBLE_EQUALS   shift and go to state 28

  ! PLUS            [ reduce using rule 24 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! MINUS           [ reduce using rule 24 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! TIMES           [ reduce using rule 24 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! DIVIDE          [ reduce using rule 24 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 24 (statement -> NUMBER DIVIDE NUMBER .) ]


state 62

    (26) statement -> NUMBER DIVIDE statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 26 (statement -> NUMBER DIVIDE statement .)
    RPAREN          reduce using rule 26 (statement -> NUMBER DIVIDE statement .)
    COLON           reduce using rule 26 (statement -> NUMBER DIVIDE statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 26 (statement -> NUMBER DIVIDE statement .) ]
  ! OR              [ reduce using rule 26 (statement -> NUMBER DIVIDE statement .) ]
  ! POWER           [ reduce using rule 26 (statement -> NUMBER DIVIDE statement .) ]
  ! PLUS            [ reduce using rule 26 (statement -> NUMBER DIVIDE statement .) ]
  ! MINUS           [ reduce using rule 26 (statement -> NUMBER DIVIDE statement .) ]
  ! TIMES           [ reduce using rule 26 (statement -> NUMBER DIVIDE statement .) ]
  ! DIVIDE          [ reduce using rule 26 (statement -> NUMBER DIVIDE statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 26 (statement -> NUMBER DIVIDE statement .) ]


state 63

    (30) statement -> NUMBER DOUBLE_EQUALS NUMBER .
    (12) statement -> NUMBER . PLUS NUMBER
    (14) statement -> NUMBER . PLUS statement
    (16) statement -> NUMBER . MINUS NUMBER
    (18) statement -> NUMBER . MINUS statement
    (20) statement -> NUMBER . TIMES NUMBER
    (22) statement -> NUMBER . TIMES statement
    (24) statement -> NUMBER . DIVIDE NUMBER
    (26) statement -> NUMBER . DIVIDE statement
    (30) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (33) statement -> NUMBER . DOUBLE_EQUALS statement
    (37) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 30 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    OR              reduce using rule 30 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    POWER           reduce using rule 30 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    $end            reduce using rule 30 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    RPAREN          reduce using rule 30 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    COLON           reduce using rule 30 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    DOUBLE_EQUALS   shift and go to state 28

  ! PLUS            [ reduce using rule 30 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! MINUS           [ reduce using rule 30 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! TIMES           [ reduce using rule 30 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 30 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 30 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]


state 64

    (33) statement -> NUMBER DOUBLE_EQUALS statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 33 (statement -> NUMBER DOUBLE_EQUALS statement .)
    RPAREN          reduce using rule 33 (statement -> NUMBER DOUBLE_EQUALS statement .)
    COLON           reduce using rule 33 (statement -> NUMBER DOUBLE_EQUALS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 33 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! OR              [ reduce using rule 33 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! POWER           [ reduce using rule 33 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! PLUS            [ reduce using rule 33 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! MINUS           [ reduce using rule 33 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! TIMES           [ reduce using rule 33 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! DIVIDE          [ reduce using rule 33 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 33 (statement -> NUMBER DOUBLE_EQUALS statement .) ]


state 65

    (37) statement -> NUMBER DOUBLE_EQUALS STRING .
    (31) statement -> STRING . DOUBLE_EQUALS STRING
    (35) statement -> STRING . DOUBLE_EQUALS statement
    (36) statement -> STRING . DOUBLE_EQUALS NUMBER

  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 37 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    OR              reduce using rule 37 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    POWER           reduce using rule 37 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    PLUS            reduce using rule 37 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    MINUS           reduce using rule 37 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    TIMES           reduce using rule 37 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    DIVIDE          reduce using rule 37 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    $end            reduce using rule 37 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    RPAREN          reduce using rule 37 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    COLON           reduce using rule 37 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    DOUBLE_EQUALS   shift and go to state 32

  ! DOUBLE_EQUALS   [ reduce using rule 37 (statement -> NUMBER DOUBLE_EQUALS STRING .) ]


state 66

    (2) statement -> SET_UP_HOST LPAREN VARIABLE . COMMA ARGS COMMA NUMBER RPAREN

    COMMA           shift and go to state 80


state 67

    (9) statement -> PRINT LPAREN STRING . RPAREN
    (31) statement -> STRING . DOUBLE_EQUALS STRING
    (35) statement -> STRING . DOUBLE_EQUALS statement
    (36) statement -> STRING . DOUBLE_EQUALS NUMBER

    RPAREN          shift and go to state 81
    DOUBLE_EQUALS   shift and go to state 32


state 68

    (10) statement -> PRINT LPAREN NUMBER . RPAREN
    (12) statement -> NUMBER . PLUS NUMBER
    (14) statement -> NUMBER . PLUS statement
    (16) statement -> NUMBER . MINUS NUMBER
    (18) statement -> NUMBER . MINUS statement
    (20) statement -> NUMBER . TIMES NUMBER
    (22) statement -> NUMBER . TIMES statement
    (24) statement -> NUMBER . DIVIDE NUMBER
    (26) statement -> NUMBER . DIVIDE statement
    (30) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (33) statement -> NUMBER . DOUBLE_EQUALS statement
    (37) statement -> NUMBER . DOUBLE_EQUALS STRING

    RPAREN          shift and go to state 82
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    DOUBLE_EQUALS   shift and go to state 28


state 69

    (11) statement -> PRINT LPAREN statement . RPAREN
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

    RPAREN          shift and go to state 83
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18


state 70

    (31) statement -> STRING DOUBLE_EQUALS STRING .
    (31) statement -> STRING . DOUBLE_EQUALS STRING
    (35) statement -> STRING . DOUBLE_EQUALS statement
    (36) statement -> STRING . DOUBLE_EQUALS NUMBER

  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 31 (statement -> STRING DOUBLE_EQUALS STRING .)
    OR              reduce using rule 31 (statement -> STRING DOUBLE_EQUALS STRING .)
    POWER           reduce using rule 31 (statement -> STRING DOUBLE_EQUALS STRING .)
    PLUS            reduce using rule 31 (statement -> STRING DOUBLE_EQUALS STRING .)
    MINUS           reduce using rule 31 (statement -> STRING DOUBLE_EQUALS STRING .)
    TIMES           reduce using rule 31 (statement -> STRING DOUBLE_EQUALS STRING .)
    DIVIDE          reduce using rule 31 (statement -> STRING DOUBLE_EQUALS STRING .)
    $end            reduce using rule 31 (statement -> STRING DOUBLE_EQUALS STRING .)
    RPAREN          reduce using rule 31 (statement -> STRING DOUBLE_EQUALS STRING .)
    COLON           reduce using rule 31 (statement -> STRING DOUBLE_EQUALS STRING .)
    DOUBLE_EQUALS   shift and go to state 32

  ! DOUBLE_EQUALS   [ reduce using rule 31 (statement -> STRING DOUBLE_EQUALS STRING .) ]


state 71

    (35) statement -> STRING DOUBLE_EQUALS statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 35 (statement -> STRING DOUBLE_EQUALS statement .)
    RPAREN          reduce using rule 35 (statement -> STRING DOUBLE_EQUALS statement .)
    COLON           reduce using rule 35 (statement -> STRING DOUBLE_EQUALS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 35 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! OR              [ reduce using rule 35 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! POWER           [ reduce using rule 35 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! PLUS            [ reduce using rule 35 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! MINUS           [ reduce using rule 35 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! TIMES           [ reduce using rule 35 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! DIVIDE          [ reduce using rule 35 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 35 (statement -> STRING DOUBLE_EQUALS statement .) ]


state 72

    (36) statement -> STRING DOUBLE_EQUALS NUMBER .
    (12) statement -> NUMBER . PLUS NUMBER
    (14) statement -> NUMBER . PLUS statement
    (16) statement -> NUMBER . MINUS NUMBER
    (18) statement -> NUMBER . MINUS statement
    (20) statement -> NUMBER . TIMES NUMBER
    (22) statement -> NUMBER . TIMES statement
    (24) statement -> NUMBER . DIVIDE NUMBER
    (26) statement -> NUMBER . DIVIDE statement
    (30) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (33) statement -> NUMBER . DOUBLE_EQUALS statement
    (37) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 36 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    OR              reduce using rule 36 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    POWER           reduce using rule 36 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    $end            reduce using rule 36 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    RPAREN          reduce using rule 36 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    COLON           reduce using rule 36 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    DOUBLE_EQUALS   shift and go to state 28

  ! PLUS            [ reduce using rule 36 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! MINUS           [ reduce using rule 36 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! TIMES           [ reduce using rule 36 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 36 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 36 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]


state 73

    (38) statement -> IF statement COLON . statement
    (1) statement -> . SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN
    (2) statement -> . SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN
    (3) statement -> . statement AND statement
    (4) statement -> . statement OR statement
    (5) statement -> . NOT statement
    (6) statement -> . statement POWER statement
    (7) statement -> . VARIABLE INCREMENT
    (8) statement -> . VARIABLE DECREMENT
    (9) statement -> . PRINT LPAREN STRING RPAREN
    (10) statement -> . PRINT LPAREN NUMBER RPAREN
    (11) statement -> . PRINT LPAREN statement RPAREN
    (12) statement -> . NUMBER PLUS NUMBER
    (13) statement -> . statement PLUS NUMBER
    (14) statement -> . NUMBER PLUS statement
    (15) statement -> . statement PLUS statement
    (16) statement -> . NUMBER MINUS NUMBER
    (17) statement -> . statement MINUS NUMBER
    (18) statement -> . NUMBER MINUS statement
    (19) statement -> . statement MINUS statement
    (20) statement -> . NUMBER TIMES NUMBER
    (21) statement -> . statement TIMES NUMBER
    (22) statement -> . NUMBER TIMES statement
    (23) statement -> . statement TIMES statement
    (24) statement -> . NUMBER DIVIDE NUMBER
    (25) statement -> . statement DIVIDE NUMBER
    (26) statement -> . NUMBER DIVIDE statement
    (27) statement -> . statement DIVIDE statement
    (28) statement -> . LPAREN statement RPAREN
    (29) statement -> . statement DOUBLE_EQUALS statement
    (30) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (31) statement -> . STRING DOUBLE_EQUALS STRING
    (32) statement -> . statement DOUBLE_EQUALS NUMBER
    (33) statement -> . NUMBER DOUBLE_EQUALS statement
    (34) statement -> . statement DOUBLE_EQUALS STRING
    (35) statement -> . STRING DOUBLE_EQUALS statement
    (36) statement -> . STRING DOUBLE_EQUALS NUMBER
    (37) statement -> . NUMBER DOUBLE_EQUALS STRING
    (38) statement -> . IF statement COLON statement
    (39) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (40) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (41) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    SET_UP          shift and go to state 2
    SET_UP_HOST     shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 8
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 3
    STRING          shift and go to state 9
    IF              shift and go to state 10

    statement                      shift and go to state 84

state 74

    (1) statement -> SET_UP LPAREN VARIABLE COMMA . NUMBER RPAREN

    NUMBER          shift and go to state 85


state 75

    (39) statement -> VARIABLE EQUALS ARRAY LPAREN . LIST RPAREN

    LIST            shift and go to state 86


state 76

    (40) statement -> VARIABLE EQUALS NP_ADD LPAREN . VARIABLE COMMA VARIABLE RPAREN

    VARIABLE        shift and go to state 87


state 77

    (41) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN . VARIABLE COMMA VARIABLE RPAREN

    VARIABLE        shift and go to state 88


state 78

    (42) statement -> VARIABLE EQUALS NP_SUM LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 89


state 79

    (43) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN . VARIABLE COMMA VARIABLE RPAREN

    VARIABLE        shift and go to state 90


state 80

    (2) statement -> SET_UP_HOST LPAREN VARIABLE COMMA . ARGS COMMA NUMBER RPAREN

    ARGS            shift and go to state 91


state 81

    (9) statement -> PRINT LPAREN STRING RPAREN .

    AND             reduce using rule 9 (statement -> PRINT LPAREN STRING RPAREN .)
    OR              reduce using rule 9 (statement -> PRINT LPAREN STRING RPAREN .)
    POWER           reduce using rule 9 (statement -> PRINT LPAREN STRING RPAREN .)
    PLUS            reduce using rule 9 (statement -> PRINT LPAREN STRING RPAREN .)
    MINUS           reduce using rule 9 (statement -> PRINT LPAREN STRING RPAREN .)
    TIMES           reduce using rule 9 (statement -> PRINT LPAREN STRING RPAREN .)
    DIVIDE          reduce using rule 9 (statement -> PRINT LPAREN STRING RPAREN .)
    DOUBLE_EQUALS   reduce using rule 9 (statement -> PRINT LPAREN STRING RPAREN .)
    $end            reduce using rule 9 (statement -> PRINT LPAREN STRING RPAREN .)
    RPAREN          reduce using rule 9 (statement -> PRINT LPAREN STRING RPAREN .)
    COLON           reduce using rule 9 (statement -> PRINT LPAREN STRING RPAREN .)


state 82

    (10) statement -> PRINT LPAREN NUMBER RPAREN .

    AND             reduce using rule 10 (statement -> PRINT LPAREN NUMBER RPAREN .)
    OR              reduce using rule 10 (statement -> PRINT LPAREN NUMBER RPAREN .)
    POWER           reduce using rule 10 (statement -> PRINT LPAREN NUMBER RPAREN .)
    PLUS            reduce using rule 10 (statement -> PRINT LPAREN NUMBER RPAREN .)
    MINUS           reduce using rule 10 (statement -> PRINT LPAREN NUMBER RPAREN .)
    TIMES           reduce using rule 10 (statement -> PRINT LPAREN NUMBER RPAREN .)
    DIVIDE          reduce using rule 10 (statement -> PRINT LPAREN NUMBER RPAREN .)
    DOUBLE_EQUALS   reduce using rule 10 (statement -> PRINT LPAREN NUMBER RPAREN .)
    $end            reduce using rule 10 (statement -> PRINT LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 10 (statement -> PRINT LPAREN NUMBER RPAREN .)
    COLON           reduce using rule 10 (statement -> PRINT LPAREN NUMBER RPAREN .)


state 83

    (11) statement -> PRINT LPAREN statement RPAREN .

    AND             reduce using rule 11 (statement -> PRINT LPAREN statement RPAREN .)
    OR              reduce using rule 11 (statement -> PRINT LPAREN statement RPAREN .)
    POWER           reduce using rule 11 (statement -> PRINT LPAREN statement RPAREN .)
    PLUS            reduce using rule 11 (statement -> PRINT LPAREN statement RPAREN .)
    MINUS           reduce using rule 11 (statement -> PRINT LPAREN statement RPAREN .)
    TIMES           reduce using rule 11 (statement -> PRINT LPAREN statement RPAREN .)
    DIVIDE          reduce using rule 11 (statement -> PRINT LPAREN statement RPAREN .)
    DOUBLE_EQUALS   reduce using rule 11 (statement -> PRINT LPAREN statement RPAREN .)
    $end            reduce using rule 11 (statement -> PRINT LPAREN statement RPAREN .)
    RPAREN          reduce using rule 11 (statement -> PRINT LPAREN statement RPAREN .)
    COLON           reduce using rule 11 (statement -> PRINT LPAREN statement RPAREN .)


state 84

    (38) statement -> IF statement COLON statement .
    (3) statement -> statement . AND statement
    (4) statement -> statement . OR statement
    (6) statement -> statement . POWER statement
    (13) statement -> statement . PLUS NUMBER
    (15) statement -> statement . PLUS statement
    (17) statement -> statement . MINUS NUMBER
    (19) statement -> statement . MINUS statement
    (21) statement -> statement . TIMES NUMBER
    (23) statement -> statement . TIMES statement
    (25) statement -> statement . DIVIDE NUMBER
    (27) statement -> statement . DIVIDE statement
    (29) statement -> statement . DOUBLE_EQUALS statement
    (32) statement -> statement . DOUBLE_EQUALS NUMBER
    (34) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 38 (statement -> IF statement COLON statement .)
    RPAREN          reduce using rule 38 (statement -> IF statement COLON statement .)
    COLON           reduce using rule 38 (statement -> IF statement COLON statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 38 (statement -> IF statement COLON statement .) ]
  ! OR              [ reduce using rule 38 (statement -> IF statement COLON statement .) ]
  ! POWER           [ reduce using rule 38 (statement -> IF statement COLON statement .) ]
  ! PLUS            [ reduce using rule 38 (statement -> IF statement COLON statement .) ]
  ! MINUS           [ reduce using rule 38 (statement -> IF statement COLON statement .) ]
  ! TIMES           [ reduce using rule 38 (statement -> IF statement COLON statement .) ]
  ! DIVIDE          [ reduce using rule 38 (statement -> IF statement COLON statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 38 (statement -> IF statement COLON statement .) ]


state 85

    (1) statement -> SET_UP LPAREN VARIABLE COMMA NUMBER . RPAREN

    RPAREN          shift and go to state 92


state 86

    (39) statement -> VARIABLE EQUALS ARRAY LPAREN LIST . RPAREN

    RPAREN          shift and go to state 93


state 87

    (40) statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE . COMMA VARIABLE RPAREN

    COMMA           shift and go to state 94


state 88

    (41) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE . COMMA VARIABLE RPAREN

    COMMA           shift and go to state 95


state 89

    (42) statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 96


state 90

    (43) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE . COMMA VARIABLE RPAREN

    COMMA           shift and go to state 97


state 91

    (2) statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS . COMMA NUMBER RPAREN

    COMMA           shift and go to state 98


state 92

    (1) statement -> SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN .

    AND             reduce using rule 1 (statement -> SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN .)
    OR              reduce using rule 1 (statement -> SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN .)
    POWER           reduce using rule 1 (statement -> SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN .)
    PLUS            reduce using rule 1 (statement -> SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN .)
    MINUS           reduce using rule 1 (statement -> SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN .)
    TIMES           reduce using rule 1 (statement -> SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN .)
    DIVIDE          reduce using rule 1 (statement -> SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN .)
    DOUBLE_EQUALS   reduce using rule 1 (statement -> SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN .)
    $end            reduce using rule 1 (statement -> SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN .)
    RPAREN          reduce using rule 1 (statement -> SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN .)
    COLON           reduce using rule 1 (statement -> SET_UP LPAREN VARIABLE COMMA NUMBER RPAREN .)


state 93

    (39) statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .

    AND             reduce using rule 39 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    OR              reduce using rule 39 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    POWER           reduce using rule 39 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    PLUS            reduce using rule 39 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    MINUS           reduce using rule 39 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    TIMES           reduce using rule 39 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    DIVIDE          reduce using rule 39 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    DOUBLE_EQUALS   reduce using rule 39 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    $end            reduce using rule 39 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    RPAREN          reduce using rule 39 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    COLON           reduce using rule 39 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)


state 94

    (40) statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA . VARIABLE RPAREN

    VARIABLE        shift and go to state 99


state 95

    (41) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA . VARIABLE RPAREN

    VARIABLE        shift and go to state 100


state 96

    (42) statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .

    AND             reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    POWER           reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    PLUS            reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    TIMES           reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    COLON           reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)


state 97

    (43) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA . VARIABLE RPAREN

    VARIABLE        shift and go to state 101


state 98

    (2) statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA . NUMBER RPAREN

    NUMBER          shift and go to state 102


state 99

    (40) statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE . RPAREN

    RPAREN          shift and go to state 103


state 100

    (41) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE . RPAREN

    RPAREN          shift and go to state 104


state 101

    (43) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE . RPAREN

    RPAREN          shift and go to state 105


state 102

    (2) statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER . RPAREN

    RPAREN          shift and go to state 106


state 103

    (40) statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .

    AND             reduce using rule 40 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    OR              reduce using rule 40 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    POWER           reduce using rule 40 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    PLUS            reduce using rule 40 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    MINUS           reduce using rule 40 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    TIMES           reduce using rule 40 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DIVIDE          reduce using rule 40 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 40 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    $end            reduce using rule 40 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 40 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    COLON           reduce using rule 40 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)


state 104

    (41) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .

    AND             reduce using rule 41 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    OR              reduce using rule 41 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    POWER           reduce using rule 41 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    PLUS            reduce using rule 41 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    MINUS           reduce using rule 41 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    TIMES           reduce using rule 41 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DIVIDE          reduce using rule 41 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 41 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    $end            reduce using rule 41 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 41 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    COLON           reduce using rule 41 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)


state 105

    (43) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .

    AND             reduce using rule 43 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    OR              reduce using rule 43 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    POWER           reduce using rule 43 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    PLUS            reduce using rule 43 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    MINUS           reduce using rule 43 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    TIMES           reduce using rule 43 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DIVIDE          reduce using rule 43 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 43 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    $end            reduce using rule 43 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 43 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    COLON           reduce using rule 43 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)


state 106

    (2) statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN .

    AND             reduce using rule 2 (statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN .)
    OR              reduce using rule 2 (statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN .)
    POWER           reduce using rule 2 (statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN .)
    PLUS            reduce using rule 2 (statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN .)
    MINUS           reduce using rule 2 (statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN .)
    TIMES           reduce using rule 2 (statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN .)
    DIVIDE          reduce using rule 2 (statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN .)
    DOUBLE_EQUALS   reduce using rule 2 (statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN .)
    $end            reduce using rule 2 (statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN .)
    RPAREN          reduce using rule 2 (statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN .)
    COLON           reduce using rule 2 (statement -> SET_UP_HOST LPAREN VARIABLE COMMA ARGS COMMA NUMBER RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 30 resolved as shift
WARNING: shift/reduce conflict for OR in state 30 resolved as shift
WARNING: shift/reduce conflict for POWER in state 30 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 30 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 30 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 30 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 30 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 30 resolved as shift
WARNING: shift/reduce conflict for AND in state 34 resolved as shift
WARNING: shift/reduce conflict for OR in state 34 resolved as shift
WARNING: shift/reduce conflict for POWER in state 34 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 34 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 34 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 34 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 34 resolved as shift
WARNING: shift/reduce conflict for AND in state 35 resolved as shift
WARNING: shift/reduce conflict for OR in state 35 resolved as shift
WARNING: shift/reduce conflict for POWER in state 35 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 35 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 35 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 35 resolved as shift
WARNING: shift/reduce conflict for AND in state 36 resolved as shift
WARNING: shift/reduce conflict for OR in state 36 resolved as shift
WARNING: shift/reduce conflict for POWER in state 36 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 36 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 36 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 36 resolved as shift
WARNING: shift/reduce conflict for AND in state 37 resolved as shift
WARNING: shift/reduce conflict for OR in state 37 resolved as shift
WARNING: shift/reduce conflict for POWER in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 37 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 37 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 38 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 38 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 38 resolved as shift
WARNING: shift/reduce conflict for AND in state 39 resolved as shift
WARNING: shift/reduce conflict for OR in state 39 resolved as shift
WARNING: shift/reduce conflict for POWER in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 39 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 39 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 40 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 40 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 40 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 40 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 40 resolved as shift
WARNING: shift/reduce conflict for AND in state 41 resolved as shift
WARNING: shift/reduce conflict for OR in state 41 resolved as shift
WARNING: shift/reduce conflict for POWER in state 41 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 41 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 41 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 41 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 42 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 42 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 42 resolved as shift
WARNING: shift/reduce conflict for AND in state 43 resolved as shift
WARNING: shift/reduce conflict for OR in state 43 resolved as shift
WARNING: shift/reduce conflict for POWER in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 43 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 43 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 44 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 44 resolved as shift
WARNING: shift/reduce conflict for AND in state 45 resolved as shift
WARNING: shift/reduce conflict for OR in state 45 resolved as shift
WARNING: shift/reduce conflict for POWER in state 45 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 45 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 45 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 45 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 45 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 46 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 46 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 46 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 55 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 55 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 55 resolved as shift
WARNING: shift/reduce conflict for AND in state 56 resolved as shift
WARNING: shift/reduce conflict for OR in state 56 resolved as shift
WARNING: shift/reduce conflict for POWER in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 57 resolved as shift
WARNING: shift/reduce conflict for AND in state 58 resolved as shift
WARNING: shift/reduce conflict for OR in state 58 resolved as shift
WARNING: shift/reduce conflict for POWER in state 58 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 58 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 58 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 58 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 58 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 58 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 59 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for POWER in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for POWER in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
WARNING: shift/reduce conflict for POWER in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for POWER in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for POWER in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 84 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 84 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 84 resolved as shift
