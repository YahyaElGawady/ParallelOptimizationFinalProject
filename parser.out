Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    COMMENT
    DEF
    ELIF
    ELSE
    FALSE
    FOR
    IN
    NONE
    NP_ABS
    NP_COS
    NP_EXP
    NP_LOG
    NP_LOG10
    NP_POWER
    NP_SIGN
    NP_SIN
    NP_SQRT
    RANGE
    RETURN
    SET_UP
    SET_UP_HOST
    SPACE
    TRUE
    WHILE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement AND statement
Rule 2     statement -> NUMBER OR NUMBER
Rule 3     statement -> NUMBER OR statement
Rule 4     statement -> statement OR NUMBER
Rule 5     statement -> statement OR statement
Rule 6     statement -> NOT statement
Rule 7     statement -> statement POWER statement
Rule 8     statement -> VARIABLE INCREMENT
Rule 9     statement -> VARIABLE DECREMENT
Rule 10    statement -> PRINT LPAREN STRING RPAREN
Rule 11    statement -> PRINT LPAREN NUMBER RPAREN
Rule 12    statement -> PRINT LPAREN statement RPAREN
Rule 13    statement -> NUMBER PLUS NUMBER
Rule 14    statement -> statement PLUS NUMBER
Rule 15    statement -> NUMBER PLUS statement
Rule 16    statement -> statement PLUS statement
Rule 17    statement -> NUMBER MINUS NUMBER
Rule 18    statement -> statement MINUS NUMBER
Rule 19    statement -> NUMBER MINUS statement
Rule 20    statement -> statement MINUS statement
Rule 21    statement -> NUMBER TIMES NUMBER
Rule 22    statement -> statement TIMES NUMBER
Rule 23    statement -> NUMBER TIMES statement
Rule 24    statement -> statement TIMES statement
Rule 25    statement -> NUMBER DIVIDE NUMBER
Rule 26    statement -> statement DIVIDE NUMBER
Rule 27    statement -> NUMBER DIVIDE statement
Rule 28    statement -> statement DIVIDE statement
Rule 29    statement -> LPAREN statement RPAREN
Rule 30    statement -> statement DOUBLE_EQUALS statement
Rule 31    statement -> NUMBER DOUBLE_EQUALS NUMBER
Rule 32    statement -> STRING DOUBLE_EQUALS STRING
Rule 33    statement -> statement DOUBLE_EQUALS NUMBER
Rule 34    statement -> NUMBER DOUBLE_EQUALS statement
Rule 35    statement -> statement DOUBLE_EQUALS STRING
Rule 36    statement -> STRING DOUBLE_EQUALS statement
Rule 37    statement -> STRING DOUBLE_EQUALS NUMBER
Rule 38    statement -> NUMBER DOUBLE_EQUALS STRING
Rule 39    statement -> IF statement COLON statement
Rule 40    statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
Rule 41    statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
Rule 42    statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
Rule 43    statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
Rule 44    statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
Rule 45    statement -> <empty>

Terminals, with rules where they appear

AND                  : 1
ARRAY                : 40
BREAK                : 
COLON                : 39
COMMA                : 41 42 44
COMMENT              : 
DECREMENT            : 9
DEF                  : 
DIVIDE               : 25 26 27 28
DOUBLE_EQUALS        : 30 31 32 33 34 35 36 37 38
ELIF                 : 
ELSE                 : 
EQUALS               : 40 41 42 43 44
FALSE                : 
FOR                  : 
IF                   : 39
IN                   : 
INCREMENT            : 8
LIST                 : 40
LPAREN               : 10 11 12 29 40 41 42 43 44
MINUS                : 17 18 19 20
NONE                 : 
NOT                  : 6
NP_ABS               : 
NP_ADD               : 41
NP_COS               : 
NP_DOT_PRODUCT       : 44
NP_EXP               : 
NP_LOG               : 
NP_LOG10             : 
NP_POWER             : 
NP_SIGN              : 
NP_SIN               : 
NP_SQRT              : 
NP_SUBTRACT          : 42
NP_SUM               : 43
NUMBER               : 2 2 3 4 11 13 13 14 15 17 17 18 19 21 21 22 23 25 25 26 27 31 31 33 34 37 38
OR                   : 2 3 4 5
PLUS                 : 13 14 15 16
POWER                : 7
PRINT                : 10 11 12
RANGE                : 
RETURN               : 
RPAREN               : 10 11 12 29 40 41 42 43 44
SET_UP               : 
SET_UP_HOST          : 
SPACE                : 
STRING               : 10 32 32 35 36 37 38
TIMES                : 21 22 23 24
TRUE                 : 
VARIABLE             : 8 9 40 41 41 41 42 42 42 43 43 44 44 44
WHILE                : 
error                : 

Nonterminals, with rules where they appear

statement            : 1 1 3 4 5 5 6 7 7 12 14 15 16 16 18 19 20 20 22 23 24 24 26 27 28 28 29 30 30 33 34 35 36 39 39 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 2
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16


state 2

    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22


state 3

    (6) statement -> NOT . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 2
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 23

state 4

    (8) statement -> VARIABLE . INCREMENT
    (9) statement -> VARIABLE . DECREMENT
    (40) statement -> VARIABLE . EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> VARIABLE . EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> VARIABLE . EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> VARIABLE . EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> VARIABLE . EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    INCREMENT       shift and go to state 24
    DECREMENT       shift and go to state 25
    EQUALS          shift and go to state 26


state 5

    (10) statement -> PRINT . LPAREN STRING RPAREN
    (11) statement -> PRINT . LPAREN NUMBER RPAREN
    (12) statement -> PRINT . LPAREN statement RPAREN

    LPAREN          shift and go to state 27


state 6

    (29) statement -> LPAREN . statement RPAREN
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 2
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    RPAREN          reduce using rule 45 (statement -> .)
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)

    statement                      shift and go to state 28

state 7

    (32) statement -> STRING . DOUBLE_EQUALS STRING
    (36) statement -> STRING . DOUBLE_EQUALS statement
    (37) statement -> STRING . DOUBLE_EQUALS NUMBER

    DOUBLE_EQUALS   shift and go to state 29


state 8

    (39) statement -> IF . statement COLON statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 2
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    COLON           reduce using rule 45 (statement -> .)
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)

    statement                      shift and go to state 30

state 9

    (1) statement -> statement AND . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 2
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 31

state 10

    (4) statement -> statement OR . NUMBER
    (5) statement -> statement OR . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 33
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 32

state 11

    (7) statement -> statement POWER . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 2
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 34

state 12

    (14) statement -> statement PLUS . NUMBER
    (16) statement -> statement PLUS . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 36
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 35

state 13

    (18) statement -> statement MINUS . NUMBER
    (20) statement -> statement MINUS . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 38
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 37

state 14

    (22) statement -> statement TIMES . NUMBER
    (24) statement -> statement TIMES . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 40
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 39

state 15

    (26) statement -> statement DIVIDE . NUMBER
    (28) statement -> statement DIVIDE . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 42
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 41

state 16

    (30) statement -> statement DOUBLE_EQUALS . statement
    (33) statement -> statement DOUBLE_EQUALS . NUMBER
    (35) statement -> statement DOUBLE_EQUALS . STRING
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 44
    STRING          shift and go to state 45
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 43

state 17

    (2) statement -> NUMBER OR . NUMBER
    (3) statement -> NUMBER OR . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 46
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 47

state 18

    (13) statement -> NUMBER PLUS . NUMBER
    (15) statement -> NUMBER PLUS . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 48
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 49

state 19

    (17) statement -> NUMBER MINUS . NUMBER
    (19) statement -> NUMBER MINUS . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 50
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 51

state 20

    (21) statement -> NUMBER TIMES . NUMBER
    (23) statement -> NUMBER TIMES . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 52
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 53

state 21

    (25) statement -> NUMBER DIVIDE . NUMBER
    (27) statement -> NUMBER DIVIDE . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 54
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 55

state 22

    (31) statement -> NUMBER DOUBLE_EQUALS . NUMBER
    (34) statement -> NUMBER DOUBLE_EQUALS . statement
    (38) statement -> NUMBER DOUBLE_EQUALS . STRING
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 56
    STRING          shift and go to state 58
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 57

state 23

    (6) statement -> NOT statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 6 (statement -> NOT statement .)
    RPAREN          reduce using rule 6 (statement -> NOT statement .)
    COLON           reduce using rule 6 (statement -> NOT statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 6 (statement -> NOT statement .) ]
  ! OR              [ reduce using rule 6 (statement -> NOT statement .) ]
  ! POWER           [ reduce using rule 6 (statement -> NOT statement .) ]
  ! PLUS            [ reduce using rule 6 (statement -> NOT statement .) ]
  ! MINUS           [ reduce using rule 6 (statement -> NOT statement .) ]
  ! TIMES           [ reduce using rule 6 (statement -> NOT statement .) ]
  ! DIVIDE          [ reduce using rule 6 (statement -> NOT statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 6 (statement -> NOT statement .) ]


state 24

    (8) statement -> VARIABLE INCREMENT .

    AND             reduce using rule 8 (statement -> VARIABLE INCREMENT .)
    OR              reduce using rule 8 (statement -> VARIABLE INCREMENT .)
    POWER           reduce using rule 8 (statement -> VARIABLE INCREMENT .)
    PLUS            reduce using rule 8 (statement -> VARIABLE INCREMENT .)
    MINUS           reduce using rule 8 (statement -> VARIABLE INCREMENT .)
    TIMES           reduce using rule 8 (statement -> VARIABLE INCREMENT .)
    DIVIDE          reduce using rule 8 (statement -> VARIABLE INCREMENT .)
    DOUBLE_EQUALS   reduce using rule 8 (statement -> VARIABLE INCREMENT .)
    $end            reduce using rule 8 (statement -> VARIABLE INCREMENT .)
    RPAREN          reduce using rule 8 (statement -> VARIABLE INCREMENT .)
    COLON           reduce using rule 8 (statement -> VARIABLE INCREMENT .)


state 25

    (9) statement -> VARIABLE DECREMENT .

    AND             reduce using rule 9 (statement -> VARIABLE DECREMENT .)
    OR              reduce using rule 9 (statement -> VARIABLE DECREMENT .)
    POWER           reduce using rule 9 (statement -> VARIABLE DECREMENT .)
    PLUS            reduce using rule 9 (statement -> VARIABLE DECREMENT .)
    MINUS           reduce using rule 9 (statement -> VARIABLE DECREMENT .)
    TIMES           reduce using rule 9 (statement -> VARIABLE DECREMENT .)
    DIVIDE          reduce using rule 9 (statement -> VARIABLE DECREMENT .)
    DOUBLE_EQUALS   reduce using rule 9 (statement -> VARIABLE DECREMENT .)
    $end            reduce using rule 9 (statement -> VARIABLE DECREMENT .)
    RPAREN          reduce using rule 9 (statement -> VARIABLE DECREMENT .)
    COLON           reduce using rule 9 (statement -> VARIABLE DECREMENT .)


state 26

    (40) statement -> VARIABLE EQUALS . ARRAY LPAREN LIST RPAREN
    (41) statement -> VARIABLE EQUALS . NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> VARIABLE EQUALS . NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> VARIABLE EQUALS . NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> VARIABLE EQUALS . NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    ARRAY           shift and go to state 59
    NP_ADD          shift and go to state 60
    NP_SUBTRACT     shift and go to state 61
    NP_SUM          shift and go to state 62
    NP_DOT_PRODUCT  shift and go to state 63


state 27

    (10) statement -> PRINT LPAREN . STRING RPAREN
    (11) statement -> PRINT LPAREN . NUMBER RPAREN
    (12) statement -> PRINT LPAREN . statement RPAREN
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    STRING          shift and go to state 64
    NUMBER          shift and go to state 65
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    IF              shift and go to state 8
    RPAREN          reduce using rule 45 (statement -> .)
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)

    statement                      shift and go to state 66

state 28

    (29) statement -> LPAREN statement . RPAREN
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

    RPAREN          shift and go to state 67
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16


state 29

    (32) statement -> STRING DOUBLE_EQUALS . STRING
    (36) statement -> STRING DOUBLE_EQUALS . statement
    (37) statement -> STRING DOUBLE_EQUALS . NUMBER
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    STRING          shift and go to state 68
    NUMBER          shift and go to state 70
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 69

state 30

    (39) statement -> IF statement . COLON statement
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

    COLON           shift and go to state 71
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16


state 31

    (1) statement -> statement AND statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 1 (statement -> statement AND statement .)
    RPAREN          reduce using rule 1 (statement -> statement AND statement .)
    COLON           reduce using rule 1 (statement -> statement AND statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 1 (statement -> statement AND statement .) ]
  ! OR              [ reduce using rule 1 (statement -> statement AND statement .) ]
  ! POWER           [ reduce using rule 1 (statement -> statement AND statement .) ]
  ! PLUS            [ reduce using rule 1 (statement -> statement AND statement .) ]
  ! MINUS           [ reduce using rule 1 (statement -> statement AND statement .) ]
  ! TIMES           [ reduce using rule 1 (statement -> statement AND statement .) ]
  ! DIVIDE          [ reduce using rule 1 (statement -> statement AND statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 1 (statement -> statement AND statement .) ]


state 32

    (5) statement -> statement OR statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 5 (statement -> statement OR statement .)
    RPAREN          reduce using rule 5 (statement -> statement OR statement .)
    COLON           reduce using rule 5 (statement -> statement OR statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 5 (statement -> statement OR statement .) ]
  ! OR              [ reduce using rule 5 (statement -> statement OR statement .) ]
  ! POWER           [ reduce using rule 5 (statement -> statement OR statement .) ]
  ! PLUS            [ reduce using rule 5 (statement -> statement OR statement .) ]
  ! MINUS           [ reduce using rule 5 (statement -> statement OR statement .) ]
  ! TIMES           [ reduce using rule 5 (statement -> statement OR statement .) ]
  ! DIVIDE          [ reduce using rule 5 (statement -> statement OR statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 5 (statement -> statement OR statement .) ]


state 33

    (4) statement -> statement OR NUMBER .
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 4 (statement -> statement OR NUMBER .)
    POWER           reduce using rule 4 (statement -> statement OR NUMBER .)
    $end            reduce using rule 4 (statement -> statement OR NUMBER .)
    RPAREN          reduce using rule 4 (statement -> statement OR NUMBER .)
    COLON           reduce using rule 4 (statement -> statement OR NUMBER .)
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22

  ! OR              [ reduce using rule 4 (statement -> statement OR NUMBER .) ]
  ! PLUS            [ reduce using rule 4 (statement -> statement OR NUMBER .) ]
  ! MINUS           [ reduce using rule 4 (statement -> statement OR NUMBER .) ]
  ! TIMES           [ reduce using rule 4 (statement -> statement OR NUMBER .) ]
  ! DIVIDE          [ reduce using rule 4 (statement -> statement OR NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 4 (statement -> statement OR NUMBER .) ]


state 34

    (7) statement -> statement POWER statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 7 (statement -> statement POWER statement .)
    RPAREN          reduce using rule 7 (statement -> statement POWER statement .)
    COLON           reduce using rule 7 (statement -> statement POWER statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 7 (statement -> statement POWER statement .) ]
  ! OR              [ reduce using rule 7 (statement -> statement POWER statement .) ]
  ! POWER           [ reduce using rule 7 (statement -> statement POWER statement .) ]
  ! PLUS            [ reduce using rule 7 (statement -> statement POWER statement .) ]
  ! MINUS           [ reduce using rule 7 (statement -> statement POWER statement .) ]
  ! TIMES           [ reduce using rule 7 (statement -> statement POWER statement .) ]
  ! DIVIDE          [ reduce using rule 7 (statement -> statement POWER statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 7 (statement -> statement POWER statement .) ]


state 35

    (16) statement -> statement PLUS statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 16 (statement -> statement PLUS statement .)
    RPAREN          reduce using rule 16 (statement -> statement PLUS statement .)
    COLON           reduce using rule 16 (statement -> statement PLUS statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 16 (statement -> statement PLUS statement .) ]
  ! OR              [ reduce using rule 16 (statement -> statement PLUS statement .) ]
  ! POWER           [ reduce using rule 16 (statement -> statement PLUS statement .) ]
  ! PLUS            [ reduce using rule 16 (statement -> statement PLUS statement .) ]
  ! MINUS           [ reduce using rule 16 (statement -> statement PLUS statement .) ]
  ! TIMES           [ reduce using rule 16 (statement -> statement PLUS statement .) ]
  ! DIVIDE          [ reduce using rule 16 (statement -> statement PLUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 16 (statement -> statement PLUS statement .) ]


state 36

    (14) statement -> statement PLUS NUMBER .
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 14 (statement -> statement PLUS NUMBER .)
    POWER           reduce using rule 14 (statement -> statement PLUS NUMBER .)
    $end            reduce using rule 14 (statement -> statement PLUS NUMBER .)
    RPAREN          reduce using rule 14 (statement -> statement PLUS NUMBER .)
    COLON           reduce using rule 14 (statement -> statement PLUS NUMBER .)
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22

  ! OR              [ reduce using rule 14 (statement -> statement PLUS NUMBER .) ]
  ! PLUS            [ reduce using rule 14 (statement -> statement PLUS NUMBER .) ]
  ! MINUS           [ reduce using rule 14 (statement -> statement PLUS NUMBER .) ]
  ! TIMES           [ reduce using rule 14 (statement -> statement PLUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 14 (statement -> statement PLUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 14 (statement -> statement PLUS NUMBER .) ]


state 37

    (20) statement -> statement MINUS statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 20 (statement -> statement MINUS statement .)
    RPAREN          reduce using rule 20 (statement -> statement MINUS statement .)
    COLON           reduce using rule 20 (statement -> statement MINUS statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 20 (statement -> statement MINUS statement .) ]
  ! OR              [ reduce using rule 20 (statement -> statement MINUS statement .) ]
  ! POWER           [ reduce using rule 20 (statement -> statement MINUS statement .) ]
  ! PLUS            [ reduce using rule 20 (statement -> statement MINUS statement .) ]
  ! MINUS           [ reduce using rule 20 (statement -> statement MINUS statement .) ]
  ! TIMES           [ reduce using rule 20 (statement -> statement MINUS statement .) ]
  ! DIVIDE          [ reduce using rule 20 (statement -> statement MINUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 20 (statement -> statement MINUS statement .) ]


state 38

    (18) statement -> statement MINUS NUMBER .
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 18 (statement -> statement MINUS NUMBER .)
    POWER           reduce using rule 18 (statement -> statement MINUS NUMBER .)
    $end            reduce using rule 18 (statement -> statement MINUS NUMBER .)
    RPAREN          reduce using rule 18 (statement -> statement MINUS NUMBER .)
    COLON           reduce using rule 18 (statement -> statement MINUS NUMBER .)
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22

  ! OR              [ reduce using rule 18 (statement -> statement MINUS NUMBER .) ]
  ! PLUS            [ reduce using rule 18 (statement -> statement MINUS NUMBER .) ]
  ! MINUS           [ reduce using rule 18 (statement -> statement MINUS NUMBER .) ]
  ! TIMES           [ reduce using rule 18 (statement -> statement MINUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 18 (statement -> statement MINUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 18 (statement -> statement MINUS NUMBER .) ]


state 39

    (24) statement -> statement TIMES statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 24 (statement -> statement TIMES statement .)
    RPAREN          reduce using rule 24 (statement -> statement TIMES statement .)
    COLON           reduce using rule 24 (statement -> statement TIMES statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 24 (statement -> statement TIMES statement .) ]
  ! OR              [ reduce using rule 24 (statement -> statement TIMES statement .) ]
  ! POWER           [ reduce using rule 24 (statement -> statement TIMES statement .) ]
  ! PLUS            [ reduce using rule 24 (statement -> statement TIMES statement .) ]
  ! MINUS           [ reduce using rule 24 (statement -> statement TIMES statement .) ]
  ! TIMES           [ reduce using rule 24 (statement -> statement TIMES statement .) ]
  ! DIVIDE          [ reduce using rule 24 (statement -> statement TIMES statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 24 (statement -> statement TIMES statement .) ]


state 40

    (22) statement -> statement TIMES NUMBER .
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 22 (statement -> statement TIMES NUMBER .)
    POWER           reduce using rule 22 (statement -> statement TIMES NUMBER .)
    $end            reduce using rule 22 (statement -> statement TIMES NUMBER .)
    RPAREN          reduce using rule 22 (statement -> statement TIMES NUMBER .)
    COLON           reduce using rule 22 (statement -> statement TIMES NUMBER .)
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22

  ! OR              [ reduce using rule 22 (statement -> statement TIMES NUMBER .) ]
  ! PLUS            [ reduce using rule 22 (statement -> statement TIMES NUMBER .) ]
  ! MINUS           [ reduce using rule 22 (statement -> statement TIMES NUMBER .) ]
  ! TIMES           [ reduce using rule 22 (statement -> statement TIMES NUMBER .) ]
  ! DIVIDE          [ reduce using rule 22 (statement -> statement TIMES NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 22 (statement -> statement TIMES NUMBER .) ]


state 41

    (28) statement -> statement DIVIDE statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 28 (statement -> statement DIVIDE statement .)
    RPAREN          reduce using rule 28 (statement -> statement DIVIDE statement .)
    COLON           reduce using rule 28 (statement -> statement DIVIDE statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 28 (statement -> statement DIVIDE statement .) ]
  ! OR              [ reduce using rule 28 (statement -> statement DIVIDE statement .) ]
  ! POWER           [ reduce using rule 28 (statement -> statement DIVIDE statement .) ]
  ! PLUS            [ reduce using rule 28 (statement -> statement DIVIDE statement .) ]
  ! MINUS           [ reduce using rule 28 (statement -> statement DIVIDE statement .) ]
  ! TIMES           [ reduce using rule 28 (statement -> statement DIVIDE statement .) ]
  ! DIVIDE          [ reduce using rule 28 (statement -> statement DIVIDE statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 28 (statement -> statement DIVIDE statement .) ]


state 42

    (26) statement -> statement DIVIDE NUMBER .
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 26 (statement -> statement DIVIDE NUMBER .)
    POWER           reduce using rule 26 (statement -> statement DIVIDE NUMBER .)
    $end            reduce using rule 26 (statement -> statement DIVIDE NUMBER .)
    RPAREN          reduce using rule 26 (statement -> statement DIVIDE NUMBER .)
    COLON           reduce using rule 26 (statement -> statement DIVIDE NUMBER .)
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22

  ! OR              [ reduce using rule 26 (statement -> statement DIVIDE NUMBER .) ]
  ! PLUS            [ reduce using rule 26 (statement -> statement DIVIDE NUMBER .) ]
  ! MINUS           [ reduce using rule 26 (statement -> statement DIVIDE NUMBER .) ]
  ! TIMES           [ reduce using rule 26 (statement -> statement DIVIDE NUMBER .) ]
  ! DIVIDE          [ reduce using rule 26 (statement -> statement DIVIDE NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 26 (statement -> statement DIVIDE NUMBER .) ]


state 43

    (30) statement -> statement DOUBLE_EQUALS statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 30 (statement -> statement DOUBLE_EQUALS statement .)
    RPAREN          reduce using rule 30 (statement -> statement DOUBLE_EQUALS statement .)
    COLON           reduce using rule 30 (statement -> statement DOUBLE_EQUALS statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 30 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! OR              [ reduce using rule 30 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! POWER           [ reduce using rule 30 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! PLUS            [ reduce using rule 30 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! MINUS           [ reduce using rule 30 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! TIMES           [ reduce using rule 30 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! DIVIDE          [ reduce using rule 30 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 30 (statement -> statement DOUBLE_EQUALS statement .) ]


state 44

    (33) statement -> statement DOUBLE_EQUALS NUMBER .
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 33 (statement -> statement DOUBLE_EQUALS NUMBER .)
    POWER           reduce using rule 33 (statement -> statement DOUBLE_EQUALS NUMBER .)
    $end            reduce using rule 33 (statement -> statement DOUBLE_EQUALS NUMBER .)
    RPAREN          reduce using rule 33 (statement -> statement DOUBLE_EQUALS NUMBER .)
    COLON           reduce using rule 33 (statement -> statement DOUBLE_EQUALS NUMBER .)
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22

  ! OR              [ reduce using rule 33 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! PLUS            [ reduce using rule 33 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! MINUS           [ reduce using rule 33 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! TIMES           [ reduce using rule 33 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 33 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 33 (statement -> statement DOUBLE_EQUALS NUMBER .) ]


state 45

    (35) statement -> statement DOUBLE_EQUALS STRING .
    (32) statement -> STRING . DOUBLE_EQUALS STRING
    (36) statement -> STRING . DOUBLE_EQUALS statement
    (37) statement -> STRING . DOUBLE_EQUALS NUMBER

  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 35 (statement -> statement DOUBLE_EQUALS STRING .)
    OR              reduce using rule 35 (statement -> statement DOUBLE_EQUALS STRING .)
    POWER           reduce using rule 35 (statement -> statement DOUBLE_EQUALS STRING .)
    PLUS            reduce using rule 35 (statement -> statement DOUBLE_EQUALS STRING .)
    MINUS           reduce using rule 35 (statement -> statement DOUBLE_EQUALS STRING .)
    TIMES           reduce using rule 35 (statement -> statement DOUBLE_EQUALS STRING .)
    DIVIDE          reduce using rule 35 (statement -> statement DOUBLE_EQUALS STRING .)
    $end            reduce using rule 35 (statement -> statement DOUBLE_EQUALS STRING .)
    RPAREN          reduce using rule 35 (statement -> statement DOUBLE_EQUALS STRING .)
    COLON           reduce using rule 35 (statement -> statement DOUBLE_EQUALS STRING .)
    DOUBLE_EQUALS   shift and go to state 29

  ! DOUBLE_EQUALS   [ reduce using rule 35 (statement -> statement DOUBLE_EQUALS STRING .) ]


state 46

    (2) statement -> NUMBER OR NUMBER .
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 2 (statement -> NUMBER OR NUMBER .)
    POWER           reduce using rule 2 (statement -> NUMBER OR NUMBER .)
    $end            reduce using rule 2 (statement -> NUMBER OR NUMBER .)
    RPAREN          reduce using rule 2 (statement -> NUMBER OR NUMBER .)
    COLON           reduce using rule 2 (statement -> NUMBER OR NUMBER .)
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22

  ! OR              [ reduce using rule 2 (statement -> NUMBER OR NUMBER .) ]
  ! PLUS            [ reduce using rule 2 (statement -> NUMBER OR NUMBER .) ]
  ! MINUS           [ reduce using rule 2 (statement -> NUMBER OR NUMBER .) ]
  ! TIMES           [ reduce using rule 2 (statement -> NUMBER OR NUMBER .) ]
  ! DIVIDE          [ reduce using rule 2 (statement -> NUMBER OR NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 2 (statement -> NUMBER OR NUMBER .) ]


state 47

    (3) statement -> NUMBER OR statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 3 (statement -> NUMBER OR statement .)
    RPAREN          reduce using rule 3 (statement -> NUMBER OR statement .)
    COLON           reduce using rule 3 (statement -> NUMBER OR statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 3 (statement -> NUMBER OR statement .) ]
  ! OR              [ reduce using rule 3 (statement -> NUMBER OR statement .) ]
  ! POWER           [ reduce using rule 3 (statement -> NUMBER OR statement .) ]
  ! PLUS            [ reduce using rule 3 (statement -> NUMBER OR statement .) ]
  ! MINUS           [ reduce using rule 3 (statement -> NUMBER OR statement .) ]
  ! TIMES           [ reduce using rule 3 (statement -> NUMBER OR statement .) ]
  ! DIVIDE          [ reduce using rule 3 (statement -> NUMBER OR statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 3 (statement -> NUMBER OR statement .) ]


state 48

    (13) statement -> NUMBER PLUS NUMBER .
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 13 (statement -> NUMBER PLUS NUMBER .)
    POWER           reduce using rule 13 (statement -> NUMBER PLUS NUMBER .)
    $end            reduce using rule 13 (statement -> NUMBER PLUS NUMBER .)
    RPAREN          reduce using rule 13 (statement -> NUMBER PLUS NUMBER .)
    COLON           reduce using rule 13 (statement -> NUMBER PLUS NUMBER .)
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22

  ! OR              [ reduce using rule 13 (statement -> NUMBER PLUS NUMBER .) ]
  ! PLUS            [ reduce using rule 13 (statement -> NUMBER PLUS NUMBER .) ]
  ! MINUS           [ reduce using rule 13 (statement -> NUMBER PLUS NUMBER .) ]
  ! TIMES           [ reduce using rule 13 (statement -> NUMBER PLUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 13 (statement -> NUMBER PLUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 13 (statement -> NUMBER PLUS NUMBER .) ]


state 49

    (15) statement -> NUMBER PLUS statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 15 (statement -> NUMBER PLUS statement .)
    RPAREN          reduce using rule 15 (statement -> NUMBER PLUS statement .)
    COLON           reduce using rule 15 (statement -> NUMBER PLUS statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 15 (statement -> NUMBER PLUS statement .) ]
  ! OR              [ reduce using rule 15 (statement -> NUMBER PLUS statement .) ]
  ! POWER           [ reduce using rule 15 (statement -> NUMBER PLUS statement .) ]
  ! PLUS            [ reduce using rule 15 (statement -> NUMBER PLUS statement .) ]
  ! MINUS           [ reduce using rule 15 (statement -> NUMBER PLUS statement .) ]
  ! TIMES           [ reduce using rule 15 (statement -> NUMBER PLUS statement .) ]
  ! DIVIDE          [ reduce using rule 15 (statement -> NUMBER PLUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 15 (statement -> NUMBER PLUS statement .) ]


state 50

    (17) statement -> NUMBER MINUS NUMBER .
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 17 (statement -> NUMBER MINUS NUMBER .)
    POWER           reduce using rule 17 (statement -> NUMBER MINUS NUMBER .)
    $end            reduce using rule 17 (statement -> NUMBER MINUS NUMBER .)
    RPAREN          reduce using rule 17 (statement -> NUMBER MINUS NUMBER .)
    COLON           reduce using rule 17 (statement -> NUMBER MINUS NUMBER .)
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22

  ! OR              [ reduce using rule 17 (statement -> NUMBER MINUS NUMBER .) ]
  ! PLUS            [ reduce using rule 17 (statement -> NUMBER MINUS NUMBER .) ]
  ! MINUS           [ reduce using rule 17 (statement -> NUMBER MINUS NUMBER .) ]
  ! TIMES           [ reduce using rule 17 (statement -> NUMBER MINUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 17 (statement -> NUMBER MINUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 17 (statement -> NUMBER MINUS NUMBER .) ]


state 51

    (19) statement -> NUMBER MINUS statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 19 (statement -> NUMBER MINUS statement .)
    RPAREN          reduce using rule 19 (statement -> NUMBER MINUS statement .)
    COLON           reduce using rule 19 (statement -> NUMBER MINUS statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 19 (statement -> NUMBER MINUS statement .) ]
  ! OR              [ reduce using rule 19 (statement -> NUMBER MINUS statement .) ]
  ! POWER           [ reduce using rule 19 (statement -> NUMBER MINUS statement .) ]
  ! PLUS            [ reduce using rule 19 (statement -> NUMBER MINUS statement .) ]
  ! MINUS           [ reduce using rule 19 (statement -> NUMBER MINUS statement .) ]
  ! TIMES           [ reduce using rule 19 (statement -> NUMBER MINUS statement .) ]
  ! DIVIDE          [ reduce using rule 19 (statement -> NUMBER MINUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 19 (statement -> NUMBER MINUS statement .) ]


state 52

    (21) statement -> NUMBER TIMES NUMBER .
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 21 (statement -> NUMBER TIMES NUMBER .)
    POWER           reduce using rule 21 (statement -> NUMBER TIMES NUMBER .)
    $end            reduce using rule 21 (statement -> NUMBER TIMES NUMBER .)
    RPAREN          reduce using rule 21 (statement -> NUMBER TIMES NUMBER .)
    COLON           reduce using rule 21 (statement -> NUMBER TIMES NUMBER .)
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22

  ! OR              [ reduce using rule 21 (statement -> NUMBER TIMES NUMBER .) ]
  ! PLUS            [ reduce using rule 21 (statement -> NUMBER TIMES NUMBER .) ]
  ! MINUS           [ reduce using rule 21 (statement -> NUMBER TIMES NUMBER .) ]
  ! TIMES           [ reduce using rule 21 (statement -> NUMBER TIMES NUMBER .) ]
  ! DIVIDE          [ reduce using rule 21 (statement -> NUMBER TIMES NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 21 (statement -> NUMBER TIMES NUMBER .) ]


state 53

    (23) statement -> NUMBER TIMES statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 23 (statement -> NUMBER TIMES statement .)
    RPAREN          reduce using rule 23 (statement -> NUMBER TIMES statement .)
    COLON           reduce using rule 23 (statement -> NUMBER TIMES statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 23 (statement -> NUMBER TIMES statement .) ]
  ! OR              [ reduce using rule 23 (statement -> NUMBER TIMES statement .) ]
  ! POWER           [ reduce using rule 23 (statement -> NUMBER TIMES statement .) ]
  ! PLUS            [ reduce using rule 23 (statement -> NUMBER TIMES statement .) ]
  ! MINUS           [ reduce using rule 23 (statement -> NUMBER TIMES statement .) ]
  ! TIMES           [ reduce using rule 23 (statement -> NUMBER TIMES statement .) ]
  ! DIVIDE          [ reduce using rule 23 (statement -> NUMBER TIMES statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 23 (statement -> NUMBER TIMES statement .) ]


state 54

    (25) statement -> NUMBER DIVIDE NUMBER .
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 25 (statement -> NUMBER DIVIDE NUMBER .)
    POWER           reduce using rule 25 (statement -> NUMBER DIVIDE NUMBER .)
    $end            reduce using rule 25 (statement -> NUMBER DIVIDE NUMBER .)
    RPAREN          reduce using rule 25 (statement -> NUMBER DIVIDE NUMBER .)
    COLON           reduce using rule 25 (statement -> NUMBER DIVIDE NUMBER .)
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22

  ! OR              [ reduce using rule 25 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! PLUS            [ reduce using rule 25 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! MINUS           [ reduce using rule 25 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! TIMES           [ reduce using rule 25 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! DIVIDE          [ reduce using rule 25 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 25 (statement -> NUMBER DIVIDE NUMBER .) ]


state 55

    (27) statement -> NUMBER DIVIDE statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 27 (statement -> NUMBER DIVIDE statement .)
    RPAREN          reduce using rule 27 (statement -> NUMBER DIVIDE statement .)
    COLON           reduce using rule 27 (statement -> NUMBER DIVIDE statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 27 (statement -> NUMBER DIVIDE statement .) ]
  ! OR              [ reduce using rule 27 (statement -> NUMBER DIVIDE statement .) ]
  ! POWER           [ reduce using rule 27 (statement -> NUMBER DIVIDE statement .) ]
  ! PLUS            [ reduce using rule 27 (statement -> NUMBER DIVIDE statement .) ]
  ! MINUS           [ reduce using rule 27 (statement -> NUMBER DIVIDE statement .) ]
  ! TIMES           [ reduce using rule 27 (statement -> NUMBER DIVIDE statement .) ]
  ! DIVIDE          [ reduce using rule 27 (statement -> NUMBER DIVIDE statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 27 (statement -> NUMBER DIVIDE statement .) ]


state 56

    (31) statement -> NUMBER DOUBLE_EQUALS NUMBER .
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 31 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    POWER           reduce using rule 31 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    $end            reduce using rule 31 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    RPAREN          reduce using rule 31 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    COLON           reduce using rule 31 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22

  ! OR              [ reduce using rule 31 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! PLUS            [ reduce using rule 31 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! MINUS           [ reduce using rule 31 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! TIMES           [ reduce using rule 31 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 31 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 31 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]


state 57

    (34) statement -> NUMBER DOUBLE_EQUALS statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 34 (statement -> NUMBER DOUBLE_EQUALS statement .)
    RPAREN          reduce using rule 34 (statement -> NUMBER DOUBLE_EQUALS statement .)
    COLON           reduce using rule 34 (statement -> NUMBER DOUBLE_EQUALS statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 34 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! OR              [ reduce using rule 34 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! POWER           [ reduce using rule 34 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! PLUS            [ reduce using rule 34 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! MINUS           [ reduce using rule 34 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! TIMES           [ reduce using rule 34 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! DIVIDE          [ reduce using rule 34 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 34 (statement -> NUMBER DOUBLE_EQUALS statement .) ]


state 58

    (38) statement -> NUMBER DOUBLE_EQUALS STRING .
    (32) statement -> STRING . DOUBLE_EQUALS STRING
    (36) statement -> STRING . DOUBLE_EQUALS statement
    (37) statement -> STRING . DOUBLE_EQUALS NUMBER

  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 38 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    OR              reduce using rule 38 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    POWER           reduce using rule 38 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    PLUS            reduce using rule 38 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    MINUS           reduce using rule 38 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    TIMES           reduce using rule 38 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    DIVIDE          reduce using rule 38 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    $end            reduce using rule 38 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    RPAREN          reduce using rule 38 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    COLON           reduce using rule 38 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    DOUBLE_EQUALS   shift and go to state 29

  ! DOUBLE_EQUALS   [ reduce using rule 38 (statement -> NUMBER DOUBLE_EQUALS STRING .) ]


state 59

    (40) statement -> VARIABLE EQUALS ARRAY . LPAREN LIST RPAREN

    LPAREN          shift and go to state 72


state 60

    (41) statement -> VARIABLE EQUALS NP_ADD . LPAREN VARIABLE COMMA VARIABLE RPAREN

    LPAREN          shift and go to state 73


state 61

    (42) statement -> VARIABLE EQUALS NP_SUBTRACT . LPAREN VARIABLE COMMA VARIABLE RPAREN

    LPAREN          shift and go to state 74


state 62

    (43) statement -> VARIABLE EQUALS NP_SUM . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 75


state 63

    (44) statement -> VARIABLE EQUALS NP_DOT_PRODUCT . LPAREN VARIABLE COMMA VARIABLE RPAREN

    LPAREN          shift and go to state 76


state 64

    (10) statement -> PRINT LPAREN STRING . RPAREN
    (32) statement -> STRING . DOUBLE_EQUALS STRING
    (36) statement -> STRING . DOUBLE_EQUALS statement
    (37) statement -> STRING . DOUBLE_EQUALS NUMBER

    RPAREN          shift and go to state 77
    DOUBLE_EQUALS   shift and go to state 29


state 65

    (11) statement -> PRINT LPAREN NUMBER . RPAREN
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

    RPAREN          shift and go to state 78
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22


state 66

    (12) statement -> PRINT LPAREN statement . RPAREN
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

    RPAREN          shift and go to state 79
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16


state 67

    (29) statement -> LPAREN statement RPAREN .

    AND             reduce using rule 29 (statement -> LPAREN statement RPAREN .)
    OR              reduce using rule 29 (statement -> LPAREN statement RPAREN .)
    POWER           reduce using rule 29 (statement -> LPAREN statement RPAREN .)
    PLUS            reduce using rule 29 (statement -> LPAREN statement RPAREN .)
    MINUS           reduce using rule 29 (statement -> LPAREN statement RPAREN .)
    TIMES           reduce using rule 29 (statement -> LPAREN statement RPAREN .)
    DIVIDE          reduce using rule 29 (statement -> LPAREN statement RPAREN .)
    DOUBLE_EQUALS   reduce using rule 29 (statement -> LPAREN statement RPAREN .)
    $end            reduce using rule 29 (statement -> LPAREN statement RPAREN .)
    RPAREN          reduce using rule 29 (statement -> LPAREN statement RPAREN .)
    COLON           reduce using rule 29 (statement -> LPAREN statement RPAREN .)


state 68

    (32) statement -> STRING DOUBLE_EQUALS STRING .
    (32) statement -> STRING . DOUBLE_EQUALS STRING
    (36) statement -> STRING . DOUBLE_EQUALS statement
    (37) statement -> STRING . DOUBLE_EQUALS NUMBER

  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 32 (statement -> STRING DOUBLE_EQUALS STRING .)
    OR              reduce using rule 32 (statement -> STRING DOUBLE_EQUALS STRING .)
    POWER           reduce using rule 32 (statement -> STRING DOUBLE_EQUALS STRING .)
    PLUS            reduce using rule 32 (statement -> STRING DOUBLE_EQUALS STRING .)
    MINUS           reduce using rule 32 (statement -> STRING DOUBLE_EQUALS STRING .)
    TIMES           reduce using rule 32 (statement -> STRING DOUBLE_EQUALS STRING .)
    DIVIDE          reduce using rule 32 (statement -> STRING DOUBLE_EQUALS STRING .)
    $end            reduce using rule 32 (statement -> STRING DOUBLE_EQUALS STRING .)
    RPAREN          reduce using rule 32 (statement -> STRING DOUBLE_EQUALS STRING .)
    COLON           reduce using rule 32 (statement -> STRING DOUBLE_EQUALS STRING .)
    DOUBLE_EQUALS   shift and go to state 29

  ! DOUBLE_EQUALS   [ reduce using rule 32 (statement -> STRING DOUBLE_EQUALS STRING .) ]


state 69

    (36) statement -> STRING DOUBLE_EQUALS statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 36 (statement -> STRING DOUBLE_EQUALS statement .)
    RPAREN          reduce using rule 36 (statement -> STRING DOUBLE_EQUALS statement .)
    COLON           reduce using rule 36 (statement -> STRING DOUBLE_EQUALS statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 36 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! OR              [ reduce using rule 36 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! POWER           [ reduce using rule 36 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! PLUS            [ reduce using rule 36 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! MINUS           [ reduce using rule 36 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! TIMES           [ reduce using rule 36 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! DIVIDE          [ reduce using rule 36 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 36 (statement -> STRING DOUBLE_EQUALS statement .) ]


state 70

    (37) statement -> STRING DOUBLE_EQUALS NUMBER .
    (2) statement -> NUMBER . OR NUMBER
    (3) statement -> NUMBER . OR statement
    (13) statement -> NUMBER . PLUS NUMBER
    (15) statement -> NUMBER . PLUS statement
    (17) statement -> NUMBER . MINUS NUMBER
    (19) statement -> NUMBER . MINUS statement
    (21) statement -> NUMBER . TIMES NUMBER
    (23) statement -> NUMBER . TIMES statement
    (25) statement -> NUMBER . DIVIDE NUMBER
    (27) statement -> NUMBER . DIVIDE statement
    (31) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (34) statement -> NUMBER . DOUBLE_EQUALS statement
    (38) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 37 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    POWER           reduce using rule 37 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    $end            reduce using rule 37 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    RPAREN          reduce using rule 37 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    COLON           reduce using rule 37 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    OR              shift and go to state 17
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21
    DOUBLE_EQUALS   shift and go to state 22

  ! OR              [ reduce using rule 37 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! PLUS            [ reduce using rule 37 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! MINUS           [ reduce using rule 37 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! TIMES           [ reduce using rule 37 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 37 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 37 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]


state 71

    (39) statement -> IF statement COLON . statement
    (1) statement -> . statement AND statement
    (2) statement -> . NUMBER OR NUMBER
    (3) statement -> . NUMBER OR statement
    (4) statement -> . statement OR NUMBER
    (5) statement -> . statement OR statement
    (6) statement -> . NOT statement
    (7) statement -> . statement POWER statement
    (8) statement -> . VARIABLE INCREMENT
    (9) statement -> . VARIABLE DECREMENT
    (10) statement -> . PRINT LPAREN STRING RPAREN
    (11) statement -> . PRINT LPAREN NUMBER RPAREN
    (12) statement -> . PRINT LPAREN statement RPAREN
    (13) statement -> . NUMBER PLUS NUMBER
    (14) statement -> . statement PLUS NUMBER
    (15) statement -> . NUMBER PLUS statement
    (16) statement -> . statement PLUS statement
    (17) statement -> . NUMBER MINUS NUMBER
    (18) statement -> . statement MINUS NUMBER
    (19) statement -> . NUMBER MINUS statement
    (20) statement -> . statement MINUS statement
    (21) statement -> . NUMBER TIMES NUMBER
    (22) statement -> . statement TIMES NUMBER
    (23) statement -> . NUMBER TIMES statement
    (24) statement -> . statement TIMES statement
    (25) statement -> . NUMBER DIVIDE NUMBER
    (26) statement -> . statement DIVIDE NUMBER
    (27) statement -> . NUMBER DIVIDE statement
    (28) statement -> . statement DIVIDE statement
    (29) statement -> . LPAREN statement RPAREN
    (30) statement -> . statement DOUBLE_EQUALS statement
    (31) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (32) statement -> . STRING DOUBLE_EQUALS STRING
    (33) statement -> . statement DOUBLE_EQUALS NUMBER
    (34) statement -> . NUMBER DOUBLE_EQUALS statement
    (35) statement -> . statement DOUBLE_EQUALS STRING
    (36) statement -> . STRING DOUBLE_EQUALS statement
    (37) statement -> . STRING DOUBLE_EQUALS NUMBER
    (38) statement -> . NUMBER DOUBLE_EQUALS STRING
    (39) statement -> . IF statement COLON statement
    (40) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (41) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (42) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (43) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (44) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (45) statement -> .

    NUMBER          shift and go to state 2
    NOT             shift and go to state 3
    VARIABLE        shift and go to state 4
    PRINT           shift and go to state 5
    LPAREN          shift and go to state 6
    STRING          shift and go to state 7
    IF              shift and go to state 8
    AND             reduce using rule 45 (statement -> .)
    OR              reduce using rule 45 (statement -> .)
    POWER           reduce using rule 45 (statement -> .)
    PLUS            reduce using rule 45 (statement -> .)
    MINUS           reduce using rule 45 (statement -> .)
    TIMES           reduce using rule 45 (statement -> .)
    DIVIDE          reduce using rule 45 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 45 (statement -> .)
    $end            reduce using rule 45 (statement -> .)
    RPAREN          reduce using rule 45 (statement -> .)
    COLON           reduce using rule 45 (statement -> .)

    statement                      shift and go to state 80

state 72

    (40) statement -> VARIABLE EQUALS ARRAY LPAREN . LIST RPAREN

    LIST            shift and go to state 81


state 73

    (41) statement -> VARIABLE EQUALS NP_ADD LPAREN . VARIABLE COMMA VARIABLE RPAREN

    VARIABLE        shift and go to state 82


state 74

    (42) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN . VARIABLE COMMA VARIABLE RPAREN

    VARIABLE        shift and go to state 83


state 75

    (43) statement -> VARIABLE EQUALS NP_SUM LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 84


state 76

    (44) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN . VARIABLE COMMA VARIABLE RPAREN

    VARIABLE        shift and go to state 85


state 77

    (10) statement -> PRINT LPAREN STRING RPAREN .

    AND             reduce using rule 10 (statement -> PRINT LPAREN STRING RPAREN .)
    OR              reduce using rule 10 (statement -> PRINT LPAREN STRING RPAREN .)
    POWER           reduce using rule 10 (statement -> PRINT LPAREN STRING RPAREN .)
    PLUS            reduce using rule 10 (statement -> PRINT LPAREN STRING RPAREN .)
    MINUS           reduce using rule 10 (statement -> PRINT LPAREN STRING RPAREN .)
    TIMES           reduce using rule 10 (statement -> PRINT LPAREN STRING RPAREN .)
    DIVIDE          reduce using rule 10 (statement -> PRINT LPAREN STRING RPAREN .)
    DOUBLE_EQUALS   reduce using rule 10 (statement -> PRINT LPAREN STRING RPAREN .)
    $end            reduce using rule 10 (statement -> PRINT LPAREN STRING RPAREN .)
    RPAREN          reduce using rule 10 (statement -> PRINT LPAREN STRING RPAREN .)
    COLON           reduce using rule 10 (statement -> PRINT LPAREN STRING RPAREN .)


state 78

    (11) statement -> PRINT LPAREN NUMBER RPAREN .

    AND             reduce using rule 11 (statement -> PRINT LPAREN NUMBER RPAREN .)
    OR              reduce using rule 11 (statement -> PRINT LPAREN NUMBER RPAREN .)
    POWER           reduce using rule 11 (statement -> PRINT LPAREN NUMBER RPAREN .)
    PLUS            reduce using rule 11 (statement -> PRINT LPAREN NUMBER RPAREN .)
    MINUS           reduce using rule 11 (statement -> PRINT LPAREN NUMBER RPAREN .)
    TIMES           reduce using rule 11 (statement -> PRINT LPAREN NUMBER RPAREN .)
    DIVIDE          reduce using rule 11 (statement -> PRINT LPAREN NUMBER RPAREN .)
    DOUBLE_EQUALS   reduce using rule 11 (statement -> PRINT LPAREN NUMBER RPAREN .)
    $end            reduce using rule 11 (statement -> PRINT LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 11 (statement -> PRINT LPAREN NUMBER RPAREN .)
    COLON           reduce using rule 11 (statement -> PRINT LPAREN NUMBER RPAREN .)


state 79

    (12) statement -> PRINT LPAREN statement RPAREN .

    AND             reduce using rule 12 (statement -> PRINT LPAREN statement RPAREN .)
    OR              reduce using rule 12 (statement -> PRINT LPAREN statement RPAREN .)
    POWER           reduce using rule 12 (statement -> PRINT LPAREN statement RPAREN .)
    PLUS            reduce using rule 12 (statement -> PRINT LPAREN statement RPAREN .)
    MINUS           reduce using rule 12 (statement -> PRINT LPAREN statement RPAREN .)
    TIMES           reduce using rule 12 (statement -> PRINT LPAREN statement RPAREN .)
    DIVIDE          reduce using rule 12 (statement -> PRINT LPAREN statement RPAREN .)
    DOUBLE_EQUALS   reduce using rule 12 (statement -> PRINT LPAREN statement RPAREN .)
    $end            reduce using rule 12 (statement -> PRINT LPAREN statement RPAREN .)
    RPAREN          reduce using rule 12 (statement -> PRINT LPAREN statement RPAREN .)
    COLON           reduce using rule 12 (statement -> PRINT LPAREN statement RPAREN .)


state 80

    (39) statement -> IF statement COLON statement .
    (1) statement -> statement . AND statement
    (4) statement -> statement . OR NUMBER
    (5) statement -> statement . OR statement
    (7) statement -> statement . POWER statement
    (14) statement -> statement . PLUS NUMBER
    (16) statement -> statement . PLUS statement
    (18) statement -> statement . MINUS NUMBER
    (20) statement -> statement . MINUS statement
    (22) statement -> statement . TIMES NUMBER
    (24) statement -> statement . TIMES statement
    (26) statement -> statement . DIVIDE NUMBER
    (28) statement -> statement . DIVIDE statement
    (30) statement -> statement . DOUBLE_EQUALS statement
    (33) statement -> statement . DOUBLE_EQUALS NUMBER
    (35) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 39 (statement -> IF statement COLON statement .)
    RPAREN          reduce using rule 39 (statement -> IF statement COLON statement .)
    COLON           reduce using rule 39 (statement -> IF statement COLON statement .)
    AND             shift and go to state 9
    OR              shift and go to state 10
    POWER           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    DOUBLE_EQUALS   shift and go to state 16

  ! AND             [ reduce using rule 39 (statement -> IF statement COLON statement .) ]
  ! OR              [ reduce using rule 39 (statement -> IF statement COLON statement .) ]
  ! POWER           [ reduce using rule 39 (statement -> IF statement COLON statement .) ]
  ! PLUS            [ reduce using rule 39 (statement -> IF statement COLON statement .) ]
  ! MINUS           [ reduce using rule 39 (statement -> IF statement COLON statement .) ]
  ! TIMES           [ reduce using rule 39 (statement -> IF statement COLON statement .) ]
  ! DIVIDE          [ reduce using rule 39 (statement -> IF statement COLON statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 39 (statement -> IF statement COLON statement .) ]


state 81

    (40) statement -> VARIABLE EQUALS ARRAY LPAREN LIST . RPAREN

    RPAREN          shift and go to state 86


state 82

    (41) statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE . COMMA VARIABLE RPAREN

    COMMA           shift and go to state 87


state 83

    (42) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE . COMMA VARIABLE RPAREN

    COMMA           shift and go to state 88


state 84

    (43) statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 89


state 85

    (44) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE . COMMA VARIABLE RPAREN

    COMMA           shift and go to state 90


state 86

    (40) statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .

    AND             reduce using rule 40 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    OR              reduce using rule 40 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    POWER           reduce using rule 40 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    PLUS            reduce using rule 40 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    MINUS           reduce using rule 40 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    TIMES           reduce using rule 40 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    DIVIDE          reduce using rule 40 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    DOUBLE_EQUALS   reduce using rule 40 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    $end            reduce using rule 40 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    RPAREN          reduce using rule 40 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    COLON           reduce using rule 40 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)


state 87

    (41) statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA . VARIABLE RPAREN

    VARIABLE        shift and go to state 91


state 88

    (42) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA . VARIABLE RPAREN

    VARIABLE        shift and go to state 92


state 89

    (43) statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .

    AND             reduce using rule 43 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 43 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    POWER           reduce using rule 43 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    PLUS            reduce using rule 43 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 43 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    TIMES           reduce using rule 43 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 43 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 43 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 43 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 43 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    COLON           reduce using rule 43 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)


state 90

    (44) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA . VARIABLE RPAREN

    VARIABLE        shift and go to state 93


state 91

    (41) statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE . RPAREN

    RPAREN          shift and go to state 94


state 92

    (42) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE . RPAREN

    RPAREN          shift and go to state 95


state 93

    (44) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE . RPAREN

    RPAREN          shift and go to state 96


state 94

    (41) statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .

    AND             reduce using rule 41 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    OR              reduce using rule 41 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    POWER           reduce using rule 41 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    PLUS            reduce using rule 41 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    MINUS           reduce using rule 41 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    TIMES           reduce using rule 41 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DIVIDE          reduce using rule 41 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 41 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    $end            reduce using rule 41 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 41 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    COLON           reduce using rule 41 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)


state 95

    (42) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .

    AND             reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    OR              reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    POWER           reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    PLUS            reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    MINUS           reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    TIMES           reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DIVIDE          reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    $end            reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    COLON           reduce using rule 42 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)


state 96

    (44) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .

    AND             reduce using rule 44 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    OR              reduce using rule 44 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    POWER           reduce using rule 44 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    PLUS            reduce using rule 44 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    MINUS           reduce using rule 44 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    TIMES           reduce using rule 44 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DIVIDE          reduce using rule 44 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 44 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    $end            reduce using rule 44 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 44 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    COLON           reduce using rule 44 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 23 resolved as shift
WARNING: shift/reduce conflict for OR in state 23 resolved as shift
WARNING: shift/reduce conflict for POWER in state 23 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 23 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 23 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 23 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 23 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 23 resolved as shift
WARNING: shift/reduce conflict for AND in state 31 resolved as shift
WARNING: shift/reduce conflict for OR in state 31 resolved as shift
WARNING: shift/reduce conflict for POWER in state 31 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 31 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 31 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 31 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 31 resolved as shift
WARNING: shift/reduce conflict for AND in state 32 resolved as shift
WARNING: shift/reduce conflict for OR in state 32 resolved as shift
WARNING: shift/reduce conflict for POWER in state 32 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 32 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 32 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 32 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 32 resolved as shift
WARNING: shift/reduce conflict for OR in state 33 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 33 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 33 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 33 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 33 resolved as shift
WARNING: shift/reduce conflict for AND in state 34 resolved as shift
WARNING: shift/reduce conflict for OR in state 34 resolved as shift
WARNING: shift/reduce conflict for POWER in state 34 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 34 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 34 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 34 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 34 resolved as shift
WARNING: shift/reduce conflict for AND in state 35 resolved as shift
WARNING: shift/reduce conflict for OR in state 35 resolved as shift
WARNING: shift/reduce conflict for POWER in state 35 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 35 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 35 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 35 resolved as shift
WARNING: shift/reduce conflict for OR in state 36 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 36 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 36 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 36 resolved as shift
WARNING: shift/reduce conflict for AND in state 37 resolved as shift
WARNING: shift/reduce conflict for OR in state 37 resolved as shift
WARNING: shift/reduce conflict for POWER in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 37 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 37 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 37 resolved as shift
WARNING: shift/reduce conflict for OR in state 38 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 38 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 38 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 38 resolved as shift
WARNING: shift/reduce conflict for AND in state 39 resolved as shift
WARNING: shift/reduce conflict for OR in state 39 resolved as shift
WARNING: shift/reduce conflict for POWER in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 39 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 39 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 39 resolved as shift
WARNING: shift/reduce conflict for OR in state 40 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 40 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 40 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 40 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 40 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 40 resolved as shift
WARNING: shift/reduce conflict for AND in state 41 resolved as shift
WARNING: shift/reduce conflict for OR in state 41 resolved as shift
WARNING: shift/reduce conflict for POWER in state 41 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 41 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 41 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 41 resolved as shift
WARNING: shift/reduce conflict for OR in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 42 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 42 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 42 resolved as shift
WARNING: shift/reduce conflict for AND in state 43 resolved as shift
WARNING: shift/reduce conflict for OR in state 43 resolved as shift
WARNING: shift/reduce conflict for POWER in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 43 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 43 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 43 resolved as shift
WARNING: shift/reduce conflict for OR in state 44 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 44 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 44 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 45 resolved as shift
WARNING: shift/reduce conflict for OR in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 46 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 46 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 46 resolved as shift
WARNING: shift/reduce conflict for AND in state 47 resolved as shift
WARNING: shift/reduce conflict for OR in state 47 resolved as shift
WARNING: shift/reduce conflict for POWER in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 47 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 47 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 47 resolved as shift
WARNING: shift/reduce conflict for OR in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 48 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 48 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 48 resolved as shift
WARNING: shift/reduce conflict for AND in state 49 resolved as shift
WARNING: shift/reduce conflict for OR in state 49 resolved as shift
WARNING: shift/reduce conflict for POWER in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 49 resolved as shift
WARNING: shift/reduce conflict for OR in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 50 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 50 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 50 resolved as shift
WARNING: shift/reduce conflict for AND in state 51 resolved as shift
WARNING: shift/reduce conflict for OR in state 51 resolved as shift
WARNING: shift/reduce conflict for POWER in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 51 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 51 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 51 resolved as shift
WARNING: shift/reduce conflict for OR in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 52 resolved as shift
WARNING: shift/reduce conflict for AND in state 53 resolved as shift
WARNING: shift/reduce conflict for OR in state 53 resolved as shift
WARNING: shift/reduce conflict for POWER in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 53 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 53 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 53 resolved as shift
WARNING: shift/reduce conflict for OR in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 54 resolved as shift
WARNING: shift/reduce conflict for AND in state 55 resolved as shift
WARNING: shift/reduce conflict for OR in state 55 resolved as shift
WARNING: shift/reduce conflict for POWER in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 55 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 55 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 55 resolved as shift
WARNING: shift/reduce conflict for OR in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 56 resolved as shift
WARNING: shift/reduce conflict for AND in state 57 resolved as shift
WARNING: shift/reduce conflict for OR in state 57 resolved as shift
WARNING: shift/reduce conflict for POWER in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 58 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for POWER in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: shift/reduce conflict for POWER in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 80 resolved as shift
