Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    COMMENT
    DEF
    ELIF
    ELSE
    FALSE
    FOR
    IN
    NONE
    NP_ABS
    NP_COS
    NP_EXP
    NP_LOG
    NP_LOG10
    NP_POWER
    NP_SIGN
    NP_SIN
    NP_SQRT
    RANGE
    RETURN
    SET_UP
    SET_UP_HOST
    SPACE
    TRUE
    WHILE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> NUMBER AND NUMBER
Rule 2     statement -> NUMBER AND statement
Rule 3     statement -> statement AND NUMBER
Rule 4     statement -> statement AND statement
Rule 5     statement -> NUMBER OR NUMBER
Rule 6     statement -> NUMBER OR statement
Rule 7     statement -> statement OR NUMBER
Rule 8     statement -> statement OR statement
Rule 9     statement -> NOT NUMBER
Rule 10    statement -> NOT statement
Rule 11    statement -> NUMBER POWER NUMBER
Rule 12    statement -> NUMBER POWER statement
Rule 13    statement -> statement POWER NUMBER
Rule 14    statement -> statement POWER statement
Rule 15    statement -> INCREMENT NUMBER
Rule 16    statement -> INCREMENT statement
Rule 17    statement -> INCREMENT VARIABLE
Rule 18    statement -> DECREMENT NUMBER
Rule 19    statement -> DECREMENT statement
Rule 20    statement -> DECREMENT VARIABLE
Rule 21    statement -> PRINT LPAREN STRING RPAREN
Rule 22    statement -> PRINT LPAREN NUMBER RPAREN
Rule 23    statement -> PRINT LPAREN statement RPAREN
Rule 24    statement -> NUMBER PLUS NUMBER
Rule 25    statement -> statement PLUS NUMBER
Rule 26    statement -> NUMBER PLUS statement
Rule 27    statement -> statement PLUS statement
Rule 28    statement -> NUMBER MINUS NUMBER
Rule 29    statement -> statement MINUS NUMBER
Rule 30    statement -> NUMBER MINUS statement
Rule 31    statement -> statement MINUS statement
Rule 32    statement -> NUMBER TIMES NUMBER
Rule 33    statement -> statement TIMES NUMBER
Rule 34    statement -> NUMBER TIMES statement
Rule 35    statement -> statement TIMES statement
Rule 36    statement -> NUMBER DIVIDE NUMBER
Rule 37    statement -> statement DIVIDE NUMBER
Rule 38    statement -> NUMBER DIVIDE statement
Rule 39    statement -> statement DIVIDE statement
Rule 40    statement -> LPAREN statement RPAREN
Rule 41    statement -> statement DOUBLE_EQUALS statement
Rule 42    statement -> NUMBER DOUBLE_EQUALS NUMBER
Rule 43    statement -> STRING DOUBLE_EQUALS STRING
Rule 44    statement -> statement DOUBLE_EQUALS NUMBER
Rule 45    statement -> NUMBER DOUBLE_EQUALS statement
Rule 46    statement -> statement DOUBLE_EQUALS STRING
Rule 47    statement -> STRING DOUBLE_EQUALS statement
Rule 48    statement -> STRING DOUBLE_EQUALS NUMBER
Rule 49    statement -> NUMBER DOUBLE_EQUALS STRING
Rule 50    statement -> IF statement COLON statement
Rule 51    statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
Rule 52    statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
Rule 53    statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
Rule 54    statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
Rule 55    statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
Rule 56    statement -> <empty>

Terminals, with rules where they appear

AND                  : 1 2 3 4
ARRAY                : 51
BREAK                : 
COLON                : 50
COMMA                : 52 53 55
COMMENT              : 
DECREMENT            : 18 19 20
DEF                  : 
DIVIDE               : 36 37 38 39
DOUBLE_EQUALS        : 41 42 43 44 45 46 47 48 49
ELIF                 : 
ELSE                 : 
EQUALS               : 51 52 53 54 55
FALSE                : 
FOR                  : 
IF                   : 50
IN                   : 
INCREMENT            : 15 16 17
LIST                 : 51
LPAREN               : 21 22 23 40 51 52 53 54 55
MINUS                : 28 29 30 31
NONE                 : 
NOT                  : 9 10
NP_ABS               : 
NP_ADD               : 52
NP_COS               : 
NP_DOT_PRODUCT       : 55
NP_EXP               : 
NP_LOG               : 
NP_LOG10             : 
NP_POWER             : 
NP_SIGN              : 
NP_SIN               : 
NP_SQRT              : 
NP_SUBTRACT          : 53
NP_SUM               : 54
NUMBER               : 1 1 2 3 5 5 6 7 9 11 11 12 13 15 18 22 24 24 25 26 28 28 29 30 32 32 33 34 36 36 37 38 42 42 44 45 48 49
OR                   : 5 6 7 8
PLUS                 : 24 25 26 27
POWER                : 11 12 13 14
PRINT                : 21 22 23
RANGE                : 
RETURN               : 
RPAREN               : 21 22 23 40 51 52 53 54 55
SET_UP               : 
SET_UP_HOST          : 
SPACE                : 
STRING               : 21 43 43 46 47 48 49
TIMES                : 32 33 34 35
TRUE                 : 
VARIABLE             : 17 20 51 52 52 52 53 53 53 54 54 55 55 55
WHILE                : 
error                : 

Nonterminals, with rules where they appear

statement            : 2 3 4 4 6 7 8 8 10 12 13 14 14 16 19 23 25 26 27 27 29 30 31 31 33 34 35 35 37 38 39 39 40 41 41 44 45 46 47 50 50 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 2
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18


state 2

    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26


state 3

    (9) statement -> NOT . NUMBER
    (10) statement -> NOT . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 27
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 28

state 4

    (15) statement -> INCREMENT . NUMBER
    (16) statement -> INCREMENT . statement
    (17) statement -> INCREMENT . VARIABLE
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 29
    VARIABLE        shift and go to state 31
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 30

state 5

    (51) statement -> VARIABLE . EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> VARIABLE . EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> VARIABLE . EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> VARIABLE . EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> VARIABLE . EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    EQUALS          shift and go to state 32


state 6

    (18) statement -> DECREMENT . NUMBER
    (19) statement -> DECREMENT . statement
    (20) statement -> DECREMENT . VARIABLE
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 35
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 34

state 7

    (21) statement -> PRINT . LPAREN STRING RPAREN
    (22) statement -> PRINT . LPAREN NUMBER RPAREN
    (23) statement -> PRINT . LPAREN statement RPAREN

    LPAREN          shift and go to state 36


state 8

    (40) statement -> LPAREN . statement RPAREN
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 2
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    RPAREN          reduce using rule 56 (statement -> .)
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)

    statement                      shift and go to state 37

state 9

    (43) statement -> STRING . DOUBLE_EQUALS STRING
    (47) statement -> STRING . DOUBLE_EQUALS statement
    (48) statement -> STRING . DOUBLE_EQUALS NUMBER

    DOUBLE_EQUALS   shift and go to state 38


state 10

    (50) statement -> IF . statement COLON statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 2
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    COLON           reduce using rule 56 (statement -> .)
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)

    statement                      shift and go to state 39

state 11

    (3) statement -> statement AND . NUMBER
    (4) statement -> statement AND . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 41
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 40

state 12

    (7) statement -> statement OR . NUMBER
    (8) statement -> statement OR . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 43
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 42

state 13

    (13) statement -> statement POWER . NUMBER
    (14) statement -> statement POWER . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 45
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 44

state 14

    (25) statement -> statement PLUS . NUMBER
    (27) statement -> statement PLUS . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 47
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 46

state 15

    (29) statement -> statement MINUS . NUMBER
    (31) statement -> statement MINUS . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 49
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 48

state 16

    (33) statement -> statement TIMES . NUMBER
    (35) statement -> statement TIMES . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 51
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 50

state 17

    (37) statement -> statement DIVIDE . NUMBER
    (39) statement -> statement DIVIDE . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 53
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 52

state 18

    (41) statement -> statement DOUBLE_EQUALS . statement
    (44) statement -> statement DOUBLE_EQUALS . NUMBER
    (46) statement -> statement DOUBLE_EQUALS . STRING
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 55
    STRING          shift and go to state 56
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 54

state 19

    (1) statement -> NUMBER AND . NUMBER
    (2) statement -> NUMBER AND . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 57
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 58

state 20

    (5) statement -> NUMBER OR . NUMBER
    (6) statement -> NUMBER OR . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 59
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 60

state 21

    (11) statement -> NUMBER POWER . NUMBER
    (12) statement -> NUMBER POWER . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 61
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 62

state 22

    (24) statement -> NUMBER PLUS . NUMBER
    (26) statement -> NUMBER PLUS . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 63
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 64

state 23

    (28) statement -> NUMBER MINUS . NUMBER
    (30) statement -> NUMBER MINUS . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 65
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 66

state 24

    (32) statement -> NUMBER TIMES . NUMBER
    (34) statement -> NUMBER TIMES . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 67
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 68

state 25

    (36) statement -> NUMBER DIVIDE . NUMBER
    (38) statement -> NUMBER DIVIDE . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 69
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 70

state 26

    (42) statement -> NUMBER DOUBLE_EQUALS . NUMBER
    (45) statement -> NUMBER DOUBLE_EQUALS . statement
    (49) statement -> NUMBER DOUBLE_EQUALS . STRING
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 71
    STRING          shift and go to state 73
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 72

state 27

    (9) statement -> NOT NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 9 (statement -> NOT NUMBER .)
    RPAREN          reduce using rule 9 (statement -> NOT NUMBER .)
    COLON           reduce using rule 9 (statement -> NOT NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 9 (statement -> NOT NUMBER .) ]
  ! OR              [ reduce using rule 9 (statement -> NOT NUMBER .) ]
  ! POWER           [ reduce using rule 9 (statement -> NOT NUMBER .) ]
  ! PLUS            [ reduce using rule 9 (statement -> NOT NUMBER .) ]
  ! MINUS           [ reduce using rule 9 (statement -> NOT NUMBER .) ]
  ! TIMES           [ reduce using rule 9 (statement -> NOT NUMBER .) ]
  ! DIVIDE          [ reduce using rule 9 (statement -> NOT NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 9 (statement -> NOT NUMBER .) ]


state 28

    (10) statement -> NOT statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 10 (statement -> NOT statement .)
    RPAREN          reduce using rule 10 (statement -> NOT statement .)
    COLON           reduce using rule 10 (statement -> NOT statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 10 (statement -> NOT statement .) ]
  ! OR              [ reduce using rule 10 (statement -> NOT statement .) ]
  ! POWER           [ reduce using rule 10 (statement -> NOT statement .) ]
  ! PLUS            [ reduce using rule 10 (statement -> NOT statement .) ]
  ! MINUS           [ reduce using rule 10 (statement -> NOT statement .) ]
  ! TIMES           [ reduce using rule 10 (statement -> NOT statement .) ]
  ! DIVIDE          [ reduce using rule 10 (statement -> NOT statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 10 (statement -> NOT statement .) ]


state 29

    (15) statement -> INCREMENT NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 15 (statement -> INCREMENT NUMBER .)
    RPAREN          reduce using rule 15 (statement -> INCREMENT NUMBER .)
    COLON           reduce using rule 15 (statement -> INCREMENT NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 15 (statement -> INCREMENT NUMBER .) ]
  ! OR              [ reduce using rule 15 (statement -> INCREMENT NUMBER .) ]
  ! POWER           [ reduce using rule 15 (statement -> INCREMENT NUMBER .) ]
  ! PLUS            [ reduce using rule 15 (statement -> INCREMENT NUMBER .) ]
  ! MINUS           [ reduce using rule 15 (statement -> INCREMENT NUMBER .) ]
  ! TIMES           [ reduce using rule 15 (statement -> INCREMENT NUMBER .) ]
  ! DIVIDE          [ reduce using rule 15 (statement -> INCREMENT NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 15 (statement -> INCREMENT NUMBER .) ]


state 30

    (16) statement -> INCREMENT statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 16 (statement -> INCREMENT statement .)
    RPAREN          reduce using rule 16 (statement -> INCREMENT statement .)
    COLON           reduce using rule 16 (statement -> INCREMENT statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 16 (statement -> INCREMENT statement .) ]
  ! OR              [ reduce using rule 16 (statement -> INCREMENT statement .) ]
  ! POWER           [ reduce using rule 16 (statement -> INCREMENT statement .) ]
  ! PLUS            [ reduce using rule 16 (statement -> INCREMENT statement .) ]
  ! MINUS           [ reduce using rule 16 (statement -> INCREMENT statement .) ]
  ! TIMES           [ reduce using rule 16 (statement -> INCREMENT statement .) ]
  ! DIVIDE          [ reduce using rule 16 (statement -> INCREMENT statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 16 (statement -> INCREMENT statement .) ]


state 31

    (17) statement -> INCREMENT VARIABLE .
    (51) statement -> VARIABLE . EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> VARIABLE . EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> VARIABLE . EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> VARIABLE . EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> VARIABLE . EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    AND             reduce using rule 17 (statement -> INCREMENT VARIABLE .)
    OR              reduce using rule 17 (statement -> INCREMENT VARIABLE .)
    POWER           reduce using rule 17 (statement -> INCREMENT VARIABLE .)
    PLUS            reduce using rule 17 (statement -> INCREMENT VARIABLE .)
    MINUS           reduce using rule 17 (statement -> INCREMENT VARIABLE .)
    TIMES           reduce using rule 17 (statement -> INCREMENT VARIABLE .)
    DIVIDE          reduce using rule 17 (statement -> INCREMENT VARIABLE .)
    DOUBLE_EQUALS   reduce using rule 17 (statement -> INCREMENT VARIABLE .)
    $end            reduce using rule 17 (statement -> INCREMENT VARIABLE .)
    RPAREN          reduce using rule 17 (statement -> INCREMENT VARIABLE .)
    COLON           reduce using rule 17 (statement -> INCREMENT VARIABLE .)
    EQUALS          shift and go to state 32


state 32

    (51) statement -> VARIABLE EQUALS . ARRAY LPAREN LIST RPAREN
    (52) statement -> VARIABLE EQUALS . NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> VARIABLE EQUALS . NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> VARIABLE EQUALS . NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> VARIABLE EQUALS . NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    ARRAY           shift and go to state 74
    NP_ADD          shift and go to state 75
    NP_SUBTRACT     shift and go to state 76
    NP_SUM          shift and go to state 77
    NP_DOT_PRODUCT  shift and go to state 78


state 33

    (18) statement -> DECREMENT NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 18 (statement -> DECREMENT NUMBER .)
    RPAREN          reduce using rule 18 (statement -> DECREMENT NUMBER .)
    COLON           reduce using rule 18 (statement -> DECREMENT NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 18 (statement -> DECREMENT NUMBER .) ]
  ! OR              [ reduce using rule 18 (statement -> DECREMENT NUMBER .) ]
  ! POWER           [ reduce using rule 18 (statement -> DECREMENT NUMBER .) ]
  ! PLUS            [ reduce using rule 18 (statement -> DECREMENT NUMBER .) ]
  ! MINUS           [ reduce using rule 18 (statement -> DECREMENT NUMBER .) ]
  ! TIMES           [ reduce using rule 18 (statement -> DECREMENT NUMBER .) ]
  ! DIVIDE          [ reduce using rule 18 (statement -> DECREMENT NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 18 (statement -> DECREMENT NUMBER .) ]


state 34

    (19) statement -> DECREMENT statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 19 (statement -> DECREMENT statement .)
    RPAREN          reduce using rule 19 (statement -> DECREMENT statement .)
    COLON           reduce using rule 19 (statement -> DECREMENT statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 19 (statement -> DECREMENT statement .) ]
  ! OR              [ reduce using rule 19 (statement -> DECREMENT statement .) ]
  ! POWER           [ reduce using rule 19 (statement -> DECREMENT statement .) ]
  ! PLUS            [ reduce using rule 19 (statement -> DECREMENT statement .) ]
  ! MINUS           [ reduce using rule 19 (statement -> DECREMENT statement .) ]
  ! TIMES           [ reduce using rule 19 (statement -> DECREMENT statement .) ]
  ! DIVIDE          [ reduce using rule 19 (statement -> DECREMENT statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 19 (statement -> DECREMENT statement .) ]


state 35

    (20) statement -> DECREMENT VARIABLE .
    (51) statement -> VARIABLE . EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> VARIABLE . EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> VARIABLE . EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> VARIABLE . EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> VARIABLE . EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN

    AND             reduce using rule 20 (statement -> DECREMENT VARIABLE .)
    OR              reduce using rule 20 (statement -> DECREMENT VARIABLE .)
    POWER           reduce using rule 20 (statement -> DECREMENT VARIABLE .)
    PLUS            reduce using rule 20 (statement -> DECREMENT VARIABLE .)
    MINUS           reduce using rule 20 (statement -> DECREMENT VARIABLE .)
    TIMES           reduce using rule 20 (statement -> DECREMENT VARIABLE .)
    DIVIDE          reduce using rule 20 (statement -> DECREMENT VARIABLE .)
    DOUBLE_EQUALS   reduce using rule 20 (statement -> DECREMENT VARIABLE .)
    $end            reduce using rule 20 (statement -> DECREMENT VARIABLE .)
    RPAREN          reduce using rule 20 (statement -> DECREMENT VARIABLE .)
    COLON           reduce using rule 20 (statement -> DECREMENT VARIABLE .)
    EQUALS          shift and go to state 32


state 36

    (21) statement -> PRINT LPAREN . STRING RPAREN
    (22) statement -> PRINT LPAREN . NUMBER RPAREN
    (23) statement -> PRINT LPAREN . statement RPAREN
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    STRING          shift and go to state 79
    NUMBER          shift and go to state 80
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    RPAREN          reduce using rule 56 (statement -> .)
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)

    statement                      shift and go to state 81

state 37

    (40) statement -> LPAREN statement . RPAREN
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

    RPAREN          shift and go to state 82
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18


state 38

    (43) statement -> STRING DOUBLE_EQUALS . STRING
    (47) statement -> STRING DOUBLE_EQUALS . statement
    (48) statement -> STRING DOUBLE_EQUALS . NUMBER
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    STRING          shift and go to state 83
    NUMBER          shift and go to state 85
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 84

state 39

    (50) statement -> IF statement . COLON statement
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

    COLON           shift and go to state 86
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18


state 40

    (4) statement -> statement AND statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 4 (statement -> statement AND statement .)
    RPAREN          reduce using rule 4 (statement -> statement AND statement .)
    COLON           reduce using rule 4 (statement -> statement AND statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 4 (statement -> statement AND statement .) ]
  ! OR              [ reduce using rule 4 (statement -> statement AND statement .) ]
  ! POWER           [ reduce using rule 4 (statement -> statement AND statement .) ]
  ! PLUS            [ reduce using rule 4 (statement -> statement AND statement .) ]
  ! MINUS           [ reduce using rule 4 (statement -> statement AND statement .) ]
  ! TIMES           [ reduce using rule 4 (statement -> statement AND statement .) ]
  ! DIVIDE          [ reduce using rule 4 (statement -> statement AND statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 4 (statement -> statement AND statement .) ]


state 41

    (3) statement -> statement AND NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 3 (statement -> statement AND NUMBER .)
    RPAREN          reduce using rule 3 (statement -> statement AND NUMBER .)
    COLON           reduce using rule 3 (statement -> statement AND NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 3 (statement -> statement AND NUMBER .) ]
  ! OR              [ reduce using rule 3 (statement -> statement AND NUMBER .) ]
  ! POWER           [ reduce using rule 3 (statement -> statement AND NUMBER .) ]
  ! PLUS            [ reduce using rule 3 (statement -> statement AND NUMBER .) ]
  ! MINUS           [ reduce using rule 3 (statement -> statement AND NUMBER .) ]
  ! TIMES           [ reduce using rule 3 (statement -> statement AND NUMBER .) ]
  ! DIVIDE          [ reduce using rule 3 (statement -> statement AND NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 3 (statement -> statement AND NUMBER .) ]


state 42

    (8) statement -> statement OR statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 8 (statement -> statement OR statement .)
    RPAREN          reduce using rule 8 (statement -> statement OR statement .)
    COLON           reduce using rule 8 (statement -> statement OR statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 8 (statement -> statement OR statement .) ]
  ! OR              [ reduce using rule 8 (statement -> statement OR statement .) ]
  ! POWER           [ reduce using rule 8 (statement -> statement OR statement .) ]
  ! PLUS            [ reduce using rule 8 (statement -> statement OR statement .) ]
  ! MINUS           [ reduce using rule 8 (statement -> statement OR statement .) ]
  ! TIMES           [ reduce using rule 8 (statement -> statement OR statement .) ]
  ! DIVIDE          [ reduce using rule 8 (statement -> statement OR statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 8 (statement -> statement OR statement .) ]


state 43

    (7) statement -> statement OR NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 7 (statement -> statement OR NUMBER .)
    RPAREN          reduce using rule 7 (statement -> statement OR NUMBER .)
    COLON           reduce using rule 7 (statement -> statement OR NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 7 (statement -> statement OR NUMBER .) ]
  ! OR              [ reduce using rule 7 (statement -> statement OR NUMBER .) ]
  ! POWER           [ reduce using rule 7 (statement -> statement OR NUMBER .) ]
  ! PLUS            [ reduce using rule 7 (statement -> statement OR NUMBER .) ]
  ! MINUS           [ reduce using rule 7 (statement -> statement OR NUMBER .) ]
  ! TIMES           [ reduce using rule 7 (statement -> statement OR NUMBER .) ]
  ! DIVIDE          [ reduce using rule 7 (statement -> statement OR NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 7 (statement -> statement OR NUMBER .) ]


state 44

    (14) statement -> statement POWER statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 14 (statement -> statement POWER statement .)
    RPAREN          reduce using rule 14 (statement -> statement POWER statement .)
    COLON           reduce using rule 14 (statement -> statement POWER statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 14 (statement -> statement POWER statement .) ]
  ! OR              [ reduce using rule 14 (statement -> statement POWER statement .) ]
  ! POWER           [ reduce using rule 14 (statement -> statement POWER statement .) ]
  ! PLUS            [ reduce using rule 14 (statement -> statement POWER statement .) ]
  ! MINUS           [ reduce using rule 14 (statement -> statement POWER statement .) ]
  ! TIMES           [ reduce using rule 14 (statement -> statement POWER statement .) ]
  ! DIVIDE          [ reduce using rule 14 (statement -> statement POWER statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 14 (statement -> statement POWER statement .) ]


state 45

    (13) statement -> statement POWER NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 13 (statement -> statement POWER NUMBER .)
    RPAREN          reduce using rule 13 (statement -> statement POWER NUMBER .)
    COLON           reduce using rule 13 (statement -> statement POWER NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 13 (statement -> statement POWER NUMBER .) ]
  ! OR              [ reduce using rule 13 (statement -> statement POWER NUMBER .) ]
  ! POWER           [ reduce using rule 13 (statement -> statement POWER NUMBER .) ]
  ! PLUS            [ reduce using rule 13 (statement -> statement POWER NUMBER .) ]
  ! MINUS           [ reduce using rule 13 (statement -> statement POWER NUMBER .) ]
  ! TIMES           [ reduce using rule 13 (statement -> statement POWER NUMBER .) ]
  ! DIVIDE          [ reduce using rule 13 (statement -> statement POWER NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 13 (statement -> statement POWER NUMBER .) ]


state 46

    (27) statement -> statement PLUS statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 27 (statement -> statement PLUS statement .)
    RPAREN          reduce using rule 27 (statement -> statement PLUS statement .)
    COLON           reduce using rule 27 (statement -> statement PLUS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 27 (statement -> statement PLUS statement .) ]
  ! OR              [ reduce using rule 27 (statement -> statement PLUS statement .) ]
  ! POWER           [ reduce using rule 27 (statement -> statement PLUS statement .) ]
  ! PLUS            [ reduce using rule 27 (statement -> statement PLUS statement .) ]
  ! MINUS           [ reduce using rule 27 (statement -> statement PLUS statement .) ]
  ! TIMES           [ reduce using rule 27 (statement -> statement PLUS statement .) ]
  ! DIVIDE          [ reduce using rule 27 (statement -> statement PLUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 27 (statement -> statement PLUS statement .) ]


state 47

    (25) statement -> statement PLUS NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 25 (statement -> statement PLUS NUMBER .)
    RPAREN          reduce using rule 25 (statement -> statement PLUS NUMBER .)
    COLON           reduce using rule 25 (statement -> statement PLUS NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 25 (statement -> statement PLUS NUMBER .) ]
  ! OR              [ reduce using rule 25 (statement -> statement PLUS NUMBER .) ]
  ! POWER           [ reduce using rule 25 (statement -> statement PLUS NUMBER .) ]
  ! PLUS            [ reduce using rule 25 (statement -> statement PLUS NUMBER .) ]
  ! MINUS           [ reduce using rule 25 (statement -> statement PLUS NUMBER .) ]
  ! TIMES           [ reduce using rule 25 (statement -> statement PLUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 25 (statement -> statement PLUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 25 (statement -> statement PLUS NUMBER .) ]


state 48

    (31) statement -> statement MINUS statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 31 (statement -> statement MINUS statement .)
    RPAREN          reduce using rule 31 (statement -> statement MINUS statement .)
    COLON           reduce using rule 31 (statement -> statement MINUS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 31 (statement -> statement MINUS statement .) ]
  ! OR              [ reduce using rule 31 (statement -> statement MINUS statement .) ]
  ! POWER           [ reduce using rule 31 (statement -> statement MINUS statement .) ]
  ! PLUS            [ reduce using rule 31 (statement -> statement MINUS statement .) ]
  ! MINUS           [ reduce using rule 31 (statement -> statement MINUS statement .) ]
  ! TIMES           [ reduce using rule 31 (statement -> statement MINUS statement .) ]
  ! DIVIDE          [ reduce using rule 31 (statement -> statement MINUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 31 (statement -> statement MINUS statement .) ]


state 49

    (29) statement -> statement MINUS NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 29 (statement -> statement MINUS NUMBER .)
    RPAREN          reduce using rule 29 (statement -> statement MINUS NUMBER .)
    COLON           reduce using rule 29 (statement -> statement MINUS NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 29 (statement -> statement MINUS NUMBER .) ]
  ! OR              [ reduce using rule 29 (statement -> statement MINUS NUMBER .) ]
  ! POWER           [ reduce using rule 29 (statement -> statement MINUS NUMBER .) ]
  ! PLUS            [ reduce using rule 29 (statement -> statement MINUS NUMBER .) ]
  ! MINUS           [ reduce using rule 29 (statement -> statement MINUS NUMBER .) ]
  ! TIMES           [ reduce using rule 29 (statement -> statement MINUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 29 (statement -> statement MINUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 29 (statement -> statement MINUS NUMBER .) ]


state 50

    (35) statement -> statement TIMES statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 35 (statement -> statement TIMES statement .)
    RPAREN          reduce using rule 35 (statement -> statement TIMES statement .)
    COLON           reduce using rule 35 (statement -> statement TIMES statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 35 (statement -> statement TIMES statement .) ]
  ! OR              [ reduce using rule 35 (statement -> statement TIMES statement .) ]
  ! POWER           [ reduce using rule 35 (statement -> statement TIMES statement .) ]
  ! PLUS            [ reduce using rule 35 (statement -> statement TIMES statement .) ]
  ! MINUS           [ reduce using rule 35 (statement -> statement TIMES statement .) ]
  ! TIMES           [ reduce using rule 35 (statement -> statement TIMES statement .) ]
  ! DIVIDE          [ reduce using rule 35 (statement -> statement TIMES statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 35 (statement -> statement TIMES statement .) ]


state 51

    (33) statement -> statement TIMES NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 33 (statement -> statement TIMES NUMBER .)
    RPAREN          reduce using rule 33 (statement -> statement TIMES NUMBER .)
    COLON           reduce using rule 33 (statement -> statement TIMES NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 33 (statement -> statement TIMES NUMBER .) ]
  ! OR              [ reduce using rule 33 (statement -> statement TIMES NUMBER .) ]
  ! POWER           [ reduce using rule 33 (statement -> statement TIMES NUMBER .) ]
  ! PLUS            [ reduce using rule 33 (statement -> statement TIMES NUMBER .) ]
  ! MINUS           [ reduce using rule 33 (statement -> statement TIMES NUMBER .) ]
  ! TIMES           [ reduce using rule 33 (statement -> statement TIMES NUMBER .) ]
  ! DIVIDE          [ reduce using rule 33 (statement -> statement TIMES NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 33 (statement -> statement TIMES NUMBER .) ]


state 52

    (39) statement -> statement DIVIDE statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 39 (statement -> statement DIVIDE statement .)
    RPAREN          reduce using rule 39 (statement -> statement DIVIDE statement .)
    COLON           reduce using rule 39 (statement -> statement DIVIDE statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 39 (statement -> statement DIVIDE statement .) ]
  ! OR              [ reduce using rule 39 (statement -> statement DIVIDE statement .) ]
  ! POWER           [ reduce using rule 39 (statement -> statement DIVIDE statement .) ]
  ! PLUS            [ reduce using rule 39 (statement -> statement DIVIDE statement .) ]
  ! MINUS           [ reduce using rule 39 (statement -> statement DIVIDE statement .) ]
  ! TIMES           [ reduce using rule 39 (statement -> statement DIVIDE statement .) ]
  ! DIVIDE          [ reduce using rule 39 (statement -> statement DIVIDE statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 39 (statement -> statement DIVIDE statement .) ]


state 53

    (37) statement -> statement DIVIDE NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 37 (statement -> statement DIVIDE NUMBER .)
    RPAREN          reduce using rule 37 (statement -> statement DIVIDE NUMBER .)
    COLON           reduce using rule 37 (statement -> statement DIVIDE NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 37 (statement -> statement DIVIDE NUMBER .) ]
  ! OR              [ reduce using rule 37 (statement -> statement DIVIDE NUMBER .) ]
  ! POWER           [ reduce using rule 37 (statement -> statement DIVIDE NUMBER .) ]
  ! PLUS            [ reduce using rule 37 (statement -> statement DIVIDE NUMBER .) ]
  ! MINUS           [ reduce using rule 37 (statement -> statement DIVIDE NUMBER .) ]
  ! TIMES           [ reduce using rule 37 (statement -> statement DIVIDE NUMBER .) ]
  ! DIVIDE          [ reduce using rule 37 (statement -> statement DIVIDE NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 37 (statement -> statement DIVIDE NUMBER .) ]


state 54

    (41) statement -> statement DOUBLE_EQUALS statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 41 (statement -> statement DOUBLE_EQUALS statement .)
    RPAREN          reduce using rule 41 (statement -> statement DOUBLE_EQUALS statement .)
    COLON           reduce using rule 41 (statement -> statement DOUBLE_EQUALS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 41 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! OR              [ reduce using rule 41 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! POWER           [ reduce using rule 41 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! PLUS            [ reduce using rule 41 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! MINUS           [ reduce using rule 41 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! TIMES           [ reduce using rule 41 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! DIVIDE          [ reduce using rule 41 (statement -> statement DOUBLE_EQUALS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 41 (statement -> statement DOUBLE_EQUALS statement .) ]


state 55

    (44) statement -> statement DOUBLE_EQUALS NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 44 (statement -> statement DOUBLE_EQUALS NUMBER .)
    RPAREN          reduce using rule 44 (statement -> statement DOUBLE_EQUALS NUMBER .)
    COLON           reduce using rule 44 (statement -> statement DOUBLE_EQUALS NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 44 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! OR              [ reduce using rule 44 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! POWER           [ reduce using rule 44 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! PLUS            [ reduce using rule 44 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! MINUS           [ reduce using rule 44 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! TIMES           [ reduce using rule 44 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 44 (statement -> statement DOUBLE_EQUALS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 44 (statement -> statement DOUBLE_EQUALS NUMBER .) ]


state 56

    (46) statement -> statement DOUBLE_EQUALS STRING .
    (43) statement -> STRING . DOUBLE_EQUALS STRING
    (47) statement -> STRING . DOUBLE_EQUALS statement
    (48) statement -> STRING . DOUBLE_EQUALS NUMBER

  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 46 (statement -> statement DOUBLE_EQUALS STRING .)
    OR              reduce using rule 46 (statement -> statement DOUBLE_EQUALS STRING .)
    POWER           reduce using rule 46 (statement -> statement DOUBLE_EQUALS STRING .)
    PLUS            reduce using rule 46 (statement -> statement DOUBLE_EQUALS STRING .)
    MINUS           reduce using rule 46 (statement -> statement DOUBLE_EQUALS STRING .)
    TIMES           reduce using rule 46 (statement -> statement DOUBLE_EQUALS STRING .)
    DIVIDE          reduce using rule 46 (statement -> statement DOUBLE_EQUALS STRING .)
    $end            reduce using rule 46 (statement -> statement DOUBLE_EQUALS STRING .)
    RPAREN          reduce using rule 46 (statement -> statement DOUBLE_EQUALS STRING .)
    COLON           reduce using rule 46 (statement -> statement DOUBLE_EQUALS STRING .)
    DOUBLE_EQUALS   shift and go to state 38

  ! DOUBLE_EQUALS   [ reduce using rule 46 (statement -> statement DOUBLE_EQUALS STRING .) ]


state 57

    (1) statement -> NUMBER AND NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 1 (statement -> NUMBER AND NUMBER .)
    RPAREN          reduce using rule 1 (statement -> NUMBER AND NUMBER .)
    COLON           reduce using rule 1 (statement -> NUMBER AND NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 1 (statement -> NUMBER AND NUMBER .) ]
  ! OR              [ reduce using rule 1 (statement -> NUMBER AND NUMBER .) ]
  ! POWER           [ reduce using rule 1 (statement -> NUMBER AND NUMBER .) ]
  ! PLUS            [ reduce using rule 1 (statement -> NUMBER AND NUMBER .) ]
  ! MINUS           [ reduce using rule 1 (statement -> NUMBER AND NUMBER .) ]
  ! TIMES           [ reduce using rule 1 (statement -> NUMBER AND NUMBER .) ]
  ! DIVIDE          [ reduce using rule 1 (statement -> NUMBER AND NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 1 (statement -> NUMBER AND NUMBER .) ]


state 58

    (2) statement -> NUMBER AND statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 2 (statement -> NUMBER AND statement .)
    RPAREN          reduce using rule 2 (statement -> NUMBER AND statement .)
    COLON           reduce using rule 2 (statement -> NUMBER AND statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 2 (statement -> NUMBER AND statement .) ]
  ! OR              [ reduce using rule 2 (statement -> NUMBER AND statement .) ]
  ! POWER           [ reduce using rule 2 (statement -> NUMBER AND statement .) ]
  ! PLUS            [ reduce using rule 2 (statement -> NUMBER AND statement .) ]
  ! MINUS           [ reduce using rule 2 (statement -> NUMBER AND statement .) ]
  ! TIMES           [ reduce using rule 2 (statement -> NUMBER AND statement .) ]
  ! DIVIDE          [ reduce using rule 2 (statement -> NUMBER AND statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 2 (statement -> NUMBER AND statement .) ]


state 59

    (5) statement -> NUMBER OR NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 5 (statement -> NUMBER OR NUMBER .)
    RPAREN          reduce using rule 5 (statement -> NUMBER OR NUMBER .)
    COLON           reduce using rule 5 (statement -> NUMBER OR NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 5 (statement -> NUMBER OR NUMBER .) ]
  ! OR              [ reduce using rule 5 (statement -> NUMBER OR NUMBER .) ]
  ! POWER           [ reduce using rule 5 (statement -> NUMBER OR NUMBER .) ]
  ! PLUS            [ reduce using rule 5 (statement -> NUMBER OR NUMBER .) ]
  ! MINUS           [ reduce using rule 5 (statement -> NUMBER OR NUMBER .) ]
  ! TIMES           [ reduce using rule 5 (statement -> NUMBER OR NUMBER .) ]
  ! DIVIDE          [ reduce using rule 5 (statement -> NUMBER OR NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 5 (statement -> NUMBER OR NUMBER .) ]


state 60

    (6) statement -> NUMBER OR statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 6 (statement -> NUMBER OR statement .)
    RPAREN          reduce using rule 6 (statement -> NUMBER OR statement .)
    COLON           reduce using rule 6 (statement -> NUMBER OR statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 6 (statement -> NUMBER OR statement .) ]
  ! OR              [ reduce using rule 6 (statement -> NUMBER OR statement .) ]
  ! POWER           [ reduce using rule 6 (statement -> NUMBER OR statement .) ]
  ! PLUS            [ reduce using rule 6 (statement -> NUMBER OR statement .) ]
  ! MINUS           [ reduce using rule 6 (statement -> NUMBER OR statement .) ]
  ! TIMES           [ reduce using rule 6 (statement -> NUMBER OR statement .) ]
  ! DIVIDE          [ reduce using rule 6 (statement -> NUMBER OR statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 6 (statement -> NUMBER OR statement .) ]


state 61

    (11) statement -> NUMBER POWER NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 11 (statement -> NUMBER POWER NUMBER .)
    RPAREN          reduce using rule 11 (statement -> NUMBER POWER NUMBER .)
    COLON           reduce using rule 11 (statement -> NUMBER POWER NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 11 (statement -> NUMBER POWER NUMBER .) ]
  ! OR              [ reduce using rule 11 (statement -> NUMBER POWER NUMBER .) ]
  ! POWER           [ reduce using rule 11 (statement -> NUMBER POWER NUMBER .) ]
  ! PLUS            [ reduce using rule 11 (statement -> NUMBER POWER NUMBER .) ]
  ! MINUS           [ reduce using rule 11 (statement -> NUMBER POWER NUMBER .) ]
  ! TIMES           [ reduce using rule 11 (statement -> NUMBER POWER NUMBER .) ]
  ! DIVIDE          [ reduce using rule 11 (statement -> NUMBER POWER NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 11 (statement -> NUMBER POWER NUMBER .) ]


state 62

    (12) statement -> NUMBER POWER statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 12 (statement -> NUMBER POWER statement .)
    RPAREN          reduce using rule 12 (statement -> NUMBER POWER statement .)
    COLON           reduce using rule 12 (statement -> NUMBER POWER statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 12 (statement -> NUMBER POWER statement .) ]
  ! OR              [ reduce using rule 12 (statement -> NUMBER POWER statement .) ]
  ! POWER           [ reduce using rule 12 (statement -> NUMBER POWER statement .) ]
  ! PLUS            [ reduce using rule 12 (statement -> NUMBER POWER statement .) ]
  ! MINUS           [ reduce using rule 12 (statement -> NUMBER POWER statement .) ]
  ! TIMES           [ reduce using rule 12 (statement -> NUMBER POWER statement .) ]
  ! DIVIDE          [ reduce using rule 12 (statement -> NUMBER POWER statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 12 (statement -> NUMBER POWER statement .) ]


state 63

    (24) statement -> NUMBER PLUS NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 24 (statement -> NUMBER PLUS NUMBER .)
    RPAREN          reduce using rule 24 (statement -> NUMBER PLUS NUMBER .)
    COLON           reduce using rule 24 (statement -> NUMBER PLUS NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 24 (statement -> NUMBER PLUS NUMBER .) ]
  ! OR              [ reduce using rule 24 (statement -> NUMBER PLUS NUMBER .) ]
  ! POWER           [ reduce using rule 24 (statement -> NUMBER PLUS NUMBER .) ]
  ! PLUS            [ reduce using rule 24 (statement -> NUMBER PLUS NUMBER .) ]
  ! MINUS           [ reduce using rule 24 (statement -> NUMBER PLUS NUMBER .) ]
  ! TIMES           [ reduce using rule 24 (statement -> NUMBER PLUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 24 (statement -> NUMBER PLUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 24 (statement -> NUMBER PLUS NUMBER .) ]


state 64

    (26) statement -> NUMBER PLUS statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 26 (statement -> NUMBER PLUS statement .)
    RPAREN          reduce using rule 26 (statement -> NUMBER PLUS statement .)
    COLON           reduce using rule 26 (statement -> NUMBER PLUS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 26 (statement -> NUMBER PLUS statement .) ]
  ! OR              [ reduce using rule 26 (statement -> NUMBER PLUS statement .) ]
  ! POWER           [ reduce using rule 26 (statement -> NUMBER PLUS statement .) ]
  ! PLUS            [ reduce using rule 26 (statement -> NUMBER PLUS statement .) ]
  ! MINUS           [ reduce using rule 26 (statement -> NUMBER PLUS statement .) ]
  ! TIMES           [ reduce using rule 26 (statement -> NUMBER PLUS statement .) ]
  ! DIVIDE          [ reduce using rule 26 (statement -> NUMBER PLUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 26 (statement -> NUMBER PLUS statement .) ]


state 65

    (28) statement -> NUMBER MINUS NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 28 (statement -> NUMBER MINUS NUMBER .)
    RPAREN          reduce using rule 28 (statement -> NUMBER MINUS NUMBER .)
    COLON           reduce using rule 28 (statement -> NUMBER MINUS NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 28 (statement -> NUMBER MINUS NUMBER .) ]
  ! OR              [ reduce using rule 28 (statement -> NUMBER MINUS NUMBER .) ]
  ! POWER           [ reduce using rule 28 (statement -> NUMBER MINUS NUMBER .) ]
  ! PLUS            [ reduce using rule 28 (statement -> NUMBER MINUS NUMBER .) ]
  ! MINUS           [ reduce using rule 28 (statement -> NUMBER MINUS NUMBER .) ]
  ! TIMES           [ reduce using rule 28 (statement -> NUMBER MINUS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 28 (statement -> NUMBER MINUS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 28 (statement -> NUMBER MINUS NUMBER .) ]


state 66

    (30) statement -> NUMBER MINUS statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 30 (statement -> NUMBER MINUS statement .)
    RPAREN          reduce using rule 30 (statement -> NUMBER MINUS statement .)
    COLON           reduce using rule 30 (statement -> NUMBER MINUS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 30 (statement -> NUMBER MINUS statement .) ]
  ! OR              [ reduce using rule 30 (statement -> NUMBER MINUS statement .) ]
  ! POWER           [ reduce using rule 30 (statement -> NUMBER MINUS statement .) ]
  ! PLUS            [ reduce using rule 30 (statement -> NUMBER MINUS statement .) ]
  ! MINUS           [ reduce using rule 30 (statement -> NUMBER MINUS statement .) ]
  ! TIMES           [ reduce using rule 30 (statement -> NUMBER MINUS statement .) ]
  ! DIVIDE          [ reduce using rule 30 (statement -> NUMBER MINUS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 30 (statement -> NUMBER MINUS statement .) ]


state 67

    (32) statement -> NUMBER TIMES NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 32 (statement -> NUMBER TIMES NUMBER .)
    RPAREN          reduce using rule 32 (statement -> NUMBER TIMES NUMBER .)
    COLON           reduce using rule 32 (statement -> NUMBER TIMES NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 32 (statement -> NUMBER TIMES NUMBER .) ]
  ! OR              [ reduce using rule 32 (statement -> NUMBER TIMES NUMBER .) ]
  ! POWER           [ reduce using rule 32 (statement -> NUMBER TIMES NUMBER .) ]
  ! PLUS            [ reduce using rule 32 (statement -> NUMBER TIMES NUMBER .) ]
  ! MINUS           [ reduce using rule 32 (statement -> NUMBER TIMES NUMBER .) ]
  ! TIMES           [ reduce using rule 32 (statement -> NUMBER TIMES NUMBER .) ]
  ! DIVIDE          [ reduce using rule 32 (statement -> NUMBER TIMES NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 32 (statement -> NUMBER TIMES NUMBER .) ]


state 68

    (34) statement -> NUMBER TIMES statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 34 (statement -> NUMBER TIMES statement .)
    RPAREN          reduce using rule 34 (statement -> NUMBER TIMES statement .)
    COLON           reduce using rule 34 (statement -> NUMBER TIMES statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 34 (statement -> NUMBER TIMES statement .) ]
  ! OR              [ reduce using rule 34 (statement -> NUMBER TIMES statement .) ]
  ! POWER           [ reduce using rule 34 (statement -> NUMBER TIMES statement .) ]
  ! PLUS            [ reduce using rule 34 (statement -> NUMBER TIMES statement .) ]
  ! MINUS           [ reduce using rule 34 (statement -> NUMBER TIMES statement .) ]
  ! TIMES           [ reduce using rule 34 (statement -> NUMBER TIMES statement .) ]
  ! DIVIDE          [ reduce using rule 34 (statement -> NUMBER TIMES statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 34 (statement -> NUMBER TIMES statement .) ]


state 69

    (36) statement -> NUMBER DIVIDE NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 36 (statement -> NUMBER DIVIDE NUMBER .)
    RPAREN          reduce using rule 36 (statement -> NUMBER DIVIDE NUMBER .)
    COLON           reduce using rule 36 (statement -> NUMBER DIVIDE NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 36 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! OR              [ reduce using rule 36 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! POWER           [ reduce using rule 36 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! PLUS            [ reduce using rule 36 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! MINUS           [ reduce using rule 36 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! TIMES           [ reduce using rule 36 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! DIVIDE          [ reduce using rule 36 (statement -> NUMBER DIVIDE NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 36 (statement -> NUMBER DIVIDE NUMBER .) ]


state 70

    (38) statement -> NUMBER DIVIDE statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 38 (statement -> NUMBER DIVIDE statement .)
    RPAREN          reduce using rule 38 (statement -> NUMBER DIVIDE statement .)
    COLON           reduce using rule 38 (statement -> NUMBER DIVIDE statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 38 (statement -> NUMBER DIVIDE statement .) ]
  ! OR              [ reduce using rule 38 (statement -> NUMBER DIVIDE statement .) ]
  ! POWER           [ reduce using rule 38 (statement -> NUMBER DIVIDE statement .) ]
  ! PLUS            [ reduce using rule 38 (statement -> NUMBER DIVIDE statement .) ]
  ! MINUS           [ reduce using rule 38 (statement -> NUMBER DIVIDE statement .) ]
  ! TIMES           [ reduce using rule 38 (statement -> NUMBER DIVIDE statement .) ]
  ! DIVIDE          [ reduce using rule 38 (statement -> NUMBER DIVIDE statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 38 (statement -> NUMBER DIVIDE statement .) ]


state 71

    (42) statement -> NUMBER DOUBLE_EQUALS NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 42 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    RPAREN          reduce using rule 42 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    COLON           reduce using rule 42 (statement -> NUMBER DOUBLE_EQUALS NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 42 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! OR              [ reduce using rule 42 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! POWER           [ reduce using rule 42 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! PLUS            [ reduce using rule 42 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! MINUS           [ reduce using rule 42 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! TIMES           [ reduce using rule 42 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 42 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 42 (statement -> NUMBER DOUBLE_EQUALS NUMBER .) ]


state 72

    (45) statement -> NUMBER DOUBLE_EQUALS statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 45 (statement -> NUMBER DOUBLE_EQUALS statement .)
    RPAREN          reduce using rule 45 (statement -> NUMBER DOUBLE_EQUALS statement .)
    COLON           reduce using rule 45 (statement -> NUMBER DOUBLE_EQUALS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 45 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! OR              [ reduce using rule 45 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! POWER           [ reduce using rule 45 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! PLUS            [ reduce using rule 45 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! MINUS           [ reduce using rule 45 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! TIMES           [ reduce using rule 45 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! DIVIDE          [ reduce using rule 45 (statement -> NUMBER DOUBLE_EQUALS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 45 (statement -> NUMBER DOUBLE_EQUALS statement .) ]


state 73

    (49) statement -> NUMBER DOUBLE_EQUALS STRING .
    (43) statement -> STRING . DOUBLE_EQUALS STRING
    (47) statement -> STRING . DOUBLE_EQUALS statement
    (48) statement -> STRING . DOUBLE_EQUALS NUMBER

  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 49 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    OR              reduce using rule 49 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    POWER           reduce using rule 49 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    PLUS            reduce using rule 49 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    MINUS           reduce using rule 49 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    TIMES           reduce using rule 49 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    DIVIDE          reduce using rule 49 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    $end            reduce using rule 49 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    RPAREN          reduce using rule 49 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    COLON           reduce using rule 49 (statement -> NUMBER DOUBLE_EQUALS STRING .)
    DOUBLE_EQUALS   shift and go to state 38

  ! DOUBLE_EQUALS   [ reduce using rule 49 (statement -> NUMBER DOUBLE_EQUALS STRING .) ]


state 74

    (51) statement -> VARIABLE EQUALS ARRAY . LPAREN LIST RPAREN

    LPAREN          shift and go to state 87


state 75

    (52) statement -> VARIABLE EQUALS NP_ADD . LPAREN VARIABLE COMMA VARIABLE RPAREN

    LPAREN          shift and go to state 88


state 76

    (53) statement -> VARIABLE EQUALS NP_SUBTRACT . LPAREN VARIABLE COMMA VARIABLE RPAREN

    LPAREN          shift and go to state 89


state 77

    (54) statement -> VARIABLE EQUALS NP_SUM . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 90


state 78

    (55) statement -> VARIABLE EQUALS NP_DOT_PRODUCT . LPAREN VARIABLE COMMA VARIABLE RPAREN

    LPAREN          shift and go to state 91


state 79

    (21) statement -> PRINT LPAREN STRING . RPAREN
    (43) statement -> STRING . DOUBLE_EQUALS STRING
    (47) statement -> STRING . DOUBLE_EQUALS statement
    (48) statement -> STRING . DOUBLE_EQUALS NUMBER

    RPAREN          shift and go to state 92
    DOUBLE_EQUALS   shift and go to state 38


state 80

    (22) statement -> PRINT LPAREN NUMBER . RPAREN
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

    RPAREN          shift and go to state 93
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26


state 81

    (23) statement -> PRINT LPAREN statement . RPAREN
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

    RPAREN          shift and go to state 94
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18


state 82

    (40) statement -> LPAREN statement RPAREN .

    AND             reduce using rule 40 (statement -> LPAREN statement RPAREN .)
    OR              reduce using rule 40 (statement -> LPAREN statement RPAREN .)
    POWER           reduce using rule 40 (statement -> LPAREN statement RPAREN .)
    PLUS            reduce using rule 40 (statement -> LPAREN statement RPAREN .)
    MINUS           reduce using rule 40 (statement -> LPAREN statement RPAREN .)
    TIMES           reduce using rule 40 (statement -> LPAREN statement RPAREN .)
    DIVIDE          reduce using rule 40 (statement -> LPAREN statement RPAREN .)
    DOUBLE_EQUALS   reduce using rule 40 (statement -> LPAREN statement RPAREN .)
    $end            reduce using rule 40 (statement -> LPAREN statement RPAREN .)
    RPAREN          reduce using rule 40 (statement -> LPAREN statement RPAREN .)
    COLON           reduce using rule 40 (statement -> LPAREN statement RPAREN .)


state 83

    (43) statement -> STRING DOUBLE_EQUALS STRING .
    (43) statement -> STRING . DOUBLE_EQUALS STRING
    (47) statement -> STRING . DOUBLE_EQUALS statement
    (48) statement -> STRING . DOUBLE_EQUALS NUMBER

  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    AND             reduce using rule 43 (statement -> STRING DOUBLE_EQUALS STRING .)
    OR              reduce using rule 43 (statement -> STRING DOUBLE_EQUALS STRING .)
    POWER           reduce using rule 43 (statement -> STRING DOUBLE_EQUALS STRING .)
    PLUS            reduce using rule 43 (statement -> STRING DOUBLE_EQUALS STRING .)
    MINUS           reduce using rule 43 (statement -> STRING DOUBLE_EQUALS STRING .)
    TIMES           reduce using rule 43 (statement -> STRING DOUBLE_EQUALS STRING .)
    DIVIDE          reduce using rule 43 (statement -> STRING DOUBLE_EQUALS STRING .)
    $end            reduce using rule 43 (statement -> STRING DOUBLE_EQUALS STRING .)
    RPAREN          reduce using rule 43 (statement -> STRING DOUBLE_EQUALS STRING .)
    COLON           reduce using rule 43 (statement -> STRING DOUBLE_EQUALS STRING .)
    DOUBLE_EQUALS   shift and go to state 38

  ! DOUBLE_EQUALS   [ reduce using rule 43 (statement -> STRING DOUBLE_EQUALS STRING .) ]


state 84

    (47) statement -> STRING DOUBLE_EQUALS statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 47 (statement -> STRING DOUBLE_EQUALS statement .)
    RPAREN          reduce using rule 47 (statement -> STRING DOUBLE_EQUALS statement .)
    COLON           reduce using rule 47 (statement -> STRING DOUBLE_EQUALS statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 47 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! OR              [ reduce using rule 47 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! POWER           [ reduce using rule 47 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! PLUS            [ reduce using rule 47 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! MINUS           [ reduce using rule 47 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! TIMES           [ reduce using rule 47 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! DIVIDE          [ reduce using rule 47 (statement -> STRING DOUBLE_EQUALS statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 47 (statement -> STRING DOUBLE_EQUALS statement .) ]


state 85

    (48) statement -> STRING DOUBLE_EQUALS NUMBER .
    (1) statement -> NUMBER . AND NUMBER
    (2) statement -> NUMBER . AND statement
    (5) statement -> NUMBER . OR NUMBER
    (6) statement -> NUMBER . OR statement
    (11) statement -> NUMBER . POWER NUMBER
    (12) statement -> NUMBER . POWER statement
    (24) statement -> NUMBER . PLUS NUMBER
    (26) statement -> NUMBER . PLUS statement
    (28) statement -> NUMBER . MINUS NUMBER
    (30) statement -> NUMBER . MINUS statement
    (32) statement -> NUMBER . TIMES NUMBER
    (34) statement -> NUMBER . TIMES statement
    (36) statement -> NUMBER . DIVIDE NUMBER
    (38) statement -> NUMBER . DIVIDE statement
    (42) statement -> NUMBER . DOUBLE_EQUALS NUMBER
    (45) statement -> NUMBER . DOUBLE_EQUALS statement
    (49) statement -> NUMBER . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 48 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    RPAREN          reduce using rule 48 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    COLON           reduce using rule 48 (statement -> STRING DOUBLE_EQUALS NUMBER .)
    AND             shift and go to state 19
    OR              shift and go to state 20
    POWER           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    DOUBLE_EQUALS   shift and go to state 26

  ! AND             [ reduce using rule 48 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! OR              [ reduce using rule 48 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! POWER           [ reduce using rule 48 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! PLUS            [ reduce using rule 48 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! MINUS           [ reduce using rule 48 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! TIMES           [ reduce using rule 48 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! DIVIDE          [ reduce using rule 48 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 48 (statement -> STRING DOUBLE_EQUALS NUMBER .) ]


state 86

    (50) statement -> IF statement COLON . statement
    (1) statement -> . NUMBER AND NUMBER
    (2) statement -> . NUMBER AND statement
    (3) statement -> . statement AND NUMBER
    (4) statement -> . statement AND statement
    (5) statement -> . NUMBER OR NUMBER
    (6) statement -> . NUMBER OR statement
    (7) statement -> . statement OR NUMBER
    (8) statement -> . statement OR statement
    (9) statement -> . NOT NUMBER
    (10) statement -> . NOT statement
    (11) statement -> . NUMBER POWER NUMBER
    (12) statement -> . NUMBER POWER statement
    (13) statement -> . statement POWER NUMBER
    (14) statement -> . statement POWER statement
    (15) statement -> . INCREMENT NUMBER
    (16) statement -> . INCREMENT statement
    (17) statement -> . INCREMENT VARIABLE
    (18) statement -> . DECREMENT NUMBER
    (19) statement -> . DECREMENT statement
    (20) statement -> . DECREMENT VARIABLE
    (21) statement -> . PRINT LPAREN STRING RPAREN
    (22) statement -> . PRINT LPAREN NUMBER RPAREN
    (23) statement -> . PRINT LPAREN statement RPAREN
    (24) statement -> . NUMBER PLUS NUMBER
    (25) statement -> . statement PLUS NUMBER
    (26) statement -> . NUMBER PLUS statement
    (27) statement -> . statement PLUS statement
    (28) statement -> . NUMBER MINUS NUMBER
    (29) statement -> . statement MINUS NUMBER
    (30) statement -> . NUMBER MINUS statement
    (31) statement -> . statement MINUS statement
    (32) statement -> . NUMBER TIMES NUMBER
    (33) statement -> . statement TIMES NUMBER
    (34) statement -> . NUMBER TIMES statement
    (35) statement -> . statement TIMES statement
    (36) statement -> . NUMBER DIVIDE NUMBER
    (37) statement -> . statement DIVIDE NUMBER
    (38) statement -> . NUMBER DIVIDE statement
    (39) statement -> . statement DIVIDE statement
    (40) statement -> . LPAREN statement RPAREN
    (41) statement -> . statement DOUBLE_EQUALS statement
    (42) statement -> . NUMBER DOUBLE_EQUALS NUMBER
    (43) statement -> . STRING DOUBLE_EQUALS STRING
    (44) statement -> . statement DOUBLE_EQUALS NUMBER
    (45) statement -> . NUMBER DOUBLE_EQUALS statement
    (46) statement -> . statement DOUBLE_EQUALS STRING
    (47) statement -> . STRING DOUBLE_EQUALS statement
    (48) statement -> . STRING DOUBLE_EQUALS NUMBER
    (49) statement -> . NUMBER DOUBLE_EQUALS STRING
    (50) statement -> . IF statement COLON statement
    (51) statement -> . VARIABLE EQUALS ARRAY LPAREN LIST RPAREN
    (52) statement -> . VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN
    (53) statement -> . VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (54) statement -> . VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN
    (55) statement -> . VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN
    (56) statement -> .

    NUMBER          shift and go to state 2
    NOT             shift and go to state 3
    INCREMENT       shift and go to state 4
    DECREMENT       shift and go to state 6
    PRINT           shift and go to state 7
    LPAREN          shift and go to state 8
    STRING          shift and go to state 9
    IF              shift and go to state 10
    VARIABLE        shift and go to state 5
    AND             reduce using rule 56 (statement -> .)
    OR              reduce using rule 56 (statement -> .)
    POWER           reduce using rule 56 (statement -> .)
    PLUS            reduce using rule 56 (statement -> .)
    MINUS           reduce using rule 56 (statement -> .)
    TIMES           reduce using rule 56 (statement -> .)
    DIVIDE          reduce using rule 56 (statement -> .)
    DOUBLE_EQUALS   reduce using rule 56 (statement -> .)
    $end            reduce using rule 56 (statement -> .)
    RPAREN          reduce using rule 56 (statement -> .)
    COLON           reduce using rule 56 (statement -> .)

    statement                      shift and go to state 95

state 87

    (51) statement -> VARIABLE EQUALS ARRAY LPAREN . LIST RPAREN

    LIST            shift and go to state 96


state 88

    (52) statement -> VARIABLE EQUALS NP_ADD LPAREN . VARIABLE COMMA VARIABLE RPAREN

    VARIABLE        shift and go to state 97


state 89

    (53) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN . VARIABLE COMMA VARIABLE RPAREN

    VARIABLE        shift and go to state 98


state 90

    (54) statement -> VARIABLE EQUALS NP_SUM LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 99


state 91

    (55) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN . VARIABLE COMMA VARIABLE RPAREN

    VARIABLE        shift and go to state 100


state 92

    (21) statement -> PRINT LPAREN STRING RPAREN .

    AND             reduce using rule 21 (statement -> PRINT LPAREN STRING RPAREN .)
    OR              reduce using rule 21 (statement -> PRINT LPAREN STRING RPAREN .)
    POWER           reduce using rule 21 (statement -> PRINT LPAREN STRING RPAREN .)
    PLUS            reduce using rule 21 (statement -> PRINT LPAREN STRING RPAREN .)
    MINUS           reduce using rule 21 (statement -> PRINT LPAREN STRING RPAREN .)
    TIMES           reduce using rule 21 (statement -> PRINT LPAREN STRING RPAREN .)
    DIVIDE          reduce using rule 21 (statement -> PRINT LPAREN STRING RPAREN .)
    DOUBLE_EQUALS   reduce using rule 21 (statement -> PRINT LPAREN STRING RPAREN .)
    $end            reduce using rule 21 (statement -> PRINT LPAREN STRING RPAREN .)
    RPAREN          reduce using rule 21 (statement -> PRINT LPAREN STRING RPAREN .)
    COLON           reduce using rule 21 (statement -> PRINT LPAREN STRING RPAREN .)


state 93

    (22) statement -> PRINT LPAREN NUMBER RPAREN .

    AND             reduce using rule 22 (statement -> PRINT LPAREN NUMBER RPAREN .)
    OR              reduce using rule 22 (statement -> PRINT LPAREN NUMBER RPAREN .)
    POWER           reduce using rule 22 (statement -> PRINT LPAREN NUMBER RPAREN .)
    PLUS            reduce using rule 22 (statement -> PRINT LPAREN NUMBER RPAREN .)
    MINUS           reduce using rule 22 (statement -> PRINT LPAREN NUMBER RPAREN .)
    TIMES           reduce using rule 22 (statement -> PRINT LPAREN NUMBER RPAREN .)
    DIVIDE          reduce using rule 22 (statement -> PRINT LPAREN NUMBER RPAREN .)
    DOUBLE_EQUALS   reduce using rule 22 (statement -> PRINT LPAREN NUMBER RPAREN .)
    $end            reduce using rule 22 (statement -> PRINT LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 22 (statement -> PRINT LPAREN NUMBER RPAREN .)
    COLON           reduce using rule 22 (statement -> PRINT LPAREN NUMBER RPAREN .)


state 94

    (23) statement -> PRINT LPAREN statement RPAREN .

    AND             reduce using rule 23 (statement -> PRINT LPAREN statement RPAREN .)
    OR              reduce using rule 23 (statement -> PRINT LPAREN statement RPAREN .)
    POWER           reduce using rule 23 (statement -> PRINT LPAREN statement RPAREN .)
    PLUS            reduce using rule 23 (statement -> PRINT LPAREN statement RPAREN .)
    MINUS           reduce using rule 23 (statement -> PRINT LPAREN statement RPAREN .)
    TIMES           reduce using rule 23 (statement -> PRINT LPAREN statement RPAREN .)
    DIVIDE          reduce using rule 23 (statement -> PRINT LPAREN statement RPAREN .)
    DOUBLE_EQUALS   reduce using rule 23 (statement -> PRINT LPAREN statement RPAREN .)
    $end            reduce using rule 23 (statement -> PRINT LPAREN statement RPAREN .)
    RPAREN          reduce using rule 23 (statement -> PRINT LPAREN statement RPAREN .)
    COLON           reduce using rule 23 (statement -> PRINT LPAREN statement RPAREN .)


state 95

    (50) statement -> IF statement COLON statement .
    (3) statement -> statement . AND NUMBER
    (4) statement -> statement . AND statement
    (7) statement -> statement . OR NUMBER
    (8) statement -> statement . OR statement
    (13) statement -> statement . POWER NUMBER
    (14) statement -> statement . POWER statement
    (25) statement -> statement . PLUS NUMBER
    (27) statement -> statement . PLUS statement
    (29) statement -> statement . MINUS NUMBER
    (31) statement -> statement . MINUS statement
    (33) statement -> statement . TIMES NUMBER
    (35) statement -> statement . TIMES statement
    (37) statement -> statement . DIVIDE NUMBER
    (39) statement -> statement . DIVIDE statement
    (41) statement -> statement . DOUBLE_EQUALS statement
    (44) statement -> statement . DOUBLE_EQUALS NUMBER
    (46) statement -> statement . DOUBLE_EQUALS STRING

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
    $end            reduce using rule 50 (statement -> IF statement COLON statement .)
    RPAREN          reduce using rule 50 (statement -> IF statement COLON statement .)
    COLON           reduce using rule 50 (statement -> IF statement COLON statement .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    POWER           shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    DOUBLE_EQUALS   shift and go to state 18

  ! AND             [ reduce using rule 50 (statement -> IF statement COLON statement .) ]
  ! OR              [ reduce using rule 50 (statement -> IF statement COLON statement .) ]
  ! POWER           [ reduce using rule 50 (statement -> IF statement COLON statement .) ]
  ! PLUS            [ reduce using rule 50 (statement -> IF statement COLON statement .) ]
  ! MINUS           [ reduce using rule 50 (statement -> IF statement COLON statement .) ]
  ! TIMES           [ reduce using rule 50 (statement -> IF statement COLON statement .) ]
  ! DIVIDE          [ reduce using rule 50 (statement -> IF statement COLON statement .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 50 (statement -> IF statement COLON statement .) ]


state 96

    (51) statement -> VARIABLE EQUALS ARRAY LPAREN LIST . RPAREN

    RPAREN          shift and go to state 101


state 97

    (52) statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE . COMMA VARIABLE RPAREN

    COMMA           shift and go to state 102


state 98

    (53) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE . COMMA VARIABLE RPAREN

    COMMA           shift and go to state 103


state 99

    (54) statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 104


state 100

    (55) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE . COMMA VARIABLE RPAREN

    COMMA           shift and go to state 105


state 101

    (51) statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .

    AND             reduce using rule 51 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    OR              reduce using rule 51 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    POWER           reduce using rule 51 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    PLUS            reduce using rule 51 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    MINUS           reduce using rule 51 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    TIMES           reduce using rule 51 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    DIVIDE          reduce using rule 51 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    DOUBLE_EQUALS   reduce using rule 51 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    $end            reduce using rule 51 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    RPAREN          reduce using rule 51 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)
    COLON           reduce using rule 51 (statement -> VARIABLE EQUALS ARRAY LPAREN LIST RPAREN .)


state 102

    (52) statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA . VARIABLE RPAREN

    VARIABLE        shift and go to state 106


state 103

    (53) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA . VARIABLE RPAREN

    VARIABLE        shift and go to state 107


state 104

    (54) statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .

    AND             reduce using rule 54 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 54 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    POWER           reduce using rule 54 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    PLUS            reduce using rule 54 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 54 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    TIMES           reduce using rule 54 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 54 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 54 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 54 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 54 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)
    COLON           reduce using rule 54 (statement -> VARIABLE EQUALS NP_SUM LPAREN VARIABLE RPAREN .)


state 105

    (55) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA . VARIABLE RPAREN

    VARIABLE        shift and go to state 108


state 106

    (52) statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE . RPAREN

    RPAREN          shift and go to state 109


state 107

    (53) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE . RPAREN

    RPAREN          shift and go to state 110


state 108

    (55) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE . RPAREN

    RPAREN          shift and go to state 111


state 109

    (52) statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .

    AND             reduce using rule 52 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    OR              reduce using rule 52 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    POWER           reduce using rule 52 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    PLUS            reduce using rule 52 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    MINUS           reduce using rule 52 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    TIMES           reduce using rule 52 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DIVIDE          reduce using rule 52 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 52 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    $end            reduce using rule 52 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 52 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    COLON           reduce using rule 52 (statement -> VARIABLE EQUALS NP_ADD LPAREN VARIABLE COMMA VARIABLE RPAREN .)


state 110

    (53) statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .

    AND             reduce using rule 53 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    OR              reduce using rule 53 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    POWER           reduce using rule 53 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    PLUS            reduce using rule 53 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    MINUS           reduce using rule 53 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    TIMES           reduce using rule 53 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DIVIDE          reduce using rule 53 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 53 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    $end            reduce using rule 53 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 53 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    COLON           reduce using rule 53 (statement -> VARIABLE EQUALS NP_SUBTRACT LPAREN VARIABLE COMMA VARIABLE RPAREN .)


state 111

    (55) statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .

    AND             reduce using rule 55 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    OR              reduce using rule 55 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    POWER           reduce using rule 55 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    PLUS            reduce using rule 55 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    MINUS           reduce using rule 55 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    TIMES           reduce using rule 55 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DIVIDE          reduce using rule 55 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 55 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    $end            reduce using rule 55 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 55 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    COLON           reduce using rule 55 (statement -> VARIABLE EQUALS NP_DOT_PRODUCT LPAREN VARIABLE COMMA VARIABLE RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 27 resolved as shift
WARNING: shift/reduce conflict for OR in state 27 resolved as shift
WARNING: shift/reduce conflict for POWER in state 27 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 27 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 27 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 27 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 27 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 27 resolved as shift
WARNING: shift/reduce conflict for AND in state 28 resolved as shift
WARNING: shift/reduce conflict for OR in state 28 resolved as shift
WARNING: shift/reduce conflict for POWER in state 28 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 28 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 28 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 28 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 28 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 28 resolved as shift
WARNING: shift/reduce conflict for AND in state 29 resolved as shift
WARNING: shift/reduce conflict for OR in state 29 resolved as shift
WARNING: shift/reduce conflict for POWER in state 29 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 29 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 29 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 29 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 29 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 29 resolved as shift
WARNING: shift/reduce conflict for AND in state 30 resolved as shift
WARNING: shift/reduce conflict for OR in state 30 resolved as shift
WARNING: shift/reduce conflict for POWER in state 30 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 30 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 30 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 30 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 30 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 30 resolved as shift
WARNING: shift/reduce conflict for AND in state 33 resolved as shift
WARNING: shift/reduce conflict for OR in state 33 resolved as shift
WARNING: shift/reduce conflict for POWER in state 33 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 33 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 33 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 33 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 33 resolved as shift
WARNING: shift/reduce conflict for AND in state 34 resolved as shift
WARNING: shift/reduce conflict for OR in state 34 resolved as shift
WARNING: shift/reduce conflict for POWER in state 34 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 34 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 34 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 34 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 34 resolved as shift
WARNING: shift/reduce conflict for AND in state 40 resolved as shift
WARNING: shift/reduce conflict for OR in state 40 resolved as shift
WARNING: shift/reduce conflict for POWER in state 40 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 40 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 40 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 40 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 40 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 40 resolved as shift
WARNING: shift/reduce conflict for AND in state 41 resolved as shift
WARNING: shift/reduce conflict for OR in state 41 resolved as shift
WARNING: shift/reduce conflict for POWER in state 41 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 41 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 41 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 41 resolved as shift
WARNING: shift/reduce conflict for AND in state 42 resolved as shift
WARNING: shift/reduce conflict for OR in state 42 resolved as shift
WARNING: shift/reduce conflict for POWER in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 42 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 42 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 42 resolved as shift
WARNING: shift/reduce conflict for AND in state 43 resolved as shift
WARNING: shift/reduce conflict for OR in state 43 resolved as shift
WARNING: shift/reduce conflict for POWER in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 43 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 43 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 43 resolved as shift
WARNING: shift/reduce conflict for AND in state 44 resolved as shift
WARNING: shift/reduce conflict for OR in state 44 resolved as shift
WARNING: shift/reduce conflict for POWER in state 44 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 44 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 44 resolved as shift
WARNING: shift/reduce conflict for AND in state 45 resolved as shift
WARNING: shift/reduce conflict for OR in state 45 resolved as shift
WARNING: shift/reduce conflict for POWER in state 45 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 45 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 45 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 45 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 45 resolved as shift
WARNING: shift/reduce conflict for AND in state 46 resolved as shift
WARNING: shift/reduce conflict for OR in state 46 resolved as shift
WARNING: shift/reduce conflict for POWER in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 46 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 46 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 46 resolved as shift
WARNING: shift/reduce conflict for AND in state 47 resolved as shift
WARNING: shift/reduce conflict for OR in state 47 resolved as shift
WARNING: shift/reduce conflict for POWER in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 47 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 47 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 47 resolved as shift
WARNING: shift/reduce conflict for AND in state 48 resolved as shift
WARNING: shift/reduce conflict for OR in state 48 resolved as shift
WARNING: shift/reduce conflict for POWER in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 48 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 48 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 48 resolved as shift
WARNING: shift/reduce conflict for AND in state 49 resolved as shift
WARNING: shift/reduce conflict for OR in state 49 resolved as shift
WARNING: shift/reduce conflict for POWER in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 49 resolved as shift
WARNING: shift/reduce conflict for AND in state 50 resolved as shift
WARNING: shift/reduce conflict for OR in state 50 resolved as shift
WARNING: shift/reduce conflict for POWER in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 50 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 50 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 50 resolved as shift
WARNING: shift/reduce conflict for AND in state 51 resolved as shift
WARNING: shift/reduce conflict for OR in state 51 resolved as shift
WARNING: shift/reduce conflict for POWER in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 51 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 51 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 51 resolved as shift
WARNING: shift/reduce conflict for AND in state 52 resolved as shift
WARNING: shift/reduce conflict for OR in state 52 resolved as shift
WARNING: shift/reduce conflict for POWER in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 52 resolved as shift
WARNING: shift/reduce conflict for AND in state 53 resolved as shift
WARNING: shift/reduce conflict for OR in state 53 resolved as shift
WARNING: shift/reduce conflict for POWER in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 53 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 53 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 53 resolved as shift
WARNING: shift/reduce conflict for AND in state 54 resolved as shift
WARNING: shift/reduce conflict for OR in state 54 resolved as shift
WARNING: shift/reduce conflict for POWER in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 54 resolved as shift
WARNING: shift/reduce conflict for AND in state 55 resolved as shift
WARNING: shift/reduce conflict for OR in state 55 resolved as shift
WARNING: shift/reduce conflict for POWER in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 55 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 55 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 55 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 56 resolved as shift
WARNING: shift/reduce conflict for AND in state 57 resolved as shift
WARNING: shift/reduce conflict for OR in state 57 resolved as shift
WARNING: shift/reduce conflict for POWER in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 57 resolved as shift
WARNING: shift/reduce conflict for AND in state 58 resolved as shift
WARNING: shift/reduce conflict for OR in state 58 resolved as shift
WARNING: shift/reduce conflict for POWER in state 58 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 58 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 58 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 58 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 58 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 58 resolved as shift
WARNING: shift/reduce conflict for AND in state 59 resolved as shift
WARNING: shift/reduce conflict for OR in state 59 resolved as shift
WARNING: shift/reduce conflict for POWER in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 59 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for POWER in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 61 resolved as shift
WARNING: shift/reduce conflict for OR in state 61 resolved as shift
WARNING: shift/reduce conflict for POWER in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for POWER in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 63 resolved as shift
WARNING: shift/reduce conflict for OR in state 63 resolved as shift
WARNING: shift/reduce conflict for POWER in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
WARNING: shift/reduce conflict for POWER in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
WARNING: shift/reduce conflict for POWER in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 66 resolved as shift
WARNING: shift/reduce conflict for OR in state 66 resolved as shift
WARNING: shift/reduce conflict for POWER in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 66 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 66 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for POWER in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for POWER in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for POWER in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for POWER in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for POWER in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for POWER in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 83 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for POWER in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 84 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 84 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 85 resolved as shift
WARNING: shift/reduce conflict for OR in state 85 resolved as shift
WARNING: shift/reduce conflict for POWER in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 85 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 85 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 85 resolved as shift
WARNING: shift/reduce conflict for AND in state 95 resolved as shift
WARNING: shift/reduce conflict for OR in state 95 resolved as shift
WARNING: shift/reduce conflict for POWER in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 95 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 95 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 95 resolved as shift
